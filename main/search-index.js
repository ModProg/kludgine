var searchIndex = JSON.parse('{\
"kludgine":{"doc":"2d graphics and app framework built atop wgpu.","tn":["Result","persistent_with_size","prelude","set","tilemap","0","Application","Core","Error","InternalWindowMessageSend","OpenableWindow","Other","RedrawRequester","RedrawStatus","Result","Runtime","SingleWindowApplication","Window","WindowBuilder","WindowCreator","WindowHandle","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","additional_scale","always_on_top","awaken","block_on","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","close_requested","decorations","default","downcast","downcast","downcast","downcast","downcast","downcast","downcast","estimate_next_frame","estimate_next_frame_instant","event","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_window_builder","initial_position","initial_size","initial_system_theme","initialize","initialize","initialize","inner_position","inner_size","into","into","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","maximized","maximized","new","open","open_window","open_window_count","outer_position","prelude","process_input","receive_character","redraw_requester","render","request_close","request_redraw","resizable","run","run","set_always_on_top","set_inner_size","set_maximized","set_minimized","set_needs_redraw","set_needs_update","set_outer_position","set_title","should_exit","source","spawn","target_fps","timeout","to_owned","to_owned","to_string","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","visible","window_title","with_always_on_top","with_decorations","with_icon","with_initial_system_theme","with_maximized","with_position","with_resizable","with_size","with_title","with_transparent","with_visible","0","0","0","A","AbntC1","AbntC2","Apostrophe","Apps","Asterisk","At","Ax","B","Back","Backslash","C","Calculator","Cancelled","Capital","Caret","Colon","Comma","Compose","Convert","Copy","Cut","D","Delete","DeviceId","Down","E","ElementState","End","Ended","Equals","Escape","Event","EventStatus","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","G","Grave","H","Home","I","Ignored","InputEvent","Insert","J","K","Kana","Kanji","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","Keyboard","L","LAlt","LBracket","LControl","LShift","LWin","Left","Left","LineDelta","M","Mail","MediaSelect","MediaStop","Middle","Minus","MouseButton","MouseButton","MouseMoved","MouseScrollDelta","MouseWheel","Moved","Mute","MyComputer","N","NavigateBackward","NavigateForward","NextTrack","NoConvert","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEquals","NumpadMultiply","NumpadSubtract","O","OEM102","Other","P","PageDown","PageUp","Paste","Pause","Period","PixelDelta","PlayPause","Plus","Power","Pressed","PrevTrack","Processed","Q","R","RAlt","RBracket","RControl","RShift","RWin","Released","Return","Right","Right","S","ScanCode","Scroll","Semicolon","Slash","Sleep","Snapshot","Space","Started","Stop","Sysrq","T","Tab","TouchPhase","U","Underline","Unlabeled","Up","V","VirtualKeyCode","VolumeDown","VolumeUp","W","Wake","WebBack","WebFavorites","WebForward","WebHome","WebRefresh","WebSearch","WebStop","X","Y","Yen","Z","adapt_into_using","adapt_into_using","adapt_into_using","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","device_id","downcast","downcast","downcast","eq","equivalent","event","fmt","fmt","fmt","from","from","from","into","into","into","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","upcast","upcast","upcast","update_with","button","delta","key","position","scancode","state","state","touch_phase","0","0","0","1","0","A","AbntC1","AbntC2","Apostrophe","Application","Apps","Asterisk","At","Ax","B","Back","Backslash","C","Calculator","Cancelled","Capital","Caret","Colon","Comma","Compose","Convert","Copy","Core","Cut","D","Delete","DeviceId","Down","E","ElementState","End","Ended","Equals","Error","Escape","Event","EventStatus","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","G","Grave","H","Home","I","Ignored","InputEvent","Insert","InternalWindowMessageSend","J","K","Kana","Kanji","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","Keyboard","L","LAlt","LBracket","LControl","LShift","LWin","Left","Left","LineDelta","M","Mail","MediaSelect","MediaStop","Middle","Minus","MouseButton","MouseButton","MouseMoved","MouseScrollDelta","MouseWheel","Moved","Mute","MyComputer","N","NavigateBackward","NavigateForward","NextTrack","NoConvert","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEquals","NumpadMultiply","NumpadSubtract","O","OEM102","Other","Other","P","PageDown","PageUp","Paste","Pause","Period","PixelDelta","PlayPause","Plus","Power","Pressed","PrevTrack","Processed","Q","R","RAlt","RBracket","RControl","RShift","RWin","RedrawRequester","RedrawStatus","Released","Return","Right","Right","Runtime","S","ScanCode","Scroll","Semicolon","SingleWindowApplication","Slash","Sleep","Snapshot","Space","Started","Stop","Sysrq","T","Tab","TouchPhase","U","Underline","Unlabeled","Up","V","VirtualKeyCode","VolumeDown","VolumeUp","W","Wake","WebBack","WebFavorites","WebForward","WebHome","WebRefresh","WebSearch","WebStop","Window","WindowBuilder","WindowCreator","WindowHandle","X","Y","Yen","Z","additional_scale","always_on_top","close_requested","decorations","device_id","event","get_window_builder","initial_position","initial_size","initial_system_theme","initialize","initialize","maximized","open_window_count","process_input","receive_character","render","resizable","should_exit","target_fps","transparent","update","visible","window_title","0","0","0","button","delta","key","position","scancode","state","state","touch_phase","0","0","0","1","ALICEBLUE","ANTIQUEWHITE","AQUA","AQUAMARINE","AZURE","BEIGE","BISQUE","BLACK","BLANCHEDALMOND","BLUE","BLUEVIOLET","BROWN","BURLYWOOD","CADETBLUE","CHARTREUSE","CHOCOLATE","CLEAR_BLACK","CLEAR_WHITE","CORAL","CORNFLOWERBLUE","CORNSILK","CRIMSON","CYAN","Color","DARKBLUE","DARKCYAN","DARKGOLDENROD","DARKGRAY","DARKGREEN","DARKGREY","DARKKHAKI","DARKMAGENTA","DARKOLIVEGREEN","DARKORANGE","DARKORCHID","DARKRED","DARKSALMON","DARKSEAGREEN","DARKSLATEBLUE","DARKSLATEGRAY","DARKSLATEGREY","DARKTURQUOISE","DARKVIOLET","DEEPPINK","DEEPSKYBLUE","DIMGRAY","DIMGREY","DODGERBLUE","Error","FIREBRICK","FLORALWHITE","FORESTGREEN","FUCHSIA","FrameRenderer","GAINSBORO","GHOSTWHITE","GOLD","GOLDENROD","GRAY","GREEN","GREENYELLOW","GREY","HONEYDEW","HOTPINK","INDIANRED","INDIGO","IVORY","Image","InvalidSpriteTag","Json","KHAKI","LAVENDER","LAVENDERBLUSH","LAWNGREEN","LEMONCHIFFON","LIGHTBLUE","LIGHTCORAL","LIGHTCYAN","LIGHTGOLDENRODYELLOW","LIGHTGRAY","LIGHTGREEN","LIGHTGREY","LIGHTPINK","LIGHTSALMON","LIGHTSEAGREEN","LIGHTSKYBLUE","LIGHTSLATEGRAY","LIGHTSLATEGREY","LIGHTSTEELBLUE","LIGHTYELLOW","LIME","LIMEGREEN","LINEN","MAGENTA","MAROON","MEDIUMAQUAMARINE","MEDIUMBLUE","MEDIUMORCHID","MEDIUMPURPLE","MEDIUMSEAGREEN","MEDIUMSLATEBLUE","MEDIUMSPRINGGREEN","MEDIUMTURQUOISE","MEDIUMVIOLETRED","MIDNIGHTBLUE","MINTCREAM","MISTYROSE","MOCCASIN","NAVAJOWHITE","NAVY","OLDLACE","OLIVE","OLIVEDRAB","ORANGE","ORANGERED","ORCHID","PALEGOLDENROD","PALEGREEN","PALETURQUOISE","PALEVIOLETRED","PAPAYAWHIP","PEACHPUFF","PERU","PINK","PLUM","POWDERBLUE","PURPLE","REBECCAPURPLE","RED","ROSYBROWN","ROYALBLUE","Result","SADDLEBROWN","SALMON","SANDYBROWN","SEAGREEN","SEASHELL","SIENNA","SILVER","SKYBLUE","SLATEBLUE","SLATEGRAY","SLATEGREY","SNOW","SPRINGGREEN","STEELBLUE","ShutdownCallback","SpriteParse","TAN","TEAL","THISTLE","TOMATO","TURQUOISE","Tessellation","VIOLET","WHEAT","WHITE","WHITESMOKE","YELLOW","YELLOWGREEN","adapt_into_using","adapt_into_using","adapt_into_using","alpha","blue","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","darken","default","downcast","downcast","downcast","eq","fmt","fmt","fmt","frame_renderer","from","from","from","from","from","from","from","from","green","include_aseprite_sprite","include_font","include_texture","into","into","into","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","lighten","math","ne","new","prelude","red","render_one_frame","rgba","run","scene","shape","shutdown","source","sprite","text","texture","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","upcast","upcast","upcast","visible","with_alpha","0","0","0","0","binding","buffers","canvas","color","device","error","frame","pipeline","prelude","renderable","renderer","sampler","shader","texture","transform","vertex","Bind","Binding","BindingGroup","BindingGroupLayout","BindingType","SampledTexture","Sampler","UniformBuffer","UniformBufferDynamic","binding","binding","set_index","set_index","size","stage","wgpu","wgpu","multisampled","DepthBuffer","Framebuffer","IndexBuffer","UniformBuffer","VertexBuffer","count","depth","elements","size","size","texture","texture","wgpu","wgpu","wgpu","Canvas","Color","blit","clear","fill","transfer","Bgra8","Rgba","Rgba8","a","a","a","b","b","b","g","g","g","r","r","r","Device","queue","surface","wgpu","Error","NoAdaptersFound","RequestDeviceError","0","Angle","Approx","Ceil","Degrees","DisplayScale","Displayable","Extents","ExtentsRect","Figure","Floor","One","Pixels","Pixels","Point","Points","Points","Radians","Rect","Rectlike","Round","Scale","Scaled","Scaled","Size","Sized","SizedRect","Vector","Vectorlike","Zero","abs","abs","abs","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_ne","abs_diff_ne","abs_diff_ne","abs_diff_ne","abs_diff_ne","abs_diff_ne","abs_diff_ne","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","additional_scale","approx_eq","approx_eq","approx_eq","approx_eq","approx_eq","approx_eq","approx_eq","approx_eq","approx_ne","area","area","as_extents","as_extents","as_extents","as_extents","as_rect","as_rect","as_rect","as_rect","as_sized","as_sized","as_sized","as_sized","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast","cast","cast","cast","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","ceil","ceil","ceil","ceil","ceil","ceil","ceil","ceil","center","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","contains","default","default","default","default","default","default","default","default","default","default","default","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","degrees","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","div","div","div","div","div","div","div","div","div","div","div","div","div_assign","div_assign","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dpi_scale","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extent","extents","floor","floor","floor","floor","floor","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_figures","from_figures","from_figures","from_height","from_width","from_x","from_x","from_y","from_y","get","get","height","height","height","height","height","height","inflate","inflate","inflate","inflate","intersection","into","into","into","into","into","into","into","into","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","inverse","is_empty","is_zero","max","max","max","max","min","min","min","min","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","ne","neg","neg","neg","neg","new","new","new","new","new","new","new","new","one","one","one","one","one","one","one","one","origin","origin","origin","origin","origin","origin","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","radians","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_ne","relative_ne","relative_ne","relative_ne","relative_ne","relative_ne","relative_ne","rem","rem","rem_assign","rem_assign","round","round","round","round","round","round","round","round","round_in","round_in","round_in","round_out","round_out","round_out","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_additional_scale","set_dpi_scale","signum","signum","signum","size","size","sized","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_non_empty","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_point","to_point","to_point","to_point","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_size","to_size","to_size","to_size","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","to_vector","to_vector","to_vector","to_vector","total_scale","transform_point","transform_vector","translate","translate","translate","translate","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_ne","ulps_ne","ulps_ne","ulps_ne","ulps_ne","ulps_ne","ulps_ne","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","width","width","width","width","width","width","x","x","x","x","y","y","y","y","zero","zero","zero","zero","0","0","0","0","AbsDiff","AbsDiffEq","Epsilon","Relative","RelativeEq","Ulps","UlpsEq","abs_diff_eq","abs_diff_eq","abs_diff_ne","abs_diff_ne","adapt_into_using","adapt_into_using","adapt_into_using","assert_abs_diff_eq","assert_abs_diff_ne","assert_relative_eq","assert_relative_ne","assert_ulps_eq","assert_ulps_ne","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","default","default","default_epsilon","default_max_relative","default_max_ulps","downcast","downcast","downcast","epsilon","epsilon","epsilon","epsilon","epsilon","epsilon","eq","eq","eq","from","from","from","into","into","into","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","max_relative","max_relative","max_ulps","max_ulps","ne","ne","ne","relative_eq","relative_eq","relative_ne","relative_ne","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","ulps_eq","ulps_eq","ulps_ne","ulps_ne","upcast","upcast","upcast","AsPrimitive","Bounded","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","E","Empty","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","Float","FloatConst","FloatErrorKind","FromPrimitive","FromStrRadixErr","Inv","Invalid","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","MulAdd","MulAddAssign","Num","NumAssign","NumAssignOps","NumAssignRef","NumCast","NumOps","NumRef","One","Output","Output","Output","PI","ParseFloatError","Pow","PrimInt","RefNum","SQRT_2","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","Signed","TAU","ToPrimitive","Unsigned","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","Zero","abs","abs","abs","abs_sub","abs_sub","abs_sub","acos","acosh","adapt_into_using","adapt_into_using","as_","asin","asinh","atan","atan2","atanh","borrow","borrow","borrow_mut","borrow_mut","bounds","cast","cast","cbrt","ceil","checked_add","checked_div","checked_mul","checked_neg","checked_pow","checked_rem","checked_shl","checked_shr","checked_sub","clamp","clamp_max","clamp_min","classify","cos","cosh","count_ones","count_zeros","downcast","downcast","epsilon","exp","exp2","exp_m1","float","floor","fmt","fmt","fmt","fract","from","from","from","from_be","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_le","from_str_radix","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","hypot","identities","infinity","int","integer_decode","into","into","into_color","into_color","into_color_unclamped","into_color_unclamped","inv","is_finite","is_infinite","is_nan","is_negative","is_normal","is_one","is_positive","is_sign_negative","is_sign_positive","is_zero","kind","leading_zeros","ln","ln_1p","log","log10","log2","max","max_value","max_value","min","min_positive_value","min_value","min_value","mul_add","mul_add","mul_add_assign","nan","neg_infinity","neg_zero","one","one","ops","pow","pow","pow","pow","powf","powi","real","recip","rotate_left","rotate_right","round","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","set_one","set_zero","sign","signed_shl","signed_shr","signum","signum","signum","sin","sin_cos","sinh","sqrt","swap_bytes","tan","tanh","to_be","to_degrees","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_le","to_radians","to_string","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","trailing_zeros","trunc","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","unsigned_shl","unsigned_shr","upcast","upcast","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","zero","zero","Bounded","max_value","min_value","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","Float","FloatConst","FloatCore","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","PI","SQRT_2","TAU","abs","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","ceil","classify","classify","cos","cosh","epsilon","epsilon","exp","exp2","exp_m1","floor","floor","fract","fract","hypot","infinity","infinity","integer_decode","integer_decode","is_finite","is_finite","is_infinite","is_infinite","is_nan","is_nan","is_normal","is_normal","is_sign_negative","is_sign_negative","is_sign_positive","is_sign_positive","ln","ln_1p","log","log10","log2","max","max","max_value","max_value","min","min","min_positive_value","min_positive_value","min_value","min_value","mul_add","nan","nan","neg_infinity","neg_infinity","neg_zero","neg_zero","powf","powi","powi","recip","recip","round","round","signum","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_degrees","to_radians","to_radians","trunc","trunc","One","Zero","is_one","is_zero","one","one","set_one","set_zero","zero","zero","PrimInt","count_ones","count_zeros","from_be","from_le","leading_zeros","pow","rotate_left","rotate_right","signed_shl","signed_shr","swap_bytes","to_be","to_le","trailing_zeros","unsigned_shl","unsigned_shr","checked","inv","mul_add","overflowing","saturating","wrapping","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","checked_add","checked_div","checked_mul","checked_neg","checked_rem","checked_shl","checked_shr","checked_sub","Inv","Output","inv","MulAdd","MulAddAssign","Output","mul_add","mul_add_assign","OverflowingAdd","OverflowingMul","OverflowingSub","overflowing_add","overflowing_mul","overflowing_sub","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","Output","Pow","checked_pow","pow","pow","Real","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","cos","cosh","epsilon","exp","exp2","exp_m1","floor","fract","hypot","is_sign_negative","is_sign_positive","ln","ln_1p","log","log10","log2","max","max_value","min","min_positive_value","min_value","mul_add","powf","powi","recip","round","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_radians","trunc","Signed","Unsigned","abs","abs","abs_sub","abs_sub","is_negative","is_positive","signum","signum","Frame","encoder","0","AbstractPipeline","Add","BlendFactor","BlendOp","Blending","One","OneMinusSrcAlpha","Pipeline","PipelineCore","PipelineDescription","PipelineLayout","PrepareContext","Set","SrcAlpha","Uniforms","Zero","bindings","description","fragment_shader","layout","pipeline","pipeline_layout","prepare","sets","setup","uniforms","vertex_layout","vertex_layout","vertex_shader","wgpu","0","AbstractPipeline","Add","Bgra8","Bind","Binding","BindingGroup","BindingGroupLayout","BindingType","BlendFactor","BlendOp","Blending","Blit","COMPUTE","Canvas","Clear","Clear","Color","DepthBuffer","Device","Draw","Error","FORMAT","FRAGMENT","Fill","Float","Float2","Float3","Float4","Frame","Framebuffer","IndexBuffer","Load","NONE","NoAdaptersFound","One","OneMinusSrcAlpha","Op","PassOp","Pipeline","PipelineCore","PipelineDescription","PipelineLayout","PrepareContext","RenderFrame","RenderPassExt","RenderTarget","Renderable","Renderer","RequestDeviceError","Rgba","Rgba8","SampledTexture","Sampler","Sampler","ScreenSpace","ScreenTransformation","Set","Shader","ShaderStages","SrcAlpha","TRANSPARENT","Texture","Transfer","UByte4","UniformBuffer","UniformBuffer","UniformBufferDynamic","Uniforms","VERTEX","VERTEX_FRAGMENT","VertexBuffer","VertexFormat","VertexLayout","WorldSpace","Zero","a","a","a","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","align","align","all","as_wgpu","b","b","b","begin","binding","binding","binding","binding","binding","binding","binding_group","bindings","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","blit","blit","blit","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","color_target","color_target","color_target","complement","configure","configure","constant","contains","copy","count","create_binding_group","create_binding_group_layout","create_buffer","create_buffer_from_slice","create_command_encoder","create_encoder","create_framebuffer","create_index","create_pipeline","create_pipeline_layout","create_sampler","create_shader","create_shader_from_wgsl","create_texture","create_uniform_buffer","create_zbuffer","current_frame","default","default","default","default","default","depth","depth","description","device","device","device_mut","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","draw","draw","draw_buffer","draw_buffer_range","draw_indexed","drop","easy_draw","elements","empty","encoder","encoder","encoder_mut","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extent","fill","fill","fill","fill","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_surface","for_surface","format","fragment_shader","frame","framebuffer","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","g","g","g","get_hash","hash","height","identity","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","is_all","is_empty","layout","ne","ne","ne","ne","ne","new","new","new","new","new","new","new","not","offscreen","offscreen","ortho","partial_cmp","partial_cmp","pass","pipeline","pipeline","pipeline_layout","prepare","present","queue","r","r","r","read","remove","sample_count","sampler","set","set_binding","set_easy_index_buffer","set_easy_pipeline","set_easy_vertex_buffer","set_index","set_index","sets","setup","size","size","size","size","size","size","size","slice","slice","source","stage","sub","sub_assign","submit","submit","surface","symmetric_difference","texture","texture","texture","to_array","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_wgpu","to_wgpu","toggle","transfer","transfer","transfer","transfer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniform_buffer","uniforms","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_pipeline","update_uniform_buffer","vertex_buffer","vertex_layout","vertex_layout","vertex_shader","view","view","wgpu","wgpu","wgpu","wgpu","wgpu","wgpu","wgpu","wgpu","wgpu","wgpu","wgpu","width","zbuffer","zdepth_target","zdepth_target","zdepth_target","multisampled","0","0","0","0","1","1","1","2","buf","f","rect","0","ADDRESS_MODE_CLAMP_TO_BORDER","ALL","ALPHA","ALPHA_BLENDING","ANISOTROPIC_FILTERING","Adapter","AdapterInfo","Add","AddressMode","All","Always","Astc10x10RgbaUnorm","Astc10x10RgbaUnormSrgb","Astc10x5RgbaUnorm","Astc10x5RgbaUnormSrgb","Astc10x6RgbaUnorm","Astc10x6RgbaUnormSrgb","Astc10x8RgbaUnorm","Astc10x8RgbaUnormSrgb","Astc12x10RgbaUnorm","Astc12x10RgbaUnormSrgb","Astc12x12RgbaUnorm","Astc12x12RgbaUnormSrgb","Astc4x4RgbaUnorm","Astc4x4RgbaUnormSrgb","Astc5x4RgbaUnorm","Astc5x4RgbaUnormSrgb","Astc5x5RgbaUnorm","Astc5x5RgbaUnormSrgb","Astc6x5RgbaUnorm","Astc6x5RgbaUnormSrgb","Astc6x6RgbaUnorm","Astc6x6RgbaUnormSrgb","Astc8x5RgbaUnorm","Astc8x5RgbaUnormSrgb","Astc8x6RgbaUnorm","Astc8x6RgbaUnormSrgb","Astc8x8RgbaUnorm","Astc8x8RgbaUnormSrgb","BASE_VERTEX","BLACK","BLUE","BLUE","BROWSER_WEBGPU","BUFFER_BINDING_ARRAY","Back","Backend","Backends","Bc1RgbaUnorm","Bc1RgbaUnormSrgb","Bc2RgbaUnorm","Bc2RgbaUnormSrgb","Bc3RgbaUnorm","Bc3RgbaUnormSrgb","Bc4RSnorm","Bc4RUnorm","Bc5RgSnorm","Bc5RgUnorm","Bc6hRgbSfloat","Bc6hRgbUfloat","Bc7RgbaUnorm","Bc7RgbaUnormSrgb","Bgra8Unorm","Bgra8UnormSrgb","BindGroup","BindGroupDescriptor","BindGroupEntry","BindGroupLayout","BindGroupLayoutDescriptor","BindGroupLayoutEntry","BindingResource","BindingType","BlendComponent","BlendFactor","BlendOperation","BlendState","BrowserWebGpu","Buffer","Buffer","Buffer","BufferAddress","BufferArray","BufferAsyncError","BufferBinding","BufferBindingType","BufferDescriptor","BufferSize","BufferSlice","BufferUsages","BufferView","BufferViewMut","CLEAR_COMMANDS","CLIPPER_INVOCATIONS","CLIPPER_PRIMITIVES_OUT","COLOR","COMPARISON_SAMPLERS","COMPUTE_SHADERS","COMPUTE_SHADER_INVOCATIONS","CONSERVATIVE_RASTERIZATION","COPY_BUFFER_ALIGNMENT","COPY_BYTES_PER_ROW_ALIGNMENT","COPY_DST","COPY_DST","COPY_SRC","COPY_SRC","CUBE_ARRAY_TEXTURES","Ccw","ClampToBorder","ClampToEdge","Clear","Color","ColorTargetState","ColorWrites","CommandBuffer","CommandBufferDescriptor","CommandEncoder","CommandEncoderDescriptor","CompareFunction","ComputePass","ComputePassDescriptor","ComputePipeline","ComputePipelineDescriptor","Constant","Cpu","Cube","CubeArray","Cw","D1","D1","D2","D2","D2Array","D3","D3","DEPTH_CLAMPING","DEVICE_LOCAL_IMAGE_COPIES","DX11","DX12","DecrementClamp","DecrementWrap","Depth","Depth24Plus","Depth24PlusStencil8","Depth32Float","DepthBiasState","DepthOnly","DepthStencilState","Device","DeviceDescriptor","DeviceType","DiscreteGpu","DownlevelCapabilities","DownlevelFlags","Dst","DstAlpha","Dx11","Dx12","DynamicOffset","EacRSnorm","EacRUnorm","EacRgSnorm","EacRgUnorm","Empty","Equal","Error","Etc2RgbA1Unorm","Etc2RgbA1UnormSrgb","Etc2RgbUnorm","Etc2RgbUnormSrgb","Extent3d","FRAGMENT_SHADER_INVOCATIONS","FRAGMENT_STORAGE","FRAGMENT_WRITABLE_STORAGE","Face","Features","Fifo","Fill","FilterMode","Float","Float16x2","Float16x4","Float32","Float32x2","Float32x3","Float32x4","Float64","Float64x2","Float64x3","Float64x4","FragmentState","Front","FrontFace","GL","GREEN","GREEN","Gl","Good","Greater","GreaterEqual","HighPerformance","IGNORE","INDEPENDENT_BLENDING","INDEX","INDIRECT","INDIRECT_EXECUTION","ImageCopyBuffer","ImageCopyBufferBase","ImageCopyTexture","ImageCopyTextureBase","ImageDataLayout","ImageSubresourceRange","Immediate","IncrementClamp","IncrementWrap","IndexFormat","Instance","Instance","IntegratedGpu","Invert","Keep","Label","Less","LessEqual","Limits","Line","LineList","LineStrip","Linear","Load","LoadOp","Lost","Lost","LowPower","MAPPABLE_PRIMARY_BUFFERS","MAP_ALIGNMENT","MAP_READ","MAP_WRITE","METAL","MULTI_DRAW_INDIRECT","MULTI_DRAW_INDIRECT_COUNT","Mailbox","Maintain","MapMode","Max","Metal","Min","MirrorRepeat","MultisampleState","NON_POWER_OF_TWO_MIPMAPPED_TEXTURES","Nearest","Never","NotEqual","OVER","Occlusion","One","OneMinusConstant","OneMinusDst","OneMinusDstAlpha","OneMinusSrc","OneMinusSrcAlpha","OpaqueBlack","OpaqueWhite","Operations","Origin3d","Other","OutOfMemory","OutOfMemoryError","Outdated","Outdated","PARTIALLY_BOUND_BINDING_ARRAY","PIPELINE_STATISTICS_QUERY","POLYGON_MODE_LINE","POLYGON_MODE_POINT","PREMULTIPLIED_ALPHA_BLENDING","PRIMARY","PUSH_CONSTANTS","PUSH_CONSTANT_ALIGNMENT","PipelineLayout","PipelineLayoutDescriptor","PipelineStatistics","PipelineStatisticsTypes","Point","PointList","Poll","PolygonMode","PowerPreference","PresentMode","PrimitiveState","PrimitiveTopology","PushConstantRange","QUERY_RESOLVE_BUFFER_ALIGNMENT","QUERY_SET_MAX_QUERIES","QUERY_SIZE","QuerySet","QuerySetDescriptor","QueryType","Queue","R16Float","R16Sint","R16Uint","R32Float","R32Sint","R32Uint","R8Sint","R8Snorm","R8Uint","R8Unorm","READ_ONLY_DEPTH_STENCIL","RED","RED","RENDER_ATTACHMENT","REPLACE","REPLACE","Read","ReadOnly","ReadWrite","RenderBundle","RenderBundleDepthStencil","RenderBundleDescriptor","RenderBundleEncoder","RenderBundleEncoderDescriptor","RenderPass","RenderPassColorAttachment","RenderPassDepthStencilAttachment","RenderPassDescriptor","RenderPipeline","RenderPipelineDescriptor","Repeat","Replace","RequestAdapterOptions","RequestAdapterOptionsBase","RequestDeviceError","ReverseSubtract","Rg11b10Float","Rg16Float","Rg16Sint","Rg16Uint","Rg32Float","Rg32Sint","Rg32Uint","Rg8Sint","Rg8Snorm","Rg8Uint","Rg8Unorm","Rgb10a2Unorm","Rgb9e5Ufloat","Rgba16Float","Rgba16Sint","Rgba16Uint","Rgba32Float","Rgba32Sint","Rgba32Uint","Rgba8Sint","Rgba8Snorm","Rgba8Uint","Rgba8Unorm","Rgba8UnormSrgb","SAMPLED_TEXTURE_AND_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING","SECONDARY","SHADER_FLOAT64","SHADER_PRIMITIVE_INDEX","SPIRV_SHADER_PASSTHROUGH","STORAGE","STORAGE_ATOMICS","STORAGE_BINDING","STORAGE_READ_WRITE","STORAGE_RESOURCE_BINDING_ARRAY","Sampler","Sampler","Sampler","SamplerBorderColor","SamplerDescriptor","ShaderLocation","ShaderModel","ShaderModule","ShaderModuleDescriptor","ShaderModuleDescriptorSpirV","ShaderSource","ShaderStages","Sint","Sint16x2","Sint16x4","Sint32","Sint32x2","Sint32x3","Sint32x4","Sint8x2","Sint8x4","Sm2","Sm4","Sm5","Snorm16x2","Snorm16x4","Snorm8x2","Snorm8x4","SpirV","Src","SrcAlpha","SrcAlphaSaturated","StencilFaceState","StencilOnly","StencilOperation","StencilState","Storage","StorageTexture","StorageTextureAccess","Suboptimal","Subtract","Surface","SurfaceConfiguration","SurfaceError","SurfaceStatus","SurfaceTexture","TEXTURE_ADAPTER_SPECIFIC_FORMAT_FEATURES","TEXTURE_BINDING","TEXTURE_BINDING_ARRAY","TEXTURE_COMPRESSION_ASTC_LDR","TEXTURE_COMPRESSION_BC","TEXTURE_COMPRESSION_ETC2","TIMESTAMP_QUERY","TRANSPARENT","Texture","Texture","TextureAspect","TextureDescriptor","TextureDimension","TextureFormat","TextureFormatFeatureFlags","TextureFormatFeatures","TextureSampleType","TextureUsages","TextureView","TextureView","TextureViewArray","TextureViewDescriptor","TextureViewDimension","Timeout","Timeout","Timestamp","TransparentBlack","TriangleList","TriangleStrip","UNIFORM","UNIFORM_BUFFER_AND_STORAGE_TEXTURE_ARRAY_NON_UNIFORM_INDEXING","UNSIZED_BINDING_ARRAY","Uint","Uint16","Uint16x2","Uint16x4","Uint32","Uint32","Uint32x2","Uint32x3","Uint32x4","Uint8x2","Uint8x4","UncapturedErrorHandler","Uniform","Unorm16x2","Unorm16x4","Unorm8x2","Unorm8x4","VERTEX","VERTEX_ATTRIBUTE_64BIT","VERTEX_SHADER_INVOCATIONS","VERTEX_STORAGE","VERTEX_STRIDE_ALIGNMENT","VERTEX_WRITABLE_STORAGE","VULKAN","ValidationError","Vertex","VertexAttribute","VertexBufferLayout","VertexFormat","VertexState","VertexStepMode","VirtualGpu","Vulkan","WHITE","Wait","Wgsl","Write","WriteOnly","ZERO","Zero","Zero","a","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","address_mode_u","address_mode_v","address_mode_w","all","all","all","all","all","all","all","all","all_native_mask","all_webgpu_mask","allowed_usages","alpha","alpha_to_coverage_enabled","anisotropy_clamp","array_layer_count","array_layer_count","array_stride","as_entire_binding","as_entire_buffer_binding","as_hal","as_image_copy","as_mut","as_ref","aspect","aspect","aspect","attributes","b","back","backend","base_array_layer","base_array_layer","base_mip_level","base_mip_level","begin","begin_compute_pass","begin_pipeline_statistics_query","begin_pipeline_statistics_query","begin_render_pass","bias","bind_group_layouts","binding","binding","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","blend","border_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","buffers","bytes_per_row","clamp","clamp_depth","clear_buffer","clear_texture","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","color","color_attachments","color_formats","compare","compare","compatible_surface","compatible_texture_dimension","complement","complement","complement","complement","complement","complement","complement","complement","compliant","configure","conservative","constant","contains","contains","contains","contains","contains","contains","contains","contains","copy_buffer_to_buffer","copy_buffer_to_texture","copy_texture_to_buffer","copy_texture_to_texture","count","count","create_adapter_from_hal","create_bind_group","create_bind_group_layout","create_buffer","create_buffer_init","create_command_encoder","create_compute_pipeline","create_device_from_hal","create_pipeline_layout","create_query_set","create_render_bundle_encoder","create_render_pipeline","create_sampler","create_shader_module","create_shader_module_spirv","create_shader_module_unchecked","create_surface","create_texture","create_texture_from_hal","create_texture_with_data","create_view","cull_mode","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","depth_compare","depth_fail_op","depth_ops","depth_or_array_layers","depth_read_only","depth_stencil","depth_stencil","depth_stencil_attachment","depth_write_enabled","deref","deref","deref_mut","describe","destroy","destroy","device","device_type","difference","difference","difference","difference","difference","difference","difference","difference","dimension","dispatch","dispatch_indirect","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downlevel_defaults","downlevel_webgl2_defaults","draw","draw","draw","draw","draw_buffer","draw_buffer_range","draw_indexed","draw_indexed","draw_indexed","draw_indexed","draw_indexed","draw_indexed_indirect","draw_indexed_indirect","draw_indexed_indirect","draw_indexed_indirect","draw_indirect","draw_indirect","draw_indirect","draw_indirect","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dst_factor","easy_draw","empty","empty","empty","empty","empty","empty","empty","empty","end_pipeline_statistics_query","end_pipeline_statistics_query","entries","entries","entry_point","entry_point","entry_point","enumerate_adapters","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execute_bundles","extend","extend","extend","extend","extend","extend","extend","extend","fail_op","features","features","filterable","finish","finish","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_fallback_adapter","format","format","format","format","format","format","fragment","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_hal","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","front","front_face","g","generate_report","get_bind_group_layout","get_bind_group_layout","get_current_texture","get_downlevel_properties","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_info","get_mapped_range","get_mapped_range_mut","get_preferred_format","get_texture_format_features","get_timestamp_period","has_dynamic_offset","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","include_spirv","include_spirv_raw","include_wgsl","insert","insert","insert","insert","insert","insert","insert","insert","insert_debug_marker","insert_debug_marker","insert_debug_marker","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_depth_enabled","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_enabled","is_enabled","is_read_only","is_read_only","is_strip","is_surface_supported","is_webgpu_compliant","label","label","label","label","label","label","label","label","label","label","label","label","label","layout","layout","layout","layout","limits","limits","limits","load","lod_max_clamp","lod_min_clamp","mag_filter","map_async","map_label","mask","max_bind_groups","max_dynamic_storage_buffers_per_pipeline_layout","max_dynamic_uniform_buffers_per_pipeline_layout","max_mips","max_push_constant_size","max_sampled_textures_per_shader_stage","max_samplers_per_shader_stage","max_storage_buffer_binding_size","max_storage_buffers_per_shader_stage","max_storage_textures_per_shader_stage","max_texture_array_layers","max_texture_dimension_1d","max_texture_dimension_2d","max_texture_dimension_3d","max_uniform_buffer_binding_size","max_uniform_buffers_per_shader_stage","max_vertex_attributes","max_vertex_buffer_array_stride","max_vertex_buffers","min_filter","min_storage_buffer_offset_alignment","min_uniform_buffer_offset_alignment","mip_level","mip_level_count","mip_level_count","mip_level_size","mipmap_filter","module","module","module","multi_draw_indexed_indirect","multi_draw_indexed_indirect_count","multi_draw_indirect","multi_draw_indirect_count","multisample","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","needs_ref_value","needs_ref_value","needs_ref_value","new","not","not","not","not","not","not","not","not","offset","offset","offset","on_submitted_work_done","on_uncaptured_error","operation","ops","origin","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pass_op","physical_size","poll","poll_all","polygon_mode","pop_debug_group","pop_debug_group","pop_debug_group","power_preference","present","present_mode","primitive","push_constant_ranges","push_debug_group","push_debug_group","push_debug_group","r","range","read_mask","remove","remove","remove","remove","remove","remove","remove","remove","request_adapter","request_device","resolve_query_set","resolve_target","resource","rows_per_image","sample_count","set","set","set","set","set","set","set","set","set_bind_group","set_bind_group","set_bind_group","set_bind_group","set_bind_group","set_binding","set_blend_constant","set_easy_index_buffer","set_easy_pipeline","set_easy_vertex_buffer","set_index_buffer","set_index_buffer","set_index_buffer","set_index_buffer","set_pipeline","set_pipeline","set_pipeline","set_pipeline","set_pipeline","set_push_constants","set_push_constants","set_push_constants","set_push_constants","set_push_constants","set_scissor_rect","set_stencil_reference","set_vertex_buffer","set_vertex_buffer","set_vertex_buffer","set_vertex_buffer","set_viewport","shader_location","shader_model","size","size","slice","slope_scale","source","source","source","src_factor","stages","start_capture","stencil","stencil_ops","stencil_read_only","step_mode","stop_capture","store","strip_index_format","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","submit","suboptimal","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","targets","texture","texture","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","topology","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","union","union","union","unmap","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","usage","uses_constant","using_alignment","using_resolution","util","vendor","vertex","vertex_attr_array","view","view","visibility","width","width","write_buffer","write_mask","write_mask","write_texture","write_timestamp","write_timestamp","write_timestamp","x","y","z","0","0","0","0","0","access","comparison","filtering","format","has_dynamic_offset","min_binding_size","multisampled","sample_type","ty","view_dimension","view_dimension","read_only","description","source","source","0","0","0","0","filterable","BufferInitDescriptor","DeviceExt","DownloadBuffer","RenderEncoder","StagingBelt","adapt_into_using","adapt_into_using","adapt_into_using","backend_bits_from_env","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","contents","create_buffer_init","create_texture_with_data","deref","downcast","downcast","downcast","draw","draw_indexed","draw_indexed_indirect","draw_indirect","eq","equivalent","finish","fmt","from","from","from","get_hash","hash","initialize_adapter_from_env","initialize_adapter_from_env_or_default","into","into","into","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","label","make_spirv","make_spirv_raw","ne","new","parse_backends_from_comma_list","power_preference_from_env","read_buffer","recall","set_bind_group","set_index_buffer","set_pipeline","set_push_constants","set_vertex_buffer","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","upcast","upcast","upcast","usage","write_buffer","Renderable","buffer","finish","Blit","Clear","Clear","Draw","Fill","Load","Op","PassOp","RenderFrame","RenderPassExt","RenderTarget","Renderer","Transfer","begin","color_target","depth","device","draw","draw_buffer","draw_buffer_range","draw_indexed","easy_draw","set_binding","set_easy_index_buffer","set_easy_pipeline","set_easy_vertex_buffer","size","view","wgpu","zdepth_target","0","0","0","1","1","1","2","buf","f","rect","0","Sampler","wgpu","Shader","ShaderStages","wgpu","Texture","extent","format","size","view","wgpu","ScreenSpace","ScreenTransformation","WorldSpace","Float","Float2","Float3","Float4","UByte4","VertexFormat","VertexLayout","0","Disconnected","Disconnected","Disconnected","Disconnected","Disconnected","Drain","Empty","Full","IntoIter","Iter","Receiver","RecvError","RecvTimeoutError","Selector","SendError","SendTimeoutError","Sender","Timeout","Timeout","TryIter","TryRecvError","TrySendError","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounded","capacity","capacity","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drain","drop","drop","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_inner","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_recv_async","into_send_async","into_sink","into_stream","is_disconnected","is_disconnected","is_empty","is_empty","is_full","is_full","iter","len","len","len","ne","ne","ne","new","next","next","next","next","recv","recv","recv_async","recv_deadline","recv_timeout","select","send","send","send_async","send_deadline","send_timeout","sink","stream","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_iter","try_recv","try_send","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unbounded","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","wait","wait_deadline","wait_timeout","0","0","0","0","RecvFut","RecvStream","SendFut","SendSink","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacity","capacity","capacity","clone","clone","clone_into","clone_into","downcast","downcast","downcast","downcast","drop","drop","from","from","from","from","into","into","into","into","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_future","into_future","is_disconnected","is_disconnected","is_disconnected","is_disconnected","is_empty","is_empty","is_empty","is_empty","is_full","is_full","is_full","is_full","is_terminated","is_terminated","is_terminated","len","len","len","len","poll","poll","poll_close","poll_flush","poll_next","poll_ready","start_send","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_poll","try_poll","try_poll_next","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","SelectError","Selector","Timeout","adapt_into_using","borrow","borrow_mut","clone","clone_into","downcast","eq","equivalent","fmt","fmt","from","into","into_color","into_color_unclamped","to_owned","to_string","try_from","try_into","try_into_color","type_id","upcast","FrameRenderer","ShutdownCallback","shutdown","0","0","0","0","0","0","A8","AnimationDecoder","Avif","Bgr","Bgr8","Bgr8","Bgra","Bgra8","Bgra8","Bmp","CHANNEL_COUNT","COLOR_MODEL","COLOR_TYPE","ColorType","Dds","Decoding","Delay","DynamicImage","EncodableLayout","Encoding","ExtendedColorType","Farbfeld","FlatSamples","Frame","Frames","GenericImage","GenericImageView","Gif","GrayAlphaImage","GrayImage","Hdr","Ico","ImageBgr8","ImageBgra8","ImageBuffer","ImageDecoder","ImageDecoderExt","ImageEncoder","ImageError","ImageFormat","ImageLuma16","ImageLuma8","ImageLumaA16","ImageLumaA8","ImageOutputFormat","ImageResult","ImageRgb16","ImageRgb8","ImageRgba16","ImageRgba8","InnerImage","InnerImageView","IoError","Jpeg","L1","L16","L16","L2","L4","L8","L8","La1","La16","La16","La2","La4","La8","La8","Limits","Luma","LumaA","Parameter","Pixel","Pixel","Pixels","Png","Pnm","Primitive","Progress","Reader","Rgb","Rgb1","Rgb16","Rgb16","Rgb2","Rgb4","Rgb8","Rgb8","RgbImage","Rgba","Rgba1","Rgba16","Rgba16","Rgba2","Rgba4","Rgba8","Rgba8","RgbaImage","SubImage","Subpixel","Tga","Tiff","Unknown","Unsupported","Unsupported","WebP","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adjust_contrast","apply","apply","apply","apply","apply","apply","apply","apply2","apply2","apply2","apply2","apply2","apply2","apply2","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_without_alpha","as_bgr8","as_bgra8","as_bytes","as_bytes","as_flat_samples","as_flat_samples_mut","as_flat_samples_u16","as_flat_samples_u8","as_luma16","as_luma8","as_luma_alpha16","as_luma_alpha8","as_mut","as_mut_bgr8","as_mut_bgra8","as_mut_luma16","as_mut_luma8","as_mut_luma_alpha16","as_mut_luma_alpha8","as_mut_rgb16","as_mut_rgb8","as_mut_rgba16","as_mut_rgba8","as_mut_slice","as_raw","as_ref","as_rgb16","as_rgb8","as_rgba16","as_rgba8","as_slice","as_view","as_view_mut","as_view_with_mut_samples","bits_per_pixel","blend","blend","blend","blend","blend","blend","blend","blend_pixel","blend_pixel","blend_pixel","blend_pixel","blur","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","bounds","bounds","brighten","buffer","buffer","buffer_mut","bytes_per_pixel","can_read","can_write","change_bounds","channel_count","channel_count","channel_count","channels","channels","channels","channels","channels","channels","channels","channels4","channels4","channels4","channels4","channels4","channels4","channels4","channels_mut","channels_mut","channels_mut","channels_mut","channels_mut","channels_mut","channels_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","codecs","collect_frames","color","color_hint","color_model","color_type","color_type","convert","copy_from","copy_within","copy_within","crop","crop_imm","current","default","delay","deref","deref_mut","dimensions","dimensions","dimensions","dimensions","dimensions","dimensions","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","enumerate_pixels","enumerate_pixels_mut","enumerate_rows","enumerate_rows_mut","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error","expand_palette","extensions_str","extents","filter3x3","fits","flat","fliph","flipv","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_channels","from_channels","from_channels","from_channels","from_channels","from_channels","from_channels","from_decoder","from_extension","from_fn","from_numer_denom_ms","from_parts","from_path","from_pixel","from_raw","from_saturating_duration","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_vec","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_mut_sample","get_pixel","get_pixel","get_pixel","get_pixel","get_pixel","get_pixel_mut","get_pixel_mut","get_pixel_mut","get_pixel_mut","get_pixel_mut","get_sample","grayscale","guess_format","has_aliased_samples","has_alpha","has_color","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","huerotate","image_dimensions","image_mut_slice","image_slice","imageops","in_bounds","in_bounds","in_bounds_index","index","index","index","index","index","index","index","index","index","index_ignoring_bounds","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","inner","inner","inner","inner","inner_mut","inner_mut","inner_mut","inner_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_bgr","into_bgr8","into_bgra","into_bgra8","into_buffer","into_bytes","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_flat_samples","into_frames","into_iter","into_iter","into_luma","into_luma16","into_luma8","into_luma_alpha","into_luma_alpha16","into_luma_alpha8","into_raw","into_reader","into_rgb","into_rgb16","into_rgb8","into_rgba","into_rgba16","into_rgba8","into_vec","invert","invert","invert","invert","invert","invert","invert","invert","io","is_normal","layout","left","load","load_from_memory","load_from_memory_with_format","map","map","map","map","map","map","map","map2","map2","map2","map2","map2","map2","map2","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_without_alpha","math","min_length","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new","new_bgr8","new_bgra8","new_luma16","new_luma8","new_luma_a16","new_luma_a8","new_rgb16","new_rgb8","new_rgba16","new_rgba8","next","next","numer_denom_ms","open","original_color_type","partial_cmp","pixels","pixels","pixels_mut","put_pixel","put_pixel","put_pixel","put_pixel","put_pixel","read_image","read_image_with_progress","read_rect","read_rect_with_progress","remaining","resize","resize_exact","resize_to_fill","rotate180","rotate270","rotate90","rows","rows_mut","sample_layout","samples","save","save","save_buffer","save_buffer_with_format","save_with_format","save_with_format","scanline_bytes","shrink_to","source","strides_cwh","sub_image","sub_image","thumbnail","thumbnail_exact","to_bgr","to_bgr","to_bgr","to_bgr","to_bgr","to_bgr","to_bgr","to_bgr","to_bgr8","to_bgra","to_bgra","to_bgra","to_bgra","to_bgra","to_bgra","to_bgra","to_bgra","to_bgra8","to_bytes","to_image","to_luma","to_luma","to_luma","to_luma","to_luma","to_luma","to_luma","to_luma","to_luma16","to_luma8","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha16","to_luma_alpha8","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb16","to_rgb8","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba16","to_rgba8","to_string","to_vec","top","total","total_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_buffer","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsafe_get_pixel","unsafe_get_pixel","unsafe_put_pixel","unsafe_put_pixel","unsharpen","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","view","view","width","width","with_monocolor","write_image","write_to","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","ConvertBuffer","EnumeratePixels","EnumeratePixelsMut","EnumerateRows","EnumerateRowsMut","Pixels","PixelsMut","Rows","RowsMut","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","convert","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","len","len","len","len","len","len","len","len","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","Color","Decoding","DecodingError","DimensionError","DimensionMismatch","Encoding","EncodingError","Exact","FailedAlready","Format","Generic","GenericFeature","ImageError","ImageFormatHint","ImageResult","InsufficientMemory","IoError","LimitError","LimitErrorKind","Limits","Name","NoMoreData","Parameter","ParameterError","ParameterErrorKind","PathExtension","Unknown","Unsupported","UnsupportedError","UnsupportedErrorKind","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_hint","format_hint","format_hint","from","from","from","from","from","from","from","from","from","from","from","from","from_format_and_kind","from_format_hint","from_format_hint","from_kind","from_kind","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","kind","kind","kind","ne","ne","ne","ne","new","new","source","source","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","0","0","0","0","0","0","0","0","0","0","0","0","0","ColumnMajorPacked","Error","FlatSamples","ImagePacked","NormalForm","NormalFormRequired","PixelPacked","RowMajorPacked","SampleLayout","TooLarge","Unaliased","View","ViewMut","WrongColor","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","blend_pixel","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","channel_stride","channels","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","color_hint","column_major_packed","dimensions","dimensions","downcast","downcast","downcast","downcast","downcast","eq","eq","eq","equivalent","equivalent","equivalent","extents","fits","flat","flat","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_hash","get_hash","get_hash","get_mut_sample","get_mut_sample","get_pixel","get_pixel","get_pixel_mut","get_sample","get_sample","has_aliased_samples","hash","hash","hash","height","height_stride","image_mut_slice","image_mut_slice","image_slice","image_slice","in_bounds","in_bounds","in_bounds","in_bounds_index","index","index_ignoring_bounds","inner","inner","inner_mut","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_inner","into_inner","is_normal","layout","min_length","min_length","min_length","ne","ne","partial_cmp","put_pixel","row_major_packed","samples","samples","samples","shrink_to","shrink_to","shrink_to","strides_cwh","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_upgrade","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","width","width_stride","0","0","BiLevel","CatmullRom","Color","ColorMap","FilterType","Gaussian","Lanczos3","Nearest","Triangle","adapt_into_using","adapt_into_using","blur","borrow","borrow","borrow_mut","borrow_mut","brighten","clone","clone","clone_into","clone_into","colorops","contrast","crop","crop_imm","dither","downcast","downcast","eq","filter3x3","flip_horizontal","flip_horizontal_in","flip_horizontal_in_place","flip_vertical","flip_vertical_in","flip_vertical_in_place","fmt","from","from","grayscale","has_lookup","has_lookup","horizontal_gradient","huerotate","index_colors","index_of","index_of","into","into","into_color","into_color","into_color_unclamped","into_color_unclamped","invert","lookup","lookup","map_color","map_color","overlay","overlay_bounds","replace","resize","rotate180","rotate180_in","rotate180_in_place","rotate270","rotate270_in","rotate90","rotate90_in","thumbnail","tile","to_owned","to_owned","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","unsharpen","upcast","upcast","vertical_gradient","BiLevel","Color","ColorMap","brighten","brighten_in_place","contrast","contrast_in_place","dither","grayscale","has_lookup","huerotate","huerotate_in_place","index_colors","index_of","invert","lookup","map_color","Reader","adapt_into_using","borrow","borrow_mut","clear_format","decode","downcast","format","from","into","into_color","into_color_unclamped","into_dimensions","into_inner","new","open","set_format","try_from","try_into","try_into_color","type_id","upcast","with_format","with_guessed_format","Rect","adapt_into_using","borrow","borrow_mut","clone","clone_into","downcast","eq","equivalent","fmt","from","get_hash","hash","height","into","into_color","into_color_unclamped","ne","nq","to_owned","try_from","try_into","try_into_color","type_id","upcast","utils","width","x","y","NeuQuant","adapt_into_using","borrow","borrow_mut","downcast","from","from","has_lookup","index_of","index_of","init","into","into_color","into_color_unclamped","lookup","lookup","map_color","map_pixel","new","try_from","try_into","try_into_color","type_id","upcast","clamp","LazyStatic","Target","__Deref","deref","initialize","lazy_static","Angle","ExtentsRect","Figure","Pixels","Point","Rect","Scale","Scaled","Size","Unknown","Vector","extent","origin","Angle","AnimationMode","Batch","Begin","Color","ControlPoint","Cubic","End","Endpoint","Figure","Fill","Font","Forward","FrameRenderer","Line","Path","PathBuilder","PathEvent","PingPong","Pixels","Pixels","Point","Points","PreparedSpan","Quadratic","Rect","Reverse","Scale","Scaled","Scaled","Scene","Shape","ShutdownCallback","Size","Sprite","SpriteAnimation","SpriteAnimations","SpriteCollection","SpriteFrame","SpriteMap","SpriteRotation","SpriteSheet","SpriteSource","SpriteSourceSublocation","Stroke","Target","Text","Texture","Unknown","Vector","_","_","_","_","_","_","_","_","_","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","add_foreign_sheet","add_sheet","angle","animation_for","animations","any_key_pressed","approx_eq","approx_ne","area","around","around_center","as_extents","as_rect","as_sized","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cast_unit","cast_unit","cast_unit","ceil","center","circle","clip","clipped_to","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","color","color","contains","cubic_curve_to","current_frame","current_tag","default","default","default","default","default","default","default","default","deref","deref","deref","deserialize","destination","destination_rect","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","duration","elapsed","end_frame","entire_texture","family","fill","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frames","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_foreign_sheet","get_frame","height","id","id","image","include_aseprite_sprite","include_font","include_texture","inflate","intersection","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","is_empty","is_initial_frame","joined","joined_square","keys_pressed","line_to","line_width","load","load_aseprite_json","location","location","location","merged","metrics","mode","modifiers_pressed","mul","mul","mul","new","new","new","new","new","new","new","new","new","new","new","new","none","now","offset","offset_by","offset_point","offset_point_raw","one","options","options","origin","polygon","prepare","quadratic_curve_to","rect","remaining_frame_duration","render","render_at","render_at","render_at_with_alpha","render_baseline_at","render_raw_with_alpha_in_box","render_with_alpha","render_with_alpha_in_box","render_within","rgba_pixels","round","scale","scene","scene_mut","serialize","set_current_tag","set_dpi_scale","set_size","set_system_theme","shutdown","single_frame","size","size","size","size_in_pixels","source","source","sprite","sprite","sprite","sprite_map","sprites","sprites","start_frame","stroke","system_theme","texture","texture","tile_size","to_non_empty","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_point","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_size","to_sprite_map","to_vector","translate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_bytes","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","width","window_icon","with_duration","with_mode","with_options","zero","at","close","ctrl","ctrl1","ctrl2","first","from","from","from","last","to","to","to","BeginFrame","Element","EndFrame","Modifiers","Render","Scene","SceneEvent","Shape","Sprite","Target","Text","adapt_into_using","adapt_into_using","adapt_into_using","alt","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clip","command_key","control","downcast","downcast","downcast","fmt","from","from","from","into","into","into","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","keys_pressed","offset","operating_system","primary_modifier","scene","shift","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","upcast","upcast","upcast","0","clip","clip","span","sprite","0","size","Batch","Begin","ControlPoint","Cubic","End","Endpoint","Fill","Line","Path","PathBuilder","PathEvent","Quadratic","Shape","Stroke","color","color","options","options","at","close","ctrl","ctrl1","ctrl2","first","from","from","from","last","to","to","to","AnimationMode","Forward","Joined","Lyon","Normal","PingPong","Rect","RenderedSprite","Reverse","Sprite","SpriteAnimation","SpriteAnimations","SpriteCollection","SpriteFrame","SpriteMap","SpriteRotation","SpriteSheet","SpriteSource","SpriteSourceLocation","SpriteSourceSublocation","Srgb","VertexShaderSource","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","angle","animations","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","clone","clone","clone_into","clone_into","destination","downcast","downcast","downcast","downcast","duration","fmt","fmt","frames","from","from","from","from","into","into","into","into","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","location","location","mode","sampler_format","shader","shader","shader","size","source","source","sprite","sprites","texture","texture","texture_format","texture_format","texture_format","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","0","0","Font","Text","bundled_fonts","prepared","ROBOTO","ROBOTO_BLACK","ROBOTO_BLACK_ITALIC","ROBOTO_BOLD","ROBOTO_BOLD_ITALIC","ROBOTO_ITALIC","ROBOTO_LIGHT","ROBOTO_LIGHT_ITALIC","ROBOTO_MEDIUM","ROBOTO_MEDIUM_ITALIC","ROBOTO_THIN","ROBOTO_THIN_ITALIC","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","from","from","from","from","from","from","from","from","from","from","from","from","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","into","into","into","into","into","into","into","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","GlyphInfo","PreparedSpan","PreparedSpanData","VMetrics","adapt_into_using","adapt_into_using","adapt_into_using","ascent","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","characters","clone","clone_into","color","descent","downcast","downcast","downcast","fmt","fmt","fmt","font","from","from","from","from","glyph","glyphs","height","into","into","into","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","line_gap","line_height","location","location","metrics","size","source","source_offset","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","upcast","upcast","upcast","width","width","Texture","image","dpi","error","event","event_loop","monitor","platform","window","Logical","Logical","LogicalPosition","LogicalSize","Physical","Physical","PhysicalPosition","PhysicalSize","Pixel","Position","Size","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast","cast","cast","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","downcast","downcast","downcast","downcast","downcast","downcast","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_f64","from_logical","from_logical","from_physical","from_physical","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","height","height","into","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","ne","ne","ne","ne","ne","ne","new","new","new","new","new","new","to_logical","to_logical","to_logical","to_logical","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical","to_physical","to_physical","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","validate_scale_factor","width","width","x","x","y","y","0","0","0","0","ExternalError","NotSupported","NotSupportedError","Os","OsError","adapt_into_using","adapt_into_using","adapt_into_using","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","downcast","downcast","downcast","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","into","into","into","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","upcast","upcast","upcast","0","0","A","ALT","AbntC1","AbntC2","Added","Apostrophe","Apps","Asterisk","At","Ax","AxisId","AxisMotion","B","Back","Backslash","Button","ButtonId","C","CTRL","Calculator","Calibrated","Cancelled","Capital","Caret","CloseRequested","Colon","Comma","Compose","Convert","Copy","CursorEntered","CursorLeft","CursorMoved","Cut","D","Delete","Destroyed","DeviceEvent","DeviceEvent","DeviceId","Down","DroppedFile","E","ElementState","End","Ended","Equals","Escape","Event","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","Focused","Force","G","Grave","H","Home","HoveredFile","HoveredFileCancelled","I","Init","Insert","J","K","Kana","Kanji","Key","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","KeyboardInput","KeyboardInput","L","LAlt","LBracket","LControl","LOGO","LShift","LWin","Left","Left","LineDelta","LoopDestroyed","M","Mail","MainEventsCleared","MediaSelect","MediaStop","Middle","Minus","ModifiersChanged","ModifiersState","Motion","MouseButton","MouseInput","MouseMotion","MouseScrollDelta","MouseWheel","MouseWheel","Moved","Moved","Mute","MyComputer","N","NavigateBackward","NavigateForward","NewEvents","NextTrack","NoConvert","Normalized","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEquals","NumpadMultiply","NumpadSubtract","O","OEM102","Other","P","PageDown","PageUp","Paste","Pause","Period","PixelDelta","PlayPause","Plus","Poll","Power","Pressed","PrevTrack","Q","R","RAlt","RBracket","RControl","RShift","RWin","ReceivedCharacter","RedrawEventsCleared","RedrawRequested","Released","Removed","Resized","ResumeTimeReached","Resumed","Return","Right","Right","S","SHIFT","ScaleFactorChanged","ScanCode","Scroll","Semicolon","Slash","Sleep","Snapshot","Space","StartCause","Started","Stop","Suspended","Sysrq","T","Tab","Text","ThemeChanged","Touch","Touch","TouchPhase","TouchpadPressure","U","Underline","Unlabeled","Up","UserEvent","V","VirtualKeyCode","VolumeDown","VolumeUp","W","WaitCancelled","Wake","WebBack","WebFavorites","WebForward","WebHome","WebRefresh","WebSearch","WebStop","WindowEvent","WindowEvent","X","Y","Yen","Z","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","all","alt","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","contains","ctrl","default","device_id","difference","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dummy","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","id","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","is_all","is_empty","location","logo","map_nonuser_event","modifiers","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","normalized","not","partial_cmp","partial_cmp","partial_cmp","phase","remove","scancode","set","shift","state","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_static","to_static","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","virtual_keycode","0","axis","button","codepoint","delta","delta","state","value","0","0","0","device_id","event","event","window_id","0","altitude_angle","force","max_possible_force","0","0","0","1","requested_resume","requested_resume","start","start","0","0","0","0","0","0","0","0","0","axis","button","delta","device_id","device_id","device_id","device_id","device_id","device_id","device_id","device_id","input","is_synthetic","modifiers","modifiers","modifiers","new_inner_size","phase","position","pressure","scale_factor","stage","state","value","0","ControlFlow","EventLoop","EventLoopClosed","EventLoopProxy","EventLoopWindowTarget","Exit","Poll","Wait","WaitUntil","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","available_monitors","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","create_proxy","default","deref","downcast","downcast","downcast","downcast","downcast","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_hash","hash","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","is_wayland","is_x11","ne","ne","new","new_any_thread","new_wayland","new_wayland_any_thread","new_x11","new_x11_any_thread","primary_monitor","run","run_return","send_event","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","wayland_display","with_user_event","0","MonitorHandle","VideoMode","adapt_into_using","adapt_into_using","bit_depth","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","downcast","downcast","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","get_hash","hash","into","into","into_color","into_color","into_color_unclamped","into_color_unclamped","monitor","name","native_id","ne","ne","partial_cmp","partial_cmp","position","refresh_rate","scale_factor","size","size","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","upcast","upcast","video_modes","run_return","unix","EventLoopExtRunReturn","UserEvent","run_return","Combo","Desktop","Dialog","Dnd","Dock","DropdownMenu","EventLoopExtUnix","EventLoopWindowTargetExtUnix","LibraryOpenError","Menu","MonitorHandleExtUnix","Normal","Notification","PopupMenu","Splash","Toolbar","Tooltip","Utility","WindowBuilderExtUnix","WindowExtUnix","XNotSupported","XOpenDisplayFailed","XWindowType","adapt_into_using","adapt_into_using","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","downcast","downcast","eq","equivalent","fmt","fmt","fmt","from","from","from","get_hash","hash","into","into","into_color","into_color","into_color_unclamped","into_color_unclamped","is_ready","is_wayland","is_x11","native_id","new_any_thread","new_wayland","new_wayland_any_thread","new_x11","new_x11_any_thread","source","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","upcast","upcast","wayland_display","wayland_display","wayland_surface","with_app_id","with_base_size","with_class","with_gtk_theme_variant","with_override_redirect","with_resize_increments","with_x11_screen","with_x11_visual","with_x11_window_type","x11","xcb_connection","xlib_display","xlib_screen_id","xlib_window","0","DeviceId","EventLoop","EventLoopProxy","EventLoopWindowTarget","LibraryOpenError","MonitorHandle","UnownedWindow","VideoMode","Window","WindowId","XConnection","XError","XNotSupported","XOpenDisplayFailed","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","alloc_class_hint","alloc_size_hints","alloc_wm_hints","available_monitors","available_monitors","bit_depth","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change_property","check_errors","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","create_proxy","current_monitor","cursor_cache","deref","description","display","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drag_window","drop","drop","dummy","dummy","dummy","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","error_code","ffi","flush_requests","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus_window","from","from","from","from","from","from","from","from","from","from","from","fullscreen","get_atom","get_atom_unchecked","get_atoms","get_crtc_mode","get_frame_extents_heuristic","get_geometry","get_hash","get_hash","get_hash","get_hash","get_monitor_for_window","get_motif_hints","get_normal_hints","get_output_info","get_property","get_wm_hints","get_xft_dpi","hash","hash","hash","hash","id","ignore_error","inner_position","inner_size","into","into","into","into","into","into","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","is_maximized","is_top_level","keycode_to_keysym","latest_error","lookup_keysym","lookup_utf8","minor_code","monitor","name","native_identifier","ne","ne","ne","new","new","new","new","outer_position","outer_size","partial_cmp","partial_cmp","partial_cmp","position","primary_monitor","primary_monitor","query_keymap","query_pointer","raw_window_handle","refresh_rate","request_code","request_redraw","request_user_attention","run","run_return","scale_factor","scale_factor","select_xinput_events","select_xkb_events","select_xrandr_input","send_client_msg","send_event","send_event","set_always_on_top","set_crtc_config","set_cursor_grab","set_cursor_icon","set_cursor_icon","set_cursor_position","set_cursor_position_physical","set_cursor_visible","set_decorations","set_fullscreen","set_ime_position","set_inner_size","set_max_inner_size","set_maximized","set_min_inner_size","set_minimized","set_motif_hints","set_normal_hints","set_outer_position","set_resizable","set_title","set_visible","set_window_icon","set_wm_hints","shared_state","size","size","sync_with_server","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","translate_coords","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update_cached_wm_info","util","video_modes","x11_fd","x_connection","xcb_connection","xconn","xcursor","xinput2","xlib","xlib_display","xlib_screen_id","xlib_window","xlib_xcb","xlib_xconnection","xrandr","xrandr_1_5","xrender","0","Above","AllHints","AllTemporary","AllValues","AllocAll","AllocNone","AllowExposures","AlreadyGrabbed","Always","AnyButton","AnyKey","AnyModifier","AnyPropertyType","ArcChord","ArcPieSlice","AspectRatio","AsyncBoth","AsyncKeyboard","AsyncPointer","Atom","AutoRepeatModeDefault","AutoRepeatModeOff","AutoRepeatModeOn","BadAccess","BadAlloc","BadAtom","BadColor","BadCursor","BadDrawable","BadFont","BadGC","BadGlyph","BadGlyphSet","BadIDChoice","BadImplementation","BadLength","BadMatch","BadName","BadPictFormat","BadPictOp","BadPicture","BadPixmap","BadRRCrtc","BadRRMode","BadRROutput","BadRRProvider","BadRequest","BadValue","BadWindow","BarrierEventID","Below","Bool","BottomIf","Button1","Button1Mask","Button1MotionMask","Button2","Button2Mask","Button2MotionMask","Button3","Button3Mask","Button3MotionMask","Button4","Button4Mask","Button4MotionMask","Button5","Button5Mask","Button5MotionMask","ButtonMotionMask","ButtonPress","ButtonPressMask","ButtonRelease","ButtonReleaseMask","CPAlphaMap","CPAlphaXOrigin","CPAlphaYOrigin","CPClipMask","CPClipXOrigin","CPClipYOrigin","CPComponentAlpha","CPDither","CPGraphicsExposure","CPLastBit","CPPolyEdge","CPPolyMode","CPRepeat","CPSubwindowMode","CWBackPixel","CWBackPixmap","CWBackingPixel","CWBackingPlanes","CWBackingStore","CWBitGravity","CWBorderPixel","CWBorderPixmap","CWBorderWidth","CWColormap","CWCursor","CWDontPropagate","CWEventMask","CWHeight","CWOverrideRedirect","CWSaveUnder","CWSibling","CWStackMode","CWWidth","CWWinGravity","CWX","CWY","CapButt","CapNotLast","CapProjecting","CapRound","CenterGravity","CirculateNotify","CirculateRequest","ClientMessage","ClientMessageData","ClipByChildren","Colormap","ColormapChangeMask","ColormapInstalled","ColormapNotify","ColormapUninstalled","Complex","ConfigureNotify","ConfigureRequest","Connection","ControlMapIndex","ControlMask","Convex","CoordModeOrigin","CoordModePrevious","CopyFromParent","CreateNotify","CurrentTime","Cursor","CursorShape","DefaultBlanking","DefaultExposures","Depth","DestroyAll","DestroyNotify","DirectColor","DisableAccess","DisableScreenInterval","DisableScreenSaver","Display","DoBlue","DoGreen","DoRed","DontAllowExposures","DontPreferBlanking","Drawable","EastGravity","EnableAccess","EnterNotify","EnterWindowMask","EvenOddRule","Expose","ExposureMask","False","FamilyChaos","FamilyDECnet","FamilyInternet","FamilyInternet6","FamilyServerInterpreted","FillOpaqueStippled","FillSolid","FillStippled","FillTiled","FilterBest","FilterBilinear","FilterConvolution","FilterFast","FilterGood","FilterNearest","FirstExtensionError","FocusChangeMask","FocusIn","FocusOut","Font","FontChange","FontLeftToRight","FontRightToLeft","ForgetGravity","GC","GCArcMode","GCBackground","GCCapStyle","GCClipMask","GCClipXOrigin","GCClipYOrigin","GCDashList","GCDashOffset","GCFillRule","GCFillStyle","GCFont","GCForeground","GCFunction","GCGraphicsExposures","GCJoinStyle","GCLastBit","GCLineStyle","GCLineWidth","GCPlaneMask","GCStipple","GCSubwindowMode","GCTile","GCTileStipXOrigin","GCTileStipYOrigin","GContext","GXand","GXandInverted","GXandReverse","GXclear","GXcopy","GXcopyInverted","GXequiv","GXinvert","GXnand","GXnoop","GXnor","GXor","GXorInverted","GXorReverse","GXset","GXxor","GenericEvent","Glyph","GlyphSet","GrabFrozen","GrabInvalidTime","GrabModeAsync","GrabModeSync","GrabNotViewable","GrabSuccess","GraphicsExpose","GravityNotify","GrayScale","HeightValue","HostDelete","HostInsert","IconMaskHint","IconPixmapHint","IconPositionHint","IconWindowHint","IconicState","ImageFns","IncludeInferiors","InputFocus","InputHint","InputOnly","InputOutput","IsUnmapped","IsUnviewable","IsViewable","JoinBevel","JoinMiter","JoinRound","KBAutoRepeatMode","KBBellDuration","KBBellPercent","KBBellPitch","KBKey","KBKeyClickPercent","KBLed","KBLedMode","KeyCode","KeyPress","KeyPressMask","KeyRelease","KeyReleaseMask","KeySym","KeymapNotify","KeymapStateMask","LASTEvent","LSBFirst","LastExtensionError","LeaveNotify","LeaveWindowMask","LedModeOff","LedModeOn","LineDoubleDash","LineOnOffDash","LineSolid","LockMapIndex","LockMask","LowerHighest","MSBFirst","MapNotify","MapRequest","MappingBusy","MappingFailed","MappingKeyboard","MappingModifier","MappingNotify","MappingPointer","MappingSuccess","Mask","Mod1MapIndex","Mod1Mask","Mod2MapIndex","Mod2Mask","Mod3MapIndex","Mod3Mask","Mod4MapIndex","Mod4Mask","Mod5MapIndex","Mod5Mask","MotionNotify","NoEventMask","NoExpose","NoSymbol","NoValue","Nonconvex","NorthEastGravity","NorthGravity","NorthWestGravity","NotUseful","NotifyAncestor","NotifyDetailNone","NotifyGrab","NotifyHint","NotifyInferior","NotifyNonlinear","NotifyNonlinearVirtual","NotifyNormal","NotifyPointer","NotifyPointerRoot","NotifyUngrab","NotifyVirtual","NotifyWhileGrabbed","OpenError","Opposite","OwnerGrabButtonMask","PAllHints","PAspect","PBaseSize","PMaxSize","PMinSize","PPosition","PResizeInc","PSize","PWinGravity","ParentRelative","PictFormat","PictFormatAlpha","PictFormatAlphaMask","PictFormatBlue","PictFormatBlueMask","PictFormatColormap","PictFormatDepth","PictFormatGreen","PictFormatGreenMask","PictFormatID","PictFormatRed","PictFormatRedMask","PictFormatType","PictOpAdd","PictOpAtop","PictOpAtopReverse","PictOpBlendMaximum","PictOpBlendMinimum","PictOpClear","PictOpColorBurn","PictOpColorDodge","PictOpConjointAtop","PictOpConjointAtopReverse","PictOpConjointClear","PictOpConjointDst","PictOpConjointIn","PictOpConjointInReverse","PictOpConjointMaximum","PictOpConjointMinimum","PictOpConjointOut","PictOpConjointOutReverse","PictOpConjointOver","PictOpConjointOverReverse","PictOpConjointSrc","PictOpConjointXor","PictOpDarken","PictOpDifference","PictOpDisjointAtop","PictOpDisjointAtopReverse","PictOpDisjointClear","PictOpDisjointDst","PictOpDisjointIn","PictOpDisjointInReverse","PictOpDisjointMaximum","PictOpDisjointMinimum","PictOpDisjointOut","PictOpDisjointOutReverse","PictOpDisjointOver","PictOpDisjointOverReverse","PictOpDisjointSrc","PictOpDisjointXor","PictOpDst","PictOpExclusion","PictOpHSLColor","PictOpHSLHue","PictOpHSLLuminosity","PictOpHSLSaturation","PictOpHardLight","PictOpIn","PictOpInReverse","PictOpLighten","PictOpMaximum","PictOpMinimum","PictOpMultiply","PictOpOut","PictOpOutReverse","PictOpOver","PictOpOverReverse","PictOpOverlay","PictOpSaturate","PictOpScreen","PictOpSoftLight","PictOpSrc","PictOpXor","PictStandardA1","PictStandardA4","PictStandardA8","PictStandardARGB32","PictStandardRGB24","PictTypeDirect","PictTypeIndexed","Picture","Pixmap","PlaceOnBottom","PlaceOnTop","PointerMotionHintMask","PointerMotionMask","PointerRoot","PointerWindow","PolyEdgeSharp","PolyEdgeSmooth","PolyModeImprecise","PolyModePrecise","PreferBlanking","PropModeAppend","PropModePrepend","PropModeReplace","PropertyChangeMask","PropertyDelete","PropertyNewValue","PropertyNotify","PseudoColor","RANDR_MAJOR","RANDR_MINOR","RANDR_NAME","RRCrtc","RRCrtcChangeNotifyMask","RRMode","RRNotify","RRNotify_CrtcChange","RRNotify_OutputChange","RRNotify_OutputProperty","RRNotify_ProviderChange","RRNotify_ProviderProperty","RRNotify_ResourceChange","RRNumberErrors","RRNumberEvents","RRNumberRequests","RROutput","RROutputChangeNotifyMask","RROutputPropertyNotifyMask","RRProvider","RRProviderChangeNotifyMask","RRProviderPropertyNotifyMask","RRResourceChangeNotifyMask","RRScreenChangeNotify","RRScreenChangeNotifyMask","RRSetConfigFailed","RRSetConfigInvalidConfigTime","RRSetConfigInvalidTime","RRSetConfigSuccess","RRTransformProjective","RRTransformScaleDown","RRTransformScaleUp","RRTransformUnit","RR_BCast","RR_CSync","RR_CSyncNegative","RR_CSyncPositive","RR_Capability_None","RR_Capability_SinkOffload","RR_Capability_SinkOutput","RR_Capability_SourceOffload","RR_Capability_SourceOutput","RR_ClockDivideBy2","RR_Connected","RR_Disconnected","RR_DoubleClock","RR_DoubleScan","RR_HSkewPresent","RR_HSyncNegative","RR_HSyncPositive","RR_Interlace","RR_PROPERTY_BACKLIGHT","RR_PROPERTY_BORDER","RR_PROPERTY_BORDER_DIMENSIONS","RR_PROPERTY_CLONE_LIST","RR_PROPERTY_COMPATIBILITY_LIST","RR_PROPERTY_CONNECTOR_NUMBER","RR_PROPERTY_CONNECTOR_TYPE","RR_PROPERTY_GUID","RR_PROPERTY_RANDR_EDID","RR_PROPERTY_RANDR_TILE","RR_PROPERTY_SIGNAL_FORMAT","RR_PROPERTY_SIGNAL_PROPERTIES","RR_PixelMultiplex","RR_Reflect_X","RR_Reflect_Y","RR_Rotate_0","RR_Rotate_180","RR_Rotate_270","RR_Rotate_90","RR_UnknownConnection","RR_VSyncNegative","RR_VSyncPositive","RaiseLowest","Region","RenderNumberErrors","ReparentNotify","RepeatNone","RepeatNormal","RepeatPad","RepeatReflect","ReplayKeyboard","ReplayPointer","ResizeRedirectMask","ResizeRequest","RetainPermanent","RetainTemporary","RevertToNone","RevertToParent","RevertToPointerRoot","Rotation","Screen","ScreenFormat","ScreenSaverActive","ScreenSaverReset","SelectionClear","SelectionNotify","SelectionRequest","SetModeDelete","SetModeInsert","ShiftMapIndex","ShiftMask","SizeID","SouthEastGravity","SouthGravity","SouthWestGravity","StateHint","StaticColor","StaticGravity","StaticGray","Status","StippleShape","StructureNotifyMask","SubPixelHorizontalBGR","SubPixelHorizontalRGB","SubPixelNone","SubPixelUnknown","SubPixelVerticalBGR","SubPixelVerticalRGB","SubpixelOrder","SubstructureNotifyMask","SubstructureRedirectMask","Success","SyncBoth","SyncKeyboard","SyncPointer","TileShape","Time","TopIf","True","TrueColor","USPosition","USSize","UnmapGravity","UnmapNotify","Unsorted","VisibilityChangeMask","VisibilityFullyObscured","VisibilityNotify","VisibilityPartiallyObscured","VisibilityUnobscured","Visual","VisualAllMask","VisualBitsPerRGBMask","VisualBlueMaskMask","VisualClassMask","VisualColormapSizeMask","VisualDepthMask","VisualGreenMaskMask","VisualID","VisualIDMask","VisualNoMask","VisualRedMaskMask","VisualScreenMask","WestGravity","WhenMapped","WidthValue","WindingRule","Window","WindowGroupHint","XA_ARC","XA_ATOM","XA_BITMAP","XA_CAP_HEIGHT","XA_CARDINAL","XA_COLORMAP","XA_COPYRIGHT","XA_CURSOR","XA_CUT_BUFFER0","XA_CUT_BUFFER1","XA_CUT_BUFFER2","XA_CUT_BUFFER3","XA_CUT_BUFFER4","XA_CUT_BUFFER5","XA_CUT_BUFFER6","XA_CUT_BUFFER7","XA_DRAWABLE","XA_END_SPACE","XA_FAMILY_NAME","XA_FONT","XA_FONT_NAME","XA_FULL_NAME","XA_INTEGER","XA_ITALIC_ANGLE","XA_MAX_SPACE","XA_MIN_SPACE","XA_NORM_SPACE","XA_NOTICE","XA_PIXMAP","XA_POINT","XA_POINT_SIZE","XA_PRIMARY","XA_QUAD_WIDTH","XA_RECTANGLE","XA_RESOLUTION","XA_RESOURCE_MANAGER","XA_RGB_BEST_MAP","XA_RGB_BLUE_MAP","XA_RGB_COLOR_MAP","XA_RGB_DEFAULT_MAP","XA_RGB_GRAY_MAP","XA_RGB_GREEN_MAP","XA_RGB_RED_MAP","XA_SECONDARY","XA_STRIKEOUT_ASCENT","XA_STRIKEOUT_DESCENT","XA_STRING","XA_SUBSCRIPT_X","XA_SUBSCRIPT_Y","XA_SUPERSCRIPT_X","XA_SUPERSCRIPT_Y","XA_UNDERLINE_POSITION","XA_UNDERLINE_THICKNESS","XA_VISUALID","XA_WEIGHT","XA_WINDOW","XA_WM_CLASS","XA_WM_CLIENT_MACHINE","XA_WM_COMMAND","XA_WM_HINTS","XA_WM_ICON_NAME","XA_WM_ICON_SIZE","XA_WM_NAME","XA_WM_NORMAL_HINTS","XA_WM_SIZE_HINTS","XA_WM_TRANSIENT_FOR","XA_WM_ZOOM_HINTS","XA_X_HEIGHT","XActivateScreenSaver","XAddConnectionWatch","XAddExtension","XAddHost","XAddHosts","XAddPixel","XAddToExtensionList","XAddToSaveSet","XAllPlanes","XAllocClassHint","XAllocColor","XAllocColorCells","XAllocColorPlanes","XAllocIconSize","XAllocNamedColor","XAllocSizeHints","XAllocStandardColormap","XAllocWMHints","XAllowDeviceEvents","XAllowEvents","XAnimCursor","XAnyClassPtr","XAnyEvent","XArc","XAutoRepeatOff","XAutoRepeatOn","XBaseFontNameListOfFontSet","XBell","XBitmapBitOrder","XBitmapPad","XBitmapUnit","XBlackPixel","XBlackPixelOfScreen","XBufferOverflow","XButtonEvent","XButtonPressedEvent","XButtonReleasedEvent","XCBOwnsEventQueue","XCellsOfScreen","XChangeActivePointerGrab","XChangeDeviceControl","XChangeDeviceDontPropagateList","XChangeDeviceKeyMapping","XChangeDeviceProperty","XChangeFeedbackControl","XChangeGC","XChangeKeyboardControl","XChangeKeyboardDevice","XChangeKeyboardMapping","XChangePointerControl","XChangePointerDevice","XChangeProperty","XChangeSaveSet","XChangeWindowAttributes","XChar2b","XCharStruct","XCheckIfEvent","XCheckMaskEvent","XCheckTypedEvent","XCheckTypedWindowEvent","XCheckWindowEvent","XCircle","XCirculateEvent","XCirculateRequestEvent","XCirculateSubwindows","XCirculateSubwindowsDown","XCirculateSubwindowsUp","XClassHint","XClearArea","XClearWindow","XClientMessageEvent","XClipBox","XCloseDevice","XCloseDisplay","XCloseIM","XCloseOM","XColor","XColormapEvent","XComposeStatus","XCompoundTextStyle","XConfigureEvent","XConfigureRequestEvent","XConfigureWindow","XConicalGradient","XConnectionNumber","XConnectionWatchProc","XContext","XContextDependentDrawing","XContextualDrawing","XConvertCase","XConvertSelection","XCopyArea","XCopyColormapAndFree","XCopyGC","XCopyPlane","XCreateBitmapFromData","XCreateColormap","XCreateFontCursor","XCreateFontSet","XCreateGC","XCreateGlyphCursor","XCreateIC","XCreateImage","XCreateOC","XCreatePixmap","XCreatePixmapCursor","XCreatePixmapFromBitmapData","XCreateRegion","XCreateSimpleWindow","XCreateWindow","XCreateWindowEvent","XCrossingEvent","XDefaultColormap","XDefaultColormapOfScreen","XDefaultDepth","XDefaultDepthOfScreen","XDefaultGC","XDefaultGCOfScreen","XDefaultRootWindow","XDefaultScreen","XDefaultScreenOfDisplay","XDefaultString","XDefaultVisual","XDefaultVisualOfScreen","XDefineCursor","XDeleteContext","XDeleteDeviceProperty","XDeleteModifiermapEntry","XDeleteProperty","XDestroyIC","XDestroyImage","XDestroyOC","XDestroyRegion","XDestroySubwindows","XDestroyWindow","XDestroyWindowEvent","XDevice","XDeviceBell","XDeviceControl","XDeviceInfo","XDeviceState","XDeviceTimeCoord","XDirectionalDependentDrawing","XDisableAccessControl","XDisplayCells","XDisplayHeight","XDisplayHeightMM","XDisplayKeycodes","XDisplayMotionBufferSize","XDisplayName","XDisplayOfIM","XDisplayOfOM","XDisplayOfScreen","XDisplayPlanes","XDisplayString","XDisplayWidth","XDisplayWidthMM","XDoesBackingStore","XDoesSaveUnders","XDouble","XDrawArc","XDrawArcs","XDrawImageString","XDrawImageString16","XDrawLine","XDrawLines","XDrawPoint","XDrawPoints","XDrawRectangle","XDrawRectangles","XDrawSegments","XDrawString","XDrawString16","XDrawText","XDrawText16","XEDataObject","XEHeadOfExtensionList","XESetBeforeFlush","XESetCloseDisplay","XESetCopyEventCookie","XESetCopyGC","XESetCreateFont","XESetCreateGC","XESetError","XESetErrorString","XESetEventToWire","XESetFlushGC","XESetFreeFont","XESetFreeGC","XESetPrintErrorValues","XESetWireToError","XESetWireToEvent","XESetWireToEventCookie","XEmptyRegion","XEnableAccessControl","XEnterWindowEvent","XEqualRegion","XErrorEvent","XEvent","XEventMaskOfScreen","XEventQueueOwner","XEventsQueued","XExposeEvent","XExtCodes","XExtData","XExtendedMaxRequestSize","XExtensionVersion","XExtentsOfFontSet","XF86XK_AddFavorite","XF86XK_ApplicationLeft","XF86XK_ApplicationRight","XF86XK_AudioCycleTrack","XF86XK_AudioForward","XF86XK_AudioLowerVolume","XF86XK_AudioMedia","XF86XK_AudioMicMute","XF86XK_AudioMute","XF86XK_AudioNext","XF86XK_AudioPause","XF86XK_AudioPlay","XF86XK_AudioPrev","XF86XK_AudioRaiseVolume","XF86XK_AudioRandomPlay","XF86XK_AudioRecord","XF86XK_AudioRepeat","XF86XK_AudioRewind","XF86XK_AudioStop","XF86XK_Away","XF86XK_Back","XF86XK_BackForward","XF86XK_Battery","XF86XK_Blue","XF86XK_Bluetooth","XF86XK_Book","XF86XK_BrightnessAdjust","XF86XK_CD","XF86XK_Calculater","XF86XK_Calculator","XF86XK_Calendar","XF86XK_Clear","XF86XK_ClearGrab","XF86XK_Close","XF86XK_Community","XF86XK_ContrastAdjust","XF86XK_Copy","XF86XK_Cut","XF86XK_CycleAngle","XF86XK_DOS","XF86XK_Display","XF86XK_Documents","XF86XK_Eject","XF86XK_Excel","XF86XK_Explorer","XF86XK_Favorites","XF86XK_Finance","XF86XK_Forward","XF86XK_FrameBack","XF86XK_FrameForward","XF86XK_Game","XF86XK_Go","XF86XK_Green","XF86XK_Hibernate","XF86XK_History","XF86XK_HomePage","XF86XK_HotLinks","XF86XK_KbdBrightnessDown","XF86XK_KbdBrightnessUp","XF86XK_KbdLightOnOff","XF86XK_Launch0","XF86XK_Launch1","XF86XK_Launch2","XF86XK_Launch3","XF86XK_Launch4","XF86XK_Launch5","XF86XK_Launch6","XF86XK_Launch7","XF86XK_Launch8","XF86XK_Launch9","XF86XK_LaunchA","XF86XK_LaunchB","XF86XK_LaunchC","XF86XK_LaunchD","XF86XK_LaunchE","XF86XK_LaunchF","XF86XK_LightBulb","XF86XK_LogGrabInfo","XF86XK_LogOff","XF86XK_LogWindowTree","XF86XK_Mail","XF86XK_MailForward","XF86XK_Market","XF86XK_Meeting","XF86XK_Memo","XF86XK_MenuKB","XF86XK_MenuPB","XF86XK_Messenger","XF86XK_ModeLock","XF86XK_MonBrightnessDown","XF86XK_MonBrightnessUp","XF86XK_Music","XF86XK_MyComputer","XF86XK_MySites","XF86XK_New","XF86XK_News","XF86XK_Next_VMode","XF86XK_OfficeHome","XF86XK_Open","XF86XK_OpenURL","XF86XK_Option","XF86XK_Paste","XF86XK_Phone","XF86XK_Pictures","XF86XK_PowerDown","XF86XK_PowerOff","XF86XK_Prev_VMode","XF86XK_Q","XF86XK_Red","XF86XK_Refresh","XF86XK_Reload","XF86XK_Reply","XF86XK_RockerDown","XF86XK_RockerEnter","XF86XK_RockerUp","XF86XK_RotateWindows","XF86XK_RotationKB","XF86XK_RotationPB","XF86XK_Save","XF86XK_ScreenSaver","XF86XK_ScrollClick","XF86XK_ScrollDown","XF86XK_ScrollUp","XF86XK_Search","XF86XK_Select","XF86XK_Send","XF86XK_Shop","XF86XK_Sleep","XF86XK_Spell","XF86XK_SplitScreen","XF86XK_Standby","XF86XK_Start","XF86XK_Stop","XF86XK_Subtitle","XF86XK_Support","XF86XK_Suspend","XF86XK_Switch_VT_1","XF86XK_Switch_VT_10","XF86XK_Switch_VT_11","XF86XK_Switch_VT_12","XF86XK_Switch_VT_2","XF86XK_Switch_VT_3","XF86XK_Switch_VT_4","XF86XK_Switch_VT_5","XF86XK_Switch_VT_6","XF86XK_Switch_VT_7","XF86XK_Switch_VT_8","XF86XK_Switch_VT_9","XF86XK_TaskPane","XF86XK_Terminal","XF86XK_Time","XF86XK_ToDoList","XF86XK_Tools","XF86XK_TopMenu","XF86XK_TouchpadOff","XF86XK_TouchpadOn","XF86XK_TouchpadToggle","XF86XK_Travel","XF86XK_UWB","XF86XK_Ungrab","XF86XK_User1KB","XF86XK_User2KB","XF86XK_UserPB","XF86XK_VendorHome","XF86XK_Video","XF86XK_View","XF86XK_WLAN","XF86XK_WWW","XF86XK_WakeUp","XF86XK_WebCam","XF86XK_WheelButton","XF86XK_Word","XF86XK_Xfer","XF86XK_Yellow","XF86XK_ZoomIn","XF86XK_ZoomOut","XF86XK_iTouch","XFeedbackControl","XFeedbackState","XFetchBuffer","XFetchBytes","XFetchName","XFillArc","XFillArcs","XFillPolygon","XFillRectangle","XFillRectangles","XFilterEvent","XFilters","XFindContext","XFindOnExtensionList","XFixed","XFlush","XFlushGC","XFocusChangeEvent","XFocusInEvent","XFocusOutEvent","XFontProp","XFontSet","XFontSetExtents","XFontStruct","XFontsOfFontSet","XForceScreenSaver","XFree","XFreeColormap","XFreeColors","XFreeCursor","XFreeDeviceControl","XFreeDeviceList","XFreeDeviceMotionEvents","XFreeDeviceState","XFreeEventData","XFreeExtensionList","XFreeFeedbackList","XFreeFont","XFreeFontInfo","XFreeFontNames","XFreeFontPath","XFreeFontSet","XFreeGC","XFreeModifiermap","XFreePixmap","XFreeStringList","XGCValues","XGContextFromGC","XGenericEventCookie","XGeometry","XGetAtomName","XGetAtomNames","XGetClassHint","XGetCommand","XGetDefault","XGetDeviceButtonMapping","XGetDeviceControl","XGetDeviceDontPropagateList","XGetDeviceFocus","XGetDeviceKeyMapping","XGetDeviceModifierMapping","XGetDeviceMotionEvents","XGetDeviceProperty","XGetErrorDatabaseText","XGetErrorText","XGetEventData","XGetExtensionVersion","XGetFeedbackControl","XGetFontPath","XGetFontProperty","XGetGCValues","XGetGeometry","XGetICValues","XGetIMValues","XGetIconName","XGetIconSizes","XGetImage","XGetInputFocus","XGetKeyboardControl","XGetKeyboardMapping","XGetModifierMapping","XGetMotionEvents","XGetNormalHints","XGetOCValues","XGetOMValues","XGetPixel","XGetPointerControl","XGetPointerMapping","XGetRGBColormaps","XGetScreenSaver","XGetSelectedExtensionEvents","XGetSelectionOwner","XGetSizeHints","XGetStandardColormap","XGetSubImage","XGetTextProperty","XGetTransientForHint","XGetVisualInfo","XGetWMClientMachine","XGetWMColormapWindows","XGetWMHints","XGetWMIconName","XGetWMName","XGetWMNormalHints","XGetWMProtocols","XGetWMSizeHints","XGetWindowAttributes","XGetWindowProperty","XGetXCBConnection","XGetZoomHints","XGlyphElt16","XGlyphElt32","XGlyphElt8","XGlyphInfo","XGrabButton","XGrabDevice","XGrabDeviceButton","XGrabDeviceKey","XGrabKey","XGrabKeyboard","XGrabPointer","XGrabServer","XGraphicsExposeEvent","XGravityEvent","XHeightMMOfScreen","XHeightOfScreen","XHostAddress","XIAcceptTouch","XIAddMaster","XIAddMasterInfo","XIAllDevices","XIAllMasterDevices","XIAllowEvents","XIAllowTouchEvents","XIAlreadyGrabbed","XIAnyButton","XIAnyClassInfo","XIAnyHierarchyChangeInfo","XIAnyKeycode","XIAsyncDevice","XIAsyncPair","XIAsyncPairedDevice","XIAttachSlave","XIAttachSlaveInfo","XIAttachToMaster","XIBarrierDeviceIsGrabbed","XIBarrierEvent","XIBarrierPointerReleased","XIBarrierReleasePointer","XIBarrierReleasePointerInfo","XIBarrierReleasePointers","XIButtonClass","XIButtonClassInfo","XIButtonState","XIC","XICCEncodingStyle","XICCallback","XICProc","XIChangeHierarchy","XIChangeProperty","XIClearMask","XID","XIDefineCursor","XIDeleteProperty","XIDependentTouch","XIDetachSlave","XIDetachSlaveInfo","XIDeviceChange","XIDeviceChangedEvent","XIDeviceDisabled","XIDeviceEnabled","XIDeviceEvent","XIDeviceInfo","XIDirectTouch","XIEnterEvent","XIEvent","XIEventMask","XIFloating","XIFloatingSlave","XIFocusInEvent","XIFocusOutEvent","XIFreeDeviceInfo","XIGetClientPointer","XIGetFocus","XIGetProperty","XIGetSelectedEvents","XIGrabButton","XIGrabDevice","XIGrabEnter","XIGrabFocusIn","XIGrabFrozen","XIGrabInvalidTime","XIGrabKeycode","XIGrabModeAsync","XIGrabModeSync","XIGrabModeTouch","XIGrabModifiers","XIGrabNotViewable","XIGrabSuccess","XIGrabTouchBegin","XIGrabtypeButton","XIGrabtypeEnter","XIGrabtypeFocusIn","XIGrabtypeKeycode","XIGrabtypeTouchBegin","XIGroupState","XIHierarchyEvent","XIHierarchyInfo","XIKeyClass","XIKeyClassInfo","XIKeyRepeat","XILeaveEvent","XIListProperties","XIM","XIMAbsolutePosition","XIMBackwardChar","XIMBackwardWord","XIMCallback","XIMCaretDirection","XIMCaretDown","XIMCaretStyle","XIMCaretUp","XIMDontChange","XIMFeedback","XIMForwardChar","XIMForwardWord","XIMIsInvisible","XIMIsPrimary","XIMIsSecondary","XIMLineEnd","XIMLineStart","XIMNextLine","XIMOfIC","XIMPreeditArea","XIMPreeditCallbacks","XIMPreeditCaretCallbackStruct","XIMPreeditDrawCallbackStruct","XIMPreeditNone","XIMPreeditNothing","XIMPreeditPosition","XIMPreviousLine","XIMProc","XIMStatusArea","XIMStatusCallbacks","XIMStatusNone","XIMStatusNothing","XIMText","XIMTextString","XIMaskIsSet","XIMasterAdded","XIMasterKeyboard","XIMasterPointer","XIMasterRemoved","XIModeAbsolute","XIModeRelative","XIModifierState","XINotifyAncestor","XINotifyDetailNone","XINotifyGrab","XINotifyInferior","XINotifyNonlinear","XINotifyNonlinearVirtual","XINotifyNormal","XINotifyPassiveGrab","XINotifyPassiveUngrab","XINotifyPointer","XINotifyPointerRoot","XINotifyUngrab","XINotifyVirtual","XINotifyWhileGrabbed","XIPointerEmulated","XIPropModeAppend","XIPropModePrepend","XIPropModeReplace","XIPropertyCreated","XIPropertyDeleted","XIPropertyEvent","XIPropertyModified","XIQueryDevice","XIQueryPointer","XIQueryVersion","XIRawEvent","XIRejectTouch","XIRemoveMaster","XIRemoveMasterInfo","XIReplayDevice","XIScrollClass","XIScrollClassInfo","XIScrollFlagNoEmulation","XIScrollFlagPreferred","XIScrollTypeHorizontal","XIScrollTypeVertical","XISelectEvents","XISetClientPointer","XISetFocus","XISetMask","XISlaveAdded","XISlaveAttached","XISlaveDetached","XISlaveKeyboard","XISlavePointer","XISlaveRemoved","XISlaveSwitch","XISyncDevice","XISyncPair","XITouchClass","XITouchClassInfo","XITouchEmulatingPointer","XITouchOwnershipEvent","XITouchPendingEnd","XIUndefineCursor","XIUngrabButton","XIUngrabDevice","XIUngrabEnter","XIUngrabFocusIn","XIUngrabKeycode","XIUngrabTouchBegin","XIValuatorClass","XIValuatorClassInfo","XIValuatorState","XIWarpPointer","XI_2_Major","XI_2_Minor","XI_BarrierHit","XI_BarrierHitMask","XI_BarrierLeave","XI_BarrierLeaveMask","XI_ButtonPress","XI_ButtonPressMask","XI_ButtonRelease","XI_ButtonReleaseMask","XI_DeviceChanged","XI_DeviceChangedMask","XI_Enter","XI_EnterMask","XI_FocusIn","XI_FocusInMask","XI_FocusOut","XI_FocusOutMask","XI_HierarchyChanged","XI_HierarchyChangedMask","XI_KeyPress","XI_KeyPressMask","XI_KeyRelease","XI_KeyReleaseMask","XI_LASTEVENT","XI_Leave","XI_LeaveMask","XI_Motion","XI_MotionMask","XI_PropertyEvent","XI_PropertyEventMask","XI_RawButtonPress","XI_RawButtonPressMask","XI_RawButtonRelease","XI_RawButtonReleaseMask","XI_RawKeyPress","XI_RawKeyPressMask","XI_RawKeyRelease","XI_RawKeyReleaseMask","XI_RawMotion","XI_RawMotionMask","XI_RawTouchBegin","XI_RawTouchBeginMask","XI_RawTouchEnd","XI_RawTouchEndMask","XI_RawTouchUpdate","XI_RawTouchUpdateMask","XI_TouchBegin","XI_TouchBeginMask","XI_TouchEnd","XI_TouchEndMask","XI_TouchOwnership","XI_TouchOwnershipChangedMask","XI_TouchUpdate","XI_TouchUpdateMask","XIconSize","XIconifyWindow","XIfEvent","XImage","XImageByteOrder","XIndexValue","XInitExtension","XInitImage","XInitThreads","XInput","XInput2","XInputClass","XInputClassInfo","XInput_2_0","XInsertModifiermapEntry","XInstallColormap","XInternAtom","XInternAtoms","XInternalConnectionNumbers","XIntersectRegion","XK_0","XK_1","XK_2","XK_3","XK_4","XK_5","XK_6","XK_7","XK_8","XK_9","XK_A","XK_AE","XK_Aacute","XK_Abreve","XK_AccessX_Enable","XK_AccessX_Feedback_Enable","XK_Acircumflex","XK_Adiaeresis","XK_Agrave","XK_Alt_L","XK_Alt_R","XK_Amacron","XK_Aogonek","XK_App","XK_Arabic_ain","XK_Arabic_alef","XK_Arabic_alefmaksura","XK_Arabic_beh","XK_Arabic_comma","XK_Arabic_dad","XK_Arabic_dal","XK_Arabic_damma","XK_Arabic_dammatan","XK_Arabic_fatha","XK_Arabic_fathatan","XK_Arabic_feh","XK_Arabic_ghain","XK_Arabic_ha","XK_Arabic_hah","XK_Arabic_hamza","XK_Arabic_hamzaonalef","XK_Arabic_hamzaonwaw","XK_Arabic_hamzaonyeh","XK_Arabic_hamzaunderalef","XK_Arabic_heh","XK_Arabic_jeem","XK_Arabic_kaf","XK_Arabic_kasra","XK_Arabic_kasratan","XK_Arabic_khah","XK_Arabic_lam","XK_Arabic_maddaonalef","XK_Arabic_meem","XK_Arabic_noon","XK_Arabic_qaf","XK_Arabic_question_mark","XK_Arabic_ra","XK_Arabic_sad","XK_Arabic_seen","XK_Arabic_semicolon","XK_Arabic_shadda","XK_Arabic_sheen","XK_Arabic_sukun","XK_Arabic_switch","XK_Arabic_tah","XK_Arabic_tatweel","XK_Arabic_teh","XK_Arabic_tehmarbuta","XK_Arabic_thal","XK_Arabic_theh","XK_Arabic_waw","XK_Arabic_yeh","XK_Arabic_zah","XK_Arabic_zain","XK_Aring","XK_Atilde","XK_AudibleBell_Enable","XK_B","XK_BackSpace","XK_Begin","XK_BounceKeys_Enable","XK_Break","XK_Byelorussian_SHORTU","XK_Byelorussian_shortu","XK_C","XK_CH","XK_C_H","XK_C_h","XK_Cabovedot","XK_Cacute","XK_Cancel","XK_Caps_Lock","XK_Ccaron","XK_Ccedilla","XK_Ccircumflex","XK_Ch","XK_Clear","XK_Control_L","XK_Control_R","XK_Cyrillic_A","XK_Cyrillic_BE","XK_Cyrillic_CHE","XK_Cyrillic_DE","XK_Cyrillic_DZHE","XK_Cyrillic_E","XK_Cyrillic_EF","XK_Cyrillic_EL","XK_Cyrillic_EM","XK_Cyrillic_EN","XK_Cyrillic_ER","XK_Cyrillic_ES","XK_Cyrillic_GHE","XK_Cyrillic_HA","XK_Cyrillic_HARDSIGN","XK_Cyrillic_I","XK_Cyrillic_IE","XK_Cyrillic_IO","XK_Cyrillic_JE","XK_Cyrillic_KA","XK_Cyrillic_LJE","XK_Cyrillic_NJE","XK_Cyrillic_O","XK_Cyrillic_PE","XK_Cyrillic_SHA","XK_Cyrillic_SHCHA","XK_Cyrillic_SHORTI","XK_Cyrillic_SOFTSIGN","XK_Cyrillic_TE","XK_Cyrillic_TSE","XK_Cyrillic_U","XK_Cyrillic_VE","XK_Cyrillic_YA","XK_Cyrillic_YERU","XK_Cyrillic_YU","XK_Cyrillic_ZE","XK_Cyrillic_ZHE","XK_Cyrillic_a","XK_Cyrillic_be","XK_Cyrillic_che","XK_Cyrillic_de","XK_Cyrillic_dzhe","XK_Cyrillic_e","XK_Cyrillic_ef","XK_Cyrillic_el","XK_Cyrillic_em","XK_Cyrillic_en","XK_Cyrillic_er","XK_Cyrillic_es","XK_Cyrillic_ghe","XK_Cyrillic_ha","XK_Cyrillic_hardsign","XK_Cyrillic_i","XK_Cyrillic_ie","XK_Cyrillic_io","XK_Cyrillic_je","XK_Cyrillic_ka","XK_Cyrillic_lje","XK_Cyrillic_nje","XK_Cyrillic_o","XK_Cyrillic_pe","XK_Cyrillic_sha","XK_Cyrillic_shcha","XK_Cyrillic_shorti","XK_Cyrillic_softsign","XK_Cyrillic_te","XK_Cyrillic_tse","XK_Cyrillic_u","XK_Cyrillic_ve","XK_Cyrillic_ya","XK_Cyrillic_yeru","XK_Cyrillic_yu","XK_Cyrillic_ze","XK_Cyrillic_zhe","XK_D","XK_Dcaron","XK_Delete","XK_Down","XK_Dstroke","XK_E","XK_ENG","XK_ETH","XK_Eabovedot","XK_Eacute","XK_Ecaron","XK_Ecircumflex","XK_Ediaeresis","XK_Egrave","XK_Eisu_Shift","XK_Eisu_toggle","XK_Emacron","XK_End","XK_Eogonek","XK_Escape","XK_Eth","XK_Execute","XK_F","XK_F1","XK_F10","XK_F11","XK_F12","XK_F13","XK_F14","XK_F15","XK_F16","XK_F17","XK_F18","XK_F19","XK_F2","XK_F20","XK_F21","XK_F22","XK_F23","XK_F24","XK_F25","XK_F26","XK_F27","XK_F28","XK_F29","XK_F3","XK_F30","XK_F31","XK_F32","XK_F33","XK_F34","XK_F35","XK_F4","XK_F5","XK_F6","XK_F7","XK_F8","XK_F9","XK_Find","XK_First_Virtual_Screen","XK_G","XK_Gabovedot","XK_Gbreve","XK_Gcedilla","XK_Gcircumflex","XK_Greek_ALPHA","XK_Greek_ALPHAaccent","XK_Greek_BETA","XK_Greek_CHI","XK_Greek_DELTA","XK_Greek_EPSILON","XK_Greek_EPSILONaccent","XK_Greek_ETA","XK_Greek_ETAaccent","XK_Greek_GAMMA","XK_Greek_IOTA","XK_Greek_IOTAaccent","XK_Greek_IOTAdiaeresis","XK_Greek_KAPPA","XK_Greek_LAMBDA","XK_Greek_LAMDA","XK_Greek_MU","XK_Greek_NU","XK_Greek_OMEGA","XK_Greek_OMEGAaccent","XK_Greek_OMICRON","XK_Greek_OMICRONaccent","XK_Greek_PHI","XK_Greek_PI","XK_Greek_PSI","XK_Greek_RHO","XK_Greek_SIGMA","XK_Greek_TAU","XK_Greek_THETA","XK_Greek_UPSILON","XK_Greek_UPSILONaccent","XK_Greek_UPSILONdieresis","XK_Greek_XI","XK_Greek_ZETA","XK_Greek_accentdieresis","XK_Greek_alpha","XK_Greek_alphaaccent","XK_Greek_beta","XK_Greek_chi","XK_Greek_delta","XK_Greek_epsilon","XK_Greek_epsilonaccent","XK_Greek_eta","XK_Greek_etaaccent","XK_Greek_finalsmallsigma","XK_Greek_gamma","XK_Greek_horizbar","XK_Greek_iota","XK_Greek_iotaaccent","XK_Greek_iotaaccentdieresis","XK_Greek_iotadieresis","XK_Greek_kappa","XK_Greek_lambda","XK_Greek_lamda","XK_Greek_mu","XK_Greek_nu","XK_Greek_omega","XK_Greek_omegaaccent","XK_Greek_omicron","XK_Greek_omicronaccent","XK_Greek_phi","XK_Greek_pi","XK_Greek_psi","XK_Greek_rho","XK_Greek_sigma","XK_Greek_switch","XK_Greek_tau","XK_Greek_theta","XK_Greek_upsilon","XK_Greek_upsilonaccent","XK_Greek_upsilonaccentdieresis","XK_Greek_upsilondieresis","XK_Greek_xi","XK_Greek_zeta","XK_H","XK_Hankaku","XK_Hcircumflex","XK_Hebrew_switch","XK_Help","XK_Henkan","XK_Henkan_Mode","XK_Hiragana","XK_Hiragana_Katakana","XK_Home","XK_Hstroke","XK_Hyper_L","XK_Hyper_R","XK_I","XK_ISO_Center_Object","XK_ISO_Continuous_Underline","XK_ISO_Discontinuous_Underline","XK_ISO_Emphasize","XK_ISO_Enter","XK_ISO_Fast_Cursor_Down","XK_ISO_Fast_Cursor_Left","XK_ISO_Fast_Cursor_Right","XK_ISO_Fast_Cursor_Up","XK_ISO_First_Group","XK_ISO_First_Group_Lock","XK_ISO_Group_Latch","XK_ISO_Group_Lock","XK_ISO_Group_Shift","XK_ISO_Last_Group","XK_ISO_Last_Group_Lock","XK_ISO_Left_Tab","XK_ISO_Level2_Latch","XK_ISO_Level3_Latch","XK_ISO_Level3_Lock","XK_ISO_Level3_Shift","XK_ISO_Level5_Latch","XK_ISO_Level5_Lock","XK_ISO_Level5_Shift","XK_ISO_Lock","XK_ISO_Move_Line_Down","XK_ISO_Move_Line_Up","XK_ISO_Next_Group","XK_ISO_Next_Group_Lock","XK_ISO_Partial_Line_Down","XK_ISO_Partial_Line_Up","XK_ISO_Partial_Space_Left","XK_ISO_Partial_Space_Right","XK_ISO_Prev_Group","XK_ISO_Prev_Group_Lock","XK_ISO_Release_Both_Margins","XK_ISO_Release_Margin_Left","XK_ISO_Release_Margin_Right","XK_ISO_Set_Margin_Left","XK_ISO_Set_Margin_Right","XK_Iabovedot","XK_Iacute","XK_Icircumflex","XK_Idiaeresis","XK_Igrave","XK_Imacron","XK_Insert","XK_Iogonek","XK_Itilde","XK_J","XK_Jcircumflex","XK_K","XK_KP_0","XK_KP_1","XK_KP_2","XK_KP_3","XK_KP_4","XK_KP_5","XK_KP_6","XK_KP_7","XK_KP_8","XK_KP_9","XK_KP_Add","XK_KP_Begin","XK_KP_Decimal","XK_KP_Delete","XK_KP_Divide","XK_KP_Down","XK_KP_End","XK_KP_Enter","XK_KP_Equal","XK_KP_F1","XK_KP_F2","XK_KP_F3","XK_KP_F4","XK_KP_Home","XK_KP_Insert","XK_KP_Left","XK_KP_Multiply","XK_KP_Next","XK_KP_Page_Down","XK_KP_Page_Up","XK_KP_Prior","XK_KP_Right","XK_KP_Separator","XK_KP_Space","XK_KP_Subtract","XK_KP_Tab","XK_KP_Up","XK_Kana_Lock","XK_Kana_Shift","XK_Kanji","XK_Katakana","XK_Kcedilla","XK_L","XK_L1","XK_L10","XK_L2","XK_L3","XK_L4","XK_L5","XK_L6","XK_L7","XK_L8","XK_L9","XK_Lacute","XK_Last_Virtual_Screen","XK_Lcaron","XK_Lcedilla","XK_Left","XK_Linefeed","XK_Lstroke","XK_M","XK_Macedonia_DSE","XK_Macedonia_GJE","XK_Macedonia_KJE","XK_Macedonia_dse","XK_Macedonia_gje","XK_Macedonia_kje","XK_Massyo","XK_Menu","XK_Meta_L","XK_Meta_R","XK_Mode_switch","XK_MouseKeys_Accel_Enable","XK_MouseKeys_Enable","XK_Muhenkan","XK_Multi_key","XK_N","XK_Nacute","XK_Ncaron","XK_Ncedilla","XK_Next","XK_Next_Virtual_Screen","XK_Ntilde","XK_Num_Lock","XK_O","XK_Oacute","XK_Ocircumflex","XK_Odiaeresis","XK_Odoubleacute","XK_Ograve","XK_Omacron","XK_Ooblique","XK_Otilde","XK_Overlay1_Enable","XK_Overlay2_Enable","XK_P","XK_Page_Down","XK_Page_Up","XK_Pause","XK_Pointer_Accelerate","XK_Pointer_Button1","XK_Pointer_Button2","XK_Pointer_Button3","XK_Pointer_Button4","XK_Pointer_Button5","XK_Pointer_Button_Dflt","XK_Pointer_DblClick1","XK_Pointer_DblClick2","XK_Pointer_DblClick3","XK_Pointer_DblClick4","XK_Pointer_DblClick5","XK_Pointer_DblClick_Dflt","XK_Pointer_DfltBtnNext","XK_Pointer_DfltBtnPrev","XK_Pointer_Down","XK_Pointer_DownLeft","XK_Pointer_DownRight","XK_Pointer_Drag1","XK_Pointer_Drag2","XK_Pointer_Drag3","XK_Pointer_Drag4","XK_Pointer_Drag5","XK_Pointer_Drag_Dflt","XK_Pointer_EnableKeys","XK_Pointer_Left","XK_Pointer_Right","XK_Pointer_Up","XK_Pointer_UpLeft","XK_Pointer_UpRight","XK_Prev_Virtual_Screen","XK_Print","XK_Prior","XK_Q","XK_R","XK_R1","XK_R10","XK_R11","XK_R12","XK_R13","XK_R14","XK_R15","XK_R2","XK_R3","XK_R4","XK_R5","XK_R6","XK_R7","XK_R8","XK_R9","XK_Racute","XK_Rcaron","XK_Rcedilla","XK_Redo","XK_RepeatKeys_Enable","XK_Return","XK_Right","XK_Romaji","XK_S","XK_Sacute","XK_Scaron","XK_Scedilla","XK_Scircumflex","XK_Scroll_Lock","XK_Select","XK_Serbian_DJE","XK_Serbian_DZE","XK_Serbian_JE","XK_Serbian_LJE","XK_Serbian_NJE","XK_Serbian_TSHE","XK_Serbian_dje","XK_Serbian_dze","XK_Serbian_je","XK_Serbian_lje","XK_Serbian_nje","XK_Serbian_tshe","XK_Shift_L","XK_Shift_Lock","XK_Shift_R","XK_SlowKeys_Enable","XK_StickyKeys_Enable","XK_Super_L","XK_Super_R","XK_Sys_Req","XK_T","XK_THORN","XK_Tab","XK_Tcaron","XK_Tcedilla","XK_Terminate_Server","XK_Thorn","XK_Touroku","XK_Tslash","XK_U","XK_Uacute","XK_Ubreve","XK_Ucircumflex","XK_Udiaeresis","XK_Udoubleacute","XK_Ugrave","XK_Ukrainian_I","XK_Ukrainian_IE","XK_Ukrainian_YI","XK_Ukrainian_i","XK_Ukrainian_ie","XK_Ukrainian_yi","XK_Ukranian_I","XK_Ukranian_JE","XK_Ukranian_YI","XK_Ukranian_i","XK_Ukranian_je","XK_Ukranian_yi","XK_Umacron","XK_Undo","XK_Uogonek","XK_Up","XK_Uring","XK_Utilde","XK_V","XK_W","XK_Win_L","XK_Win_R","XK_X","XK_Y","XK_Yacute","XK_Z","XK_Zabovedot","XK_Zacute","XK_Zcaron","XK_Zenkaku","XK_Zenkaku_Hankaku","XK_a","XK_aacute","XK_abovedot","XK_abreve","XK_acircumflex","XK_acute","XK_adiaeresis","XK_ae","XK_agrave","XK_amacron","XK_ampersand","XK_aogonek","XK_apostrophe","XK_approximate","XK_aring","XK_asciicircum","XK_asciitilde","XK_asterisk","XK_at","XK_atilde","XK_b","XK_backslash","XK_ballotcross","XK_bar","XK_blank","XK_botintegral","XK_botleftparens","XK_botleftsqbracket","XK_botleftsummation","XK_botrightparens","XK_botrightsqbracket","XK_botrightsummation","XK_bott","XK_botvertsummationconnector","XK_braceleft","XK_braceright","XK_bracketleft","XK_bracketright","XK_breve","XK_brokenbar","XK_c","XK_c_h","XK_cabovedot","XK_cacute","XK_careof","XK_caret","XK_caron","XK_ccaron","XK_ccedilla","XK_ccircumflex","XK_cedilla","XK_cent","XK_ch","XK_checkerboard","XK_checkmark","XK_circle","XK_club","XK_colon","XK_comma","XK_copyright","XK_cr","XK_crossinglines","XK_currency","XK_cursor","XK_d","XK_dagger","XK_dcaron","XK_dead_A","XK_dead_E","XK_dead_I","XK_dead_O","XK_dead_U","XK_dead_a","XK_dead_abovecomma","XK_dead_abovedot","XK_dead_abovereversedcomma","XK_dead_abovering","XK_dead_aboveverticalline","XK_dead_acute","XK_dead_belowbreve","XK_dead_belowcircumflex","XK_dead_belowcomma","XK_dead_belowdiaeresis","XK_dead_belowdot","XK_dead_belowmacron","XK_dead_belowring","XK_dead_belowtilde","XK_dead_belowverticalline","XK_dead_breve","XK_dead_capital_schwa","XK_dead_caron","XK_dead_cedilla","XK_dead_circumflex","XK_dead_currency","XK_dead_dasia","XK_dead_diaeresis","XK_dead_doubleacute","XK_dead_doublegrave","XK_dead_e","XK_dead_grave","XK_dead_greek","XK_dead_hook","XK_dead_horn","XK_dead_i","XK_dead_invertedbreve","XK_dead_iota","XK_dead_longsolidusoverlay","XK_dead_lowline","XK_dead_macron","XK_dead_o","XK_dead_ogonek","XK_dead_perispomeni","XK_dead_psili","XK_dead_semivoiced_sound","XK_dead_small_schwa","XK_dead_stroke","XK_dead_tilde","XK_dead_u","XK_dead_voiced_sound","XK_decimalpoint","XK_degree","XK_diaeresis","XK_diamond","XK_digitspace","XK_division","XK_dollar","XK_doubbaselinedot","XK_doubleacute","XK_doubledagger","XK_doublelowquotemark","XK_downarrow","XK_downcaret","XK_downshoe","XK_downstile","XK_downtack","XK_dstroke","XK_e","XK_eabovedot","XK_eacute","XK_ecaron","XK_ecircumflex","XK_ediaeresis","XK_egrave","XK_ellipsis","XK_em3space","XK_em4space","XK_emacron","XK_emdash","XK_emfilledcircle","XK_emfilledrect","XK_emopencircle","XK_emopenrectangle","XK_emspace","XK_endash","XK_enfilledcircbullet","XK_enfilledsqbullet","XK_eng","XK_enopencircbullet","XK_enopensquarebullet","XK_enspace","XK_eogonek","XK_equal","XK_eth","XK_exclam","XK_exclamdown","XK_f","XK_femalesymbol","XK_ff","XK_figdash","XK_filledlefttribullet","XK_filledrectbullet","XK_filledrighttribullet","XK_filledtribulletdown","XK_filledtribulletup","XK_fiveeighths","XK_fivesixths","XK_fourfifths","XK_function","XK_g","XK_gabovedot","XK_gbreve","XK_gcedilla","XK_gcircumflex","XK_grave","XK_greater","XK_greaterthanequal","XK_guillemotleft","XK_guillemotright","XK_h","XK_hairspace","XK_hcircumflex","XK_heart","XK_hebrew_aleph","XK_hebrew_ayin","XK_hebrew_bet","XK_hebrew_beth","XK_hebrew_chet","XK_hebrew_dalet","XK_hebrew_daleth","XK_hebrew_doublelowline","XK_hebrew_finalkaph","XK_hebrew_finalmem","XK_hebrew_finalnun","XK_hebrew_finalpe","XK_hebrew_finalzade","XK_hebrew_finalzadi","XK_hebrew_gimel","XK_hebrew_gimmel","XK_hebrew_he","XK_hebrew_het","XK_hebrew_kaph","XK_hebrew_kuf","XK_hebrew_lamed","XK_hebrew_mem","XK_hebrew_nun","XK_hebrew_pe","XK_hebrew_qoph","XK_hebrew_resh","XK_hebrew_samech","XK_hebrew_samekh","XK_hebrew_shin","XK_hebrew_taf","XK_hebrew_taw","XK_hebrew_tet","XK_hebrew_teth","XK_hebrew_waw","XK_hebrew_yod","XK_hebrew_zade","XK_hebrew_zadi","XK_hebrew_zain","XK_hebrew_zayin","XK_hexagram","XK_horizconnector","XK_horizlinescan1","XK_horizlinescan3","XK_horizlinescan5","XK_horizlinescan7","XK_horizlinescan9","XK_hstroke","XK_ht","XK_hyphen","XK_i","XK_iacute","XK_icircumflex","XK_identical","XK_idiaeresis","XK_idotless","XK_ifonlyif","XK_igrave","XK_imacron","XK_implies","XK_includedin","XK_includes","XK_infinity","XK_integral","XK_intersection","XK_iogonek","XK_itilde","XK_j","XK_jcircumflex","XK_jot","XK_k","XK_kana_A","XK_kana_CHI","XK_kana_E","XK_kana_FU","XK_kana_HA","XK_kana_HE","XK_kana_HI","XK_kana_HO","XK_kana_HU","XK_kana_I","XK_kana_KA","XK_kana_KE","XK_kana_KI","XK_kana_KO","XK_kana_KU","XK_kana_MA","XK_kana_ME","XK_kana_MI","XK_kana_MO","XK_kana_MU","XK_kana_N","XK_kana_NA","XK_kana_NE","XK_kana_NI","XK_kana_NO","XK_kana_NU","XK_kana_O","XK_kana_RA","XK_kana_RE","XK_kana_RI","XK_kana_RO","XK_kana_RU","XK_kana_SA","XK_kana_SE","XK_kana_SHI","XK_kana_SO","XK_kana_SU","XK_kana_TA","XK_kana_TE","XK_kana_TI","XK_kana_TO","XK_kana_TSU","XK_kana_TU","XK_kana_U","XK_kana_WA","XK_kana_WO","XK_kana_YA","XK_kana_YO","XK_kana_YU","XK_kana_a","XK_kana_closingbracket","XK_kana_comma","XK_kana_conjunctive","XK_kana_e","XK_kana_fullstop","XK_kana_i","XK_kana_middledot","XK_kana_o","XK_kana_openingbracket","XK_kana_switch","XK_kana_tsu","XK_kana_tu","XK_kana_u","XK_kana_ya","XK_kana_yo","XK_kana_yu","XK_kappa","XK_kcedilla","XK_kra","XK_l","XK_lacute","XK_latincross","XK_lcaron","XK_lcedilla","XK_leftanglebracket","XK_leftarrow","XK_leftcaret","XK_leftdoublequotemark","XK_leftmiddlecurlybrace","XK_leftopentriangle","XK_leftpointer","XK_leftradical","XK_leftshoe","XK_leftsinglequotemark","XK_leftt","XK_lefttack","XK_less","XK_lessthanequal","XK_lf","XK_logicaland","XK_logicalor","XK_lowleftcorner","XK_lowrightcorner","XK_lstroke","XK_m","XK_macron","XK_malesymbol","XK_maltesecross","XK_marker","XK_masculine","XK_minus","XK_minutes","XK_mu","XK_multiply","XK_musicalflat","XK_musicalsharp","XK_n","XK_nabla","XK_nacute","XK_ncaron","XK_ncedilla","XK_nl","XK_nobreakspace","XK_notequal","XK_notsign","XK_ntilde","XK_numbersign","XK_numerosign","XK_o","XK_oacute","XK_ocircumflex","XK_odiaeresis","XK_odoubleacute","XK_ogonek","XK_ograve","XK_omacron","XK_oneeighth","XK_onefifth","XK_onehalf","XK_onequarter","XK_onesixth","XK_onesuperior","XK_onethird","XK_openrectbullet","XK_openstar","XK_opentribulletdown","XK_opentribulletup","XK_ordfeminine","XK_oslash","XK_otilde","XK_overbar","XK_overline","XK_p","XK_paragraph","XK_parenleft","XK_parenright","XK_partialderivative","XK_percent","XK_period","XK_periodcentered","XK_phonographcopyright","XK_plus","XK_plusminus","XK_prescription","XK_prolongedsound","XK_punctspace","XK_q","XK_quad","XK_question","XK_questiondown","XK_quotedbl","XK_quoteleft","XK_quoteright","XK_r","XK_racute","XK_radical","XK_rcaron","XK_rcedilla","XK_registered","XK_rightanglebracket","XK_rightarrow","XK_rightcaret","XK_rightdoublequotemark","XK_rightmiddlecurlybrace","XK_rightmiddlesummation","XK_rightopentriangle","XK_rightpointer","XK_rightshoe","XK_rightsinglequotemark","XK_rightt","XK_righttack","XK_s","XK_sacute","XK_scaron","XK_scedilla","XK_scircumflex","XK_script_switch","XK_seconds","XK_section","XK_semicolon","XK_semivoicedsound","XK_seveneighths","XK_signaturemark","XK_signifblank","XK_similarequal","XK_singlelowquotemark","XK_slash","XK_soliddiamond","XK_space","XK_ssharp","XK_sterling","XK_t","XK_tcaron","XK_tcedilla","XK_telephone","XK_telephonerecorder","XK_therefore","XK_thinspace","XK_thorn","XK_threeeighths","XK_threefifths","XK_threequarters","XK_threesuperior","XK_topintegral","XK_topleftparens","XK_topleftradical","XK_topleftsqbracket","XK_topleftsummation","XK_toprightparens","XK_toprightsqbracket","XK_toprightsummation","XK_topt","XK_topvertsummationconnector","XK_trademark","XK_trademarkincircle","XK_tslash","XK_twofifths","XK_twosuperior","XK_twothirds","XK_u","XK_uacute","XK_ubreve","XK_ucircumflex","XK_udiaeresis","XK_udoubleacute","XK_ugrave","XK_umacron","XK_underbar","XK_underscore","XK_union","XK_uogonek","XK_uparrow","XK_upcaret","XK_upleftcorner","XK_uprightcorner","XK_upshoe","XK_upstile","XK_uptack","XK_uring","XK_utilde","XK_v","XK_variation","XK_vertbar","XK_vertconnector","XK_voicedsound","XK_vt","XK_w","XK_x","XK_y","XK_yacute","XK_ydiaeresis","XK_yen","XK_z","XK_zabovedot","XK_zacute","XK_zcaron","XKeyEvent","XKeyPressedEvent","XKeyReleasedEvent","XKeyboardControl","XKeyboardState","XKeycodeToKeysym","XKeymapEvent","XKeysymToKeycode","XKeysymToString","XKillClient","XLastKnownRequestProcessed","XLeaveWindowEvent","XLineFixed","XLinearGradient","XListDepths","XListDeviceProperties","XListExtensions","XListFonts","XListFontsWithInfo","XListHosts","XListInputDevices","XListInstalledColormaps","XListPixmapFormats","XListProperties","XLoadFont","XLoadQueryFont","XLocaleOfFontSet","XLocaleOfIM","XLocaleOfOM","XLockDisplay","XLookupBoth","XLookupChars","XLookupColor","XLookupKeySym","XLookupKeysym","XLookupNone","XLookupString","XLowerWindow","XMapEvent","XMapRaised","XMapRequestEvent","XMapSubwindows","XMapWindow","XMappingEvent","XMaskEvent","XMatchVisualInfo","XMaxCmapsOfScreen","XMaxRequestSize","XMinCmapsOfScreen","XModifierKeymap","XMotionEvent","XMoveResizeWindow","XMoveWindow","XNArea","XNAreaNeeded","XNAreaNeeded_0","XNArea_0","XNBackground","XNBackgroundPixmap","XNBackgroundPixmap_0","XNBackground_0","XNClientWindow","XNClientWindow_0","XNColormap","XNColormap_0","XNCursor","XNCursor_0","XNDestroyCallback","XNDestroyCallback_0","XNFilterEvents","XNFilterEvents_0","XNFocusWindow","XNFocusWindow_0","XNFontSet","XNFontSet_0","XNForeground","XNForeground_0","XNGeometryCallback","XNGeometryCallback_0","XNHotKey","XNHotKeyState","XNHotKeyState_0","XNHotKey_0","XNInputStyle","XNInputStyle_0","XNLineSpace","XNLineSpace_0","XNPreeditAttributes","XNPreeditAttributes_0","XNPreeditCaretCallback","XNPreeditCaretCallback_0","XNPreeditDoneCallback","XNPreeditDoneCallback_0","XNPreeditDrawCallback","XNPreeditDrawCallback_0","XNPreeditStartCallback","XNPreeditStartCallback_0","XNPreeditState","XNPreeditStateNotifyCallback","XNPreeditStateNotifyCallback_0","XNPreeditState_0","XNQueryICValuesList","XNQueryICValuesList_0","XNQueryIMValuesList","XNQueryIMValuesList_0","XNQueryInputStyle","XNQueryInputStyle_0","XNR6PreeditCallback","XNR6PreeditCallback_0","XNResetState","XNResetState_0","XNResourceClass","XNResourceClass_0","XNResourceName","XNResourceName_0","XNSeparatorofNestedList","XNSeparatorofNestedList_0","XNSpotLocation","XNSpotLocation_0","XNStatusAttributes","XNStatusAttributes_0","XNStatusDoneCallback","XNStatusDoneCallback_0","XNStatusDrawCallback","XNStatusDrawCallback_0","XNStatusStartCallback","XNStatusStartCallback_0","XNStdColormap","XNStdColormap_0","XNStringConversion","XNStringConversionCallback","XNStringConversionCallback_0","XNStringConversion_0","XNVaNestedList","XNVaNestedList_0","XNVisiblePosition","XNVisiblePosition_0","XNegative","XNewModifiermap","XNextEvent","XNextRequest","XNoExposeEvent","XNoOp","XOM","XOMCharSetList","XOMOfOC","XOffsetRegion","XOpenDevice","XOpenDisplay","XOpenIM","XOpenOM","XOrientation","XParseColor","XParseGeometry","XPeekEvent","XPeekIfEvent","XPending","XPixmapFormatValues","XPlanesOfScreen","XPoint","XPointDouble","XPointFixed","XPointInRegion","XPointer","XPointerMovedEvent","XPolygonRegion","XProcessInternalConnection","XPropertyEvent","XProtocolRevision","XProtocolVersion","XPutBackEvent","XPutImage","XPutPixel","XQLength","XQueryBestCursor","XQueryBestSize","XQueryBestStipple","XQueryBestTile","XQueryColor","XQueryColors","XQueryDeviceState","XQueryExtension","XQueryFont","XQueryKeymap","XQueryPointer","XQueryTextExtents","XQueryTextExtents16","XQueryTree","XRRAddOutputMode","XRRAddOutputMode","XRRAllocGamma","XRRAllocGamma","XRRAllocModeInfo","XRRAllocModeInfo","XRRAllocateMonitor","XRRChangeOutputProperty","XRRChangeOutputProperty","XRRChangeProviderProperty","XRRChangeProviderProperty","XRRConfigCurrentConfiguration","XRRConfigCurrentConfiguration","XRRConfigCurrentRate","XRRConfigCurrentRate","XRRConfigRates","XRRConfigRates","XRRConfigRotations","XRRConfigRotations","XRRConfigSizes","XRRConfigSizes","XRRConfigTimes","XRRConfigTimes","XRRConfigureOutputProperty","XRRConfigureOutputProperty","XRRConfigureProviderProperty","XRRConfigureProviderProperty","XRRCreateMode","XRRCreateMode","XRRCrtcChangeNotifyEvent","XRRCrtcGamma","XRRCrtcInfo","XRRCrtcTransformAttributes","XRRDeleteMonitor","XRRDeleteOutputMode","XRRDeleteOutputMode","XRRDeleteOutputProperty","XRRDeleteOutputProperty","XRRDeleteProviderProperty","XRRDeleteProviderProperty","XRRDestroyMode","XRRDestroyMode","XRRFreeCrtcInfo","XRRFreeCrtcInfo","XRRFreeGamma","XRRFreeGamma","XRRFreeModeInfo","XRRFreeModeInfo","XRRFreeMonitors","XRRFreeOutputInfo","XRRFreeOutputInfo","XRRFreePanning","XRRFreePanning","XRRFreeProviderInfo","XRRFreeProviderInfo","XRRFreeProviderResources","XRRFreeProviderResources","XRRFreeScreenConfigInfo","XRRFreeScreenConfigInfo","XRRFreeScreenResources","XRRFreeScreenResources","XRRGetCrtcGamma","XRRGetCrtcGamma","XRRGetCrtcGammaSize","XRRGetCrtcGammaSize","XRRGetCrtcInfo","XRRGetCrtcInfo","XRRGetCrtcTransform","XRRGetCrtcTransform","XRRGetMonitors","XRRGetOutputInfo","XRRGetOutputInfo","XRRGetOutputPrimary","XRRGetOutputPrimary","XRRGetOutputProperty","XRRGetOutputProperty","XRRGetPanning","XRRGetPanning","XRRGetProviderInfo","XRRGetProviderInfo","XRRGetProviderProperty","XRRGetProviderProperty","XRRGetProviderResources","XRRGetProviderResources","XRRGetScreenInfo","XRRGetScreenInfo","XRRGetScreenResources","XRRGetScreenResources","XRRGetScreenResourcesCurrent","XRRGetScreenResourcesCurrent","XRRGetScreenSizeRange","XRRGetScreenSizeRange","XRRListOutputProperties","XRRListOutputProperties","XRRListProviderProperties","XRRListProviderProperties","XRRModeFlags","XRRModeInfo","XRRMonitorInfo","XRRNotifyEvent","XRROutputChangeNotifyEvent","XRROutputInfo","XRROutputPropertyNotifyEvent","XRRPanning","XRRPropertyInfo","XRRProviderChangeNotifyEvent","XRRProviderInfo","XRRProviderPropertyNotifyEvent","XRRProviderResources","XRRQueryExtension","XRRQueryExtension","XRRQueryOutputProperty","XRRQueryOutputProperty","XRRQueryProviderProperty","XRRQueryProviderProperty","XRRQueryVersion","XRRQueryVersion","XRRRates","XRRRates","XRRResourceChangeNotifyEvent","XRRRootToScreen","XRRRootToScreen","XRRRotations","XRRRotations","XRRScreenChangeNotifyEvent","XRRScreenConfiguration","XRRScreenResources","XRRScreenSize","XRRSelectInput","XRRSelectInput","XRRSetCrtcConfig","XRRSetCrtcConfig","XRRSetCrtcGamma","XRRSetCrtcGamma","XRRSetCrtcTransform","XRRSetCrtcTransform","XRRSetMonitor","XRRSetOutputPrimary","XRRSetOutputPrimary","XRRSetPanning","XRRSetPanning","XRRSetProviderOffloadSink","XRRSetProviderOffloadSink","XRRSetProviderOutputSource","XRRSetProviderOutputSource","XRRSetScreenConfig","XRRSetScreenConfig","XRRSetScreenConfigAndRate","XRRSetScreenConfigAndRate","XRRSetScreenSize","XRRSetScreenSize","XRRSizes","XRRSizes","XRRTimes","XRRTimes","XRRUpdateConfiguration","XRRUpdateConfiguration","XRadialGradient","XRaiseWindow","XReadBitmapFile","XReadBitmapFileData","XRebindKeysym","XRecolorCursor","XReconfigureWMWindow","XRectInRegion","XRectangle","XRefreshKeyboardMapping","XRegisterIMInstantiateCallback","XRemoveConnectionWatch","XRemoveFromSaveSet","XRemoveHost","XRemoveHosts","XRenderAddGlyphs","XRenderAddTraps","XRenderChangePicture","XRenderColor","XRenderComposite","XRenderCompositeDoublePoly","XRenderCompositeString16","XRenderCompositeString32","XRenderCompositeString8","XRenderCompositeText16","XRenderCompositeText32","XRenderCompositeText8","XRenderCompositeTrapezoids","XRenderCompositeTriFan","XRenderCompositeTriStrip","XRenderCompositeTriangles","XRenderCreateAnimCursor","XRenderCreateConicalGradient","XRenderCreateCursor","XRenderCreateGlyphSet","XRenderCreateLinearGradient","XRenderCreatePicture","XRenderCreateRadialGradient","XRenderCreateSolidFill","XRenderDirectFormat","XRenderFillRectangle","XRenderFillRectangles","XRenderFindFormat","XRenderFindStandardFormat","XRenderFindVisualFormat","XRenderFreeGlyphSet","XRenderFreeGlyphs","XRenderFreePicture","XRenderParseColor","XRenderPictFormat","XRenderPictureAttributes","XRenderQueryExtension","XRenderQueryFilters","XRenderQueryFormats","XRenderQueryPictIndexValues","XRenderQuerySubpixelOrder","XRenderQueryVersion","XRenderReferenceGlyphSet","XRenderSetPictureClipRectangles","XRenderSetPictureClipRegion","XRenderSetPictureFilter","XRenderSetPictureTransform","XRenderSetSubpixelOrder","XReparentEvent","XReparentWindow","XResetScreenSaver","XResizeRequestEvent","XResizeWindow","XResourceManagerString","XRestackWindows","XRootWindow","XRootWindowOfScreen","XRotateBuffers","XRotateWindowProperties","XSaveContext","XScreenCount","XScreenNumberOfScreen","XScreenOfDisplay","XScreenResourceString","XSegment","XSelectExtensionEvent","XSelectInput","XSelectionClearEvent","XSelectionEvent","XSelectionRequestEvent","XSendEvent","XSendExtensionEvent","XServerVendor","XSetAccessControl","XSetAfterFunction","XSetArcMode","XSetAuthorization","XSetBackground","XSetClassHint","XSetClipMask","XSetClipOrigin","XSetClipRectangles","XSetCloseDownMode","XSetCommand","XSetDashes","XSetDeviceButtonMapping","XSetDeviceFocus","XSetDeviceMode","XSetDeviceModifierMapping","XSetDeviceValuators","XSetErrorHandler","XSetEventQueueOwner","XSetFillRule","XSetFillStyle","XSetFont","XSetFontPath","XSetForeground","XSetFunction","XSetGraphicsExposures","XSetICFocus","XSetICValues","XSetIMValues","XSetIOErrorHandler","XSetIconName","XSetIconSizes","XSetInputFocus","XSetLineAttributes","XSetLocaleModifiers","XSetModifierMapping","XSetNormalHints","XSetOCValues","XSetOMValues","XSetPlaneMask","XSetPointerMapping","XSetRGBColormaps","XSetRegion","XSetScreenSaver","XSetSelectionOwner","XSetSizeHints","XSetStandardColormap","XSetStandardProperties","XSetState","XSetStipple","XSetSubwindowMode","XSetTSOrigin","XSetTextProperty","XSetTile","XSetTransientForHint","XSetWMClientMachine","XSetWMColormapWindows","XSetWMHints","XSetWMIconName","XSetWMName","XSetWMNormalHints","XSetWMProperties","XSetWMProtocols","XSetWMSizeHints","XSetWindowAttributes","XSetWindowBackground","XSetWindowBackgroundPixmap","XSetWindowBorder","XSetWindowBorderPixmap","XSetWindowBorderWidth","XSetWindowColormap","XSetZoomHints","XShrinkRegion","XSizeHints","XSpanFix","XStandardColormap","XStdICCTextStyle","XStoreBuffer","XStoreBytes","XStoreColor","XStoreColors","XStoreName","XStoreNamedColor","XStringListToTextProperty","XStringStyle","XStringToKeysym","XSubImage","XSubtractRegion","XSupportsLocale","XSync","XSynchronize","XTextExtents","XTextExtents16","XTextItem","XTextItem16","XTextProperty","XTextPropertyToStringList","XTextStyle","XTextWidth","XTextWidth16","XTimeCoord","XTransform","XTranslateCoordinates","XTrap","XTrapezoid","XTriangle","XUTF8StringStyle","XUndefineCursor","XUngrabButton","XUngrabDevice","XUngrabDeviceButton","XUngrabDeviceKey","XUngrabKey","XUngrabKeyboard","XUngrabPointer","XUngrabServer","XUninstallColormap","XUnionRectWithRegion","XUnionRegion","XUnloadFont","XUnlockDisplay","XUnmapEvent","XUnmapSubwindows","XUnmapWindow","XUnregisterIMInstantiateCallback","XUnsetICFocus","XUrgencyHint","XVaCreateNestedList","XValue","XVendorRelease","XVisibilityEvent","XVisualIDFromVisual","XVisualInfo","XWMGeometry","XWMHints","XWarpPointer","XWhitePixel","XWhitePixelOfScreen","XWidthMMOfScreen","XWidthOfScreen","XWindowAttributes","XWindowChanges","XWindowEvent","XWithdrawWindow","XWriteBitmapFile","XXorRegion","XYBitmap","XYPixmap","X_PROTOCOL","X_PROTOCOL_REVISION","X_RRAddOutputMode","X_RRChangeOutputProperty","X_RRChangeProviderProperty","X_RRConfigureOutputProperty","X_RRConfigureProviderProperty","X_RRCreateMode","X_RRDeleteMonitor","X_RRDeleteOutputMode","X_RRDeleteOutputProperty","X_RRDeleteProviderProperty","X_RRDestroyMode","X_RRGetCrtcGamma","X_RRGetCrtcGammaSize","X_RRGetCrtcInfo","X_RRGetCrtcTransform","X_RRGetMonitors","X_RRGetOutputInfo","X_RRGetOutputPrimary","X_RRGetOutputProperty","X_RRGetPanning","X_RRGetProviderInfo","X_RRGetProviderProperty","X_RRGetProviders","X_RRGetScreenInfo","X_RRGetScreenResources","X_RRGetScreenResourcesCurrent","X_RRGetScreenSizeRange","X_RRListOutputProperties","X_RRListProviderProperties","X_RROldGetScreenInfo","X_RROldScreenChangeSelectInput","X_RRQueryOutputProperty","X_RRQueryProviderProperty","X_RRQueryVersion","X_RRSelectInput","X_RRSetCrtcConfig","X_RRSetCrtcGamma","X_RRSetCrtcTransform","X_RRSetMonitor","X_RRSetOutputPrimary","X_RRSetPanning","X_RRSetProviderOffloadSink","X_RRSetProviderOutputSource","X_RRSetScreenConfig","X_RRSetScreenSize","XcmsAddColorSpace","XcmsAddFunctionSet","XcmsAllocColor","XcmsAllocNamedColor","XcmsCCC","XcmsCCCOfColormap","XcmsCIELabClipL","XcmsCIELabClipLab","XcmsCIELabClipab","XcmsCIELabQueryMaxC","XcmsCIELabQueryMaxL","XcmsCIELabQueryMaxLC","XcmsCIELabQueryMinL","XcmsCIELabToCIEXYZ","XcmsCIELabWhiteShiftColors","XcmsCIELuvClipL","XcmsCIELuvClipLuv","XcmsCIELuvClipuv","XcmsCIELuvQueryMaxC","XcmsCIELuvQueryMaxL","XcmsCIELuvQueryMaxLC","XcmsCIELuvQueryMinL","XcmsCIELuvToCIEuvY","XcmsCIELuvWhiteShiftColors","XcmsCIEXYZToCIELab","XcmsCIEXYZToCIEuvY","XcmsCIEXYZToCIExyY","XcmsCIEXYZToRGBi","XcmsCIEuvYToCIELuv","XcmsCIEuvYToCIEXYZ","XcmsCIEuvYToTekHVC","XcmsCIExyYToCIEXYZ","XcmsClientWhitePointOfCCC","XcmsColor","XcmsColorSpace","XcmsConvertColors","XcmsCreateCCC","XcmsDefaultCCC","XcmsDisplayOfCCC","XcmsFormatOfPrefix","XcmsFreeCCC","XcmsFunctionSet","XcmsLookupColor","XcmsPrefixOfFormat","XcmsQueryBlack","XcmsQueryBlue","XcmsQueryColor","XcmsQueryColors","XcmsQueryGreen","XcmsQueryRed","XcmsQueryWhite","XcmsRGBToRGBi","XcmsRGBiToCIEXYZ","XcmsRGBiToRGB","XcmsScreenNumberOfCCC","XcmsScreenWhitePointOfCCC","XcmsSetCCCOfColormap","XcmsSetCompressionProc","XcmsSetWhiteAdjustProc","XcmsSetWhitePoint","XcmsStoreColor","XcmsStoreColors","XcmsTekHVCClipC","XcmsTekHVCClipV","XcmsTekHVCClipVC","XcmsTekHVCQueryMaxC","XcmsTekHVCQueryMaxV","XcmsTekHVCQueryMaxVC","XcmsTekHVCQueryMaxVSamples","XcmsTekHVCQueryMinV","XcmsTekHVCToCIEuvY","XcmsTekHVCWhiteShiftColors","XcmsVisualOfCCC","Xcursor","XcursorAnimate","XcursorAnimateCreate","XcursorAnimateDestroy","XcursorAnimateNext","XcursorBool","XcursorChunkHeader","XcursorComment","XcursorCommentCreate","XcursorCommentDestroy","XcursorComments","XcursorCommentsCreate","XcursorCommentsDestroy","XcursorCursors","XcursorCursorsCreate","XcursorCursorsDestroy","XcursorDim","XcursorFile","XcursorFileHeader","XcursorFileLoad","XcursorFileLoadAllImages","XcursorFileLoadImage","XcursorFileLoadImages","XcursorFileSave","XcursorFileSaveImages","XcursorFileToc","XcursorFilenameLoad","XcursorFilenameLoadAllImages","XcursorFilenameLoadCursor","XcursorFilenameLoadCursors","XcursorFilenameLoadImage","XcursorFilenameLoadImages","XcursorFilenameSave","XcursorFilenameSaveImages","XcursorGetDefaultSize","XcursorGetTheme","XcursorGetThemeCore","XcursorImage","XcursorImageCreate","XcursorImageDestroy","XcursorImageHash","XcursorImageLoadCursor","XcursorImages","XcursorImagesCreate","XcursorImagesDestroy","XcursorImagesLoadCursor","XcursorImagesLoadCursors","XcursorImagesSetName","XcursorLibraryLoadCursor","XcursorLibraryLoadCursors","XcursorLibraryLoadImage","XcursorLibraryLoadImages","XcursorLibraryPath","XcursorLibraryShape","XcursorNoticeCreateBitmap","XcursorNoticePutBitmap","XcursorPixel","XcursorSetDefaultSize","XcursorSetTheme","XcursorSetThemeCore","XcursorShapeLoadCursor","XcursorShapeLoadCursors","XcursorShapeLoadImage","XcursorShapeLoadImages","XcursorSupportsARGB","XcursorSupportsAnim","XcursorTryShapeBitmapCursor","XcursorTryShapeCursor","XcursorUInt","XcursorXcFileLoad","XcursorXcFileLoadAllImages","XcursorXcFileLoadImage","XcursorXcFileLoadImages","XcursorXcFileSave","XkbAccessXNotify","XkbAccessXNotifyEvent","XkbAccessXNotifyMask","XkbAction","XkbActionMessage","XkbActionMessageEvent","XkbActionMessageLength","XkbActionMessageMask","XkbAddDeviceLedInfo","XkbAddGeomColor","XkbAddGeomDoodad","XkbAddGeomKey","XkbAddGeomKeyAlias","XkbAddGeomOutline","XkbAddGeomOverlay","XkbAddGeomOverlayKey","XkbAddGeomOverlayRow","XkbAddGeomProperty","XkbAddGeomRow","XkbAddGeomSection","XkbAddGeomShape","XkbAddKeyType","XkbAllEventsMask","XkbAllStateComponentsMask","XkbAllocClientMap","XkbAllocCompatMap","XkbAllocControls","XkbAllocDeviceInfo","XkbAllocGeomColors","XkbAllocGeomDoodads","XkbAllocGeomKeyAliases","XkbAllocGeomKeys","XkbAllocGeomOutlines","XkbAllocGeomOverlayKeys","XkbAllocGeomOverlayRows","XkbAllocGeomOverlays","XkbAllocGeomPoints","XkbAllocGeomProps","XkbAllocGeomRows","XkbAllocGeomSectionDoodads","XkbAllocGeomSections","XkbAllocGeomShapes","XkbAllocGeometry","XkbAllocIndicatorMaps","XkbAllocKeyboard","XkbAllocNames","XkbAllocServerMap","XkbAnyEvent","XkbApplyCompatMapToKey","XkbApplyVirtualModChanges","XkbBell","XkbBellEvent","XkbBellNotify","XkbBellNotifyEvent","XkbBellNotifyMask","XkbBoundsPtr","XkbChangeDeviceInfo","XkbChangeEnabledControls","XkbChangeKeycodeRange","XkbChangeMap","XkbChangeNames","XkbChangeTypesOfKey","XkbChangesPtr","XkbClientMapPtr","XkbColorPtr","XkbCompatGrabModsMask","XkbCompatLookupModsMask","XkbCompatMapNotify","XkbCompatMapNotifyEvent","XkbCompatMapNotifyMask","XkbCompatMapPtr","XkbCompatStateMask","XkbComponentListPtr","XkbComponentNamesPtr","XkbComputeEffectiveMap","XkbComputeRowBounds","XkbComputeSectionBounds","XkbComputeShapeBounds","XkbComputeShapeTop","XkbControlsChangesPtr","XkbControlsNotify","XkbControlsNotifyEvent","XkbControlsNotifyMask","XkbControlsPtr","XkbCopyKeyType","XkbCopyKeyTypes","XkbDescPtr","XkbDeviceBell","XkbDeviceBellEvent","XkbDeviceChangesPtr","XkbDeviceInfoPtr","XkbDeviceLedInfoPtr","XkbDoodadPtr","XkbEvent","XkbExtensionDeviceNotify","XkbExtensionDeviceNotifyEvent","XkbExtensionDeviceNotifyMask","XkbFindOverlayForKey","XkbForceBell","XkbForceDeviceBell","XkbFreeClientMap","XkbFreeCompatMap","XkbFreeComponentList","XkbFreeControls","XkbFreeDeviceInfo","XkbFreeGeomColors","XkbFreeGeomDoodads","XkbFreeGeomKeyAliases","XkbFreeGeomKeys","XkbFreeGeomOutlines","XkbFreeGeomOverlayKeys","XkbFreeGeomOverlayRows","XkbFreeGeomOverlays","XkbFreeGeomPoints","XkbFreeGeomProperties","XkbFreeGeomRows","XkbFreeGeomSections","XkbFreeGeomShapes","XkbFreeGeometry","XkbFreeIndicatorMaps","XkbFreeKeyboard","XkbFreeNames","XkbFreeServerMap","XkbGeometryPtr","XkbGeometrySizesPtr","XkbGetAutoRepeatRate","XkbGetAutoResetControls","XkbGetCompatMap","XkbGetControls","XkbGetDetectableAutoRepeat","XkbGetDeviceButtonActions","XkbGetDeviceInfo","XkbGetDeviceInfoChanges","XkbGetDeviceLedInfo","XkbGetGeometry","XkbGetIndicatorMap","XkbGetIndicatorState","XkbGetKeyActions","XkbGetKeyBehaviors","XkbGetKeyExplicitComponents","XkbGetKeyModifierMap","XkbGetKeySyms","XkbGetKeyTypes","XkbGetKeyVirtualModMap","XkbGetKeyboard","XkbGetKeyboardByName","XkbGetMap","XkbGetMapChanges","XkbGetNamedDeviceIndicator","XkbGetNamedGeometry","XkbGetNamedIndicator","XkbGetNames","XkbGetPerClientControls","XkbGetState","XkbGetUpdatedMap","XkbGetVirtualMods","XkbGetXlibControls","XkbGrabModsMask","XkbGroupBaseMask","XkbGroupLatchMask","XkbGroupLockMask","XkbGroupStateMask","XkbIgnoreExtension","XkbIndicatorMapNotify","XkbIndicatorMapNotifyMask","XkbIndicatorMapPtr","XkbIndicatorMapRec","XkbIndicatorNotifyEvent","XkbIndicatorPtr","XkbIndicatorStateNotify","XkbIndicatorStateNotifyMask","XkbInitCanonicalKeyTypes","XkbKbdDpyStatePtr","XkbKbdDpyStateRec","XkbKeyAliasPtr","XkbKeyNameLength","XkbKeyNamePtr","XkbKeyPtr","XkbKeyTypePtr","XkbKeyTypesForCoreSymbols","XkbKeycodeToKeysym","XkbKeysymToModifiers","XkbLC_AllComposeControls","XkbLC_AllControls","XkbLC_AlwaysConsumeShiftAndLock","XkbLC_BeepOnComposeFail","XkbLC_ComposeLED","XkbLC_ConsumeKeysOnComposeFail","XkbLC_ConsumeLookupMods","XkbLC_ControlFallback","XkbLC_ForceLatinLookup","XkbLC_IgnoreNewKeyboards","XkbLatchGroup","XkbLatchModifiers","XkbLibraryVersion","XkbListComponents","XkbLockGroup","XkbLockModifiers","XkbLookupKeyBinding","XkbLookupKeySym","XkbLookupModsMask","XkbMapChangesPtr","XkbMapNotify","XkbMapNotifyEvent","XkbMapNotifyMask","XkbModifierBaseMask","XkbModifierLatchMask","XkbModifierLockMask","XkbModifierStateMask","XkbModsPtr","XkbModsRec","XkbNameChangesPtr","XkbNamesNotify","XkbNamesNotifyEvent","XkbNamesNotifyMask","XkbNamesPtr","XkbNewKeyboardNotify","XkbNewKeyboardNotifyEvent","XkbNewKeyboardNotifyMask","XkbNoteControlsChanges","XkbNoteDeviceChanges","XkbNoteMapChanges","XkbNoteNameChanges","XkbNumIndicators","XkbNumKbdGroups","XkbNumVirtualMods","XkbOD_BadLibraryVersion","XkbOD_BadServerVersion","XkbOD_ConnectionRefused","XkbOD_NonXkbServer","XkbOD_Success","XkbOpenDisplay","XkbOutlinePtr","XkbOverlayKeyPtr","XkbOverlayPtr","XkbOverlayRowPtr","XkbPointerButtonMask","XkbPropertyPtr","XkbQueryExtension","XkbRefreshKeyboardMapping","XkbResizeDeviceButtonActions","XkbResizeKeyActions","XkbResizeKeySyms","XkbResizeKeyType","XkbRowPtr","XkbSectionPtr","XkbSelectEventDetails","XkbSelectEvents","XkbServerMapPtr","XkbSetAtomFuncs","XkbSetAutoRepeatRate","XkbSetAutoResetControls","XkbSetCompatMap","XkbSetControls","XkbSetDebuggingFlags","XkbSetDetectableAutoRepeat","XkbSetDeviceButtonActions","XkbSetDeviceInfo","XkbSetDeviceLedInfo","XkbSetGeometry","XkbSetIgnoreLockMods","XkbSetIndicatorMap","XkbSetMap","XkbSetNamedDeviceIndicator","XkbSetNamedIndicator","XkbSetNames","XkbSetPerClientControls","XkbSetServerInternalMods","XkbSetXlibControls","XkbShapePtr","XkbStateNotify","XkbStateNotifyEvent","XkbStateNotifyMask","XkbStatePtr","XkbStateRec","XkbSymInterpretPtr","XkbToControl","XkbTranslateKeyCode","XkbTranslateKeySym","XkbUpdateActionVirtualMods","XkbUpdateKeyTypeVirtualMods","XkbUpdateMapFromCore","XkbUseExtension","XkbVirtualModsToReal","XkbXlibControlsImplemented","Xlib","XlibOwnsEventQueue","Xlib_xcb","XmbDrawImageString","XmbDrawString","XmbDrawText","XmbLookupString","XmbResetIC","XmbSetWMProperties","XmbTextEscapement","XmbTextExtents","XmbTextItem","XmbTextListToTextProperty","XmbTextPerCharExtents","XmbTextPropertyToTextList","Xpermalloc","Xrandr","Xrandr_2_2_0","Xrender","XrmBinding","XrmCombineDatabase","XrmCombineFileDatabase","XrmDatabase","XrmDestroyDatabase","XrmEnumerateDatabase","XrmGetDatabase","XrmGetFileDatabase","XrmGetResource","XrmGetStringDatabase","XrmInitialize","XrmLocaleOfDatabase","XrmMergeDatabases","XrmOptionDescList","XrmOptionDescRec","XrmOptionKind","XrmParseCommand","XrmPermStringToQuark","XrmPutFileDatabase","XrmPutLineResource","XrmPutResource","XrmPutStringResource","XrmQGetResource","XrmQGetSearchList","XrmQGetSearchResource","XrmQPutResource","XrmQPutStringResource","XrmQuarkToString","XrmSetDatabase","XrmStringToBindingQuarkList","XrmStringToQuark","XrmStringToQuarkList","XrmUniqueQuark","XrmValue","Xutf8DrawImageString","Xutf8DrawString","Xutf8DrawText","Xutf8LookupString","Xutf8ResetIC","Xutf8SetWMProperties","Xutf8TextEscapement","Xutf8TextExtents","Xutf8TextListToTextProperty","Xutf8TextPerCharExtents","Xutf8TextPropertyToTextList","XwcDrawImageString","XwcDrawString","XwcDrawText","XwcFreeStringList","XwcLookupString","XwcResetIC","XwcTextEscapement","XwcTextExtents","XwcTextItem","XwcTextListToTextProperty","XwcTextPerCharExtents","XwcTextPropertyToTextList","YNegative","YSorted","YValue","YXBanded","YXSorted","ZPixmap","_XAnimCursor","_XAnyClassinfo","_XCircle","_XConicalGradient","_XDisplay","_XFilters","_XGC","_XGlyphElt16","_XGlyphElt32","_XGlyphElt8","_XGlyphInfo","_XIC","_XIM","_XIndexValue","_XLineFixed","_XLinearGradient","_XOC","_XOM","_XPointDouble","_XPointFixed","_XRadialGradient","_XRegion","_XRenderPictureAttributes","_XSpanFix","_XTransform","_XTrap","_XTrapezoid","_XTriangle","_XcmsCCC","_XcmsColorSpace","_XcmsFunctionSet","_XcursorAnimate","_XcursorChunkHeader","_XcursorComment","_XcursorComments","_XcursorCursors","_XcursorFile","_XcursorFileHeader","_XcursorFileToc","_XcursorImage","_XcursorImages","_XkbAction","_XkbBounds","_XkbChanges","_XkbClientMapRec","_XkbColor","_XkbCompatMapRec","_XkbComponentList","_XkbComponentNames","_XkbControls","_XkbControlsChanges","_XkbControlsNotify","_XkbControlsNotifyEvent","_XkbDesc","_XkbDeviceChanges","_XkbDeviceInfo","_XkbDeviceLedInfo","_XkbDoodad","_XkbExtensionDeviceNotify","_XkbExtensionDeviceNotifyEvent","_XkbGeometry","_XkbGeometrySizes","_XkbIndicatorMapRec","_XkbIndicatorRec","_XkbKey","_XkbKeyAliasRec","_XkbKeyNameRec","_XkbKeyType","_XkbMapChanges","_XkbMapNotifyEvent","_XkbMods","_XkbNameChanges","_XkbNamesNotify","_XkbNamesNotifyEvent","_XkbNamesRec","_XkbOutline","_XkbOverlay","_XkbOverlayKey","_XkbOverlayRow","_XkbProperty","_XkbRow","_XkbSection","_XkbServerMapRec","_XkbShape","_XkbStateRec","_XkbSymInterpretRec","_XrmHashBucketRec","_bindgen_data_","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_type","_use","_use","above","above","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","add","add_pixel","addr","address","alias","alias","all_chars_exist","all_event_masks","alpha","alpha","alpha","alphaMask","alpha_map","alpha_x_origin","alpha_y_origin","angle","angle1","angle2","any","arc_mode","argKind","as_bytes","as_bytes_mut","as_longs","as_longs_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_shorts","as_shorts_mut","ascent","ascent","associated_capability","associated_providers","atom","attach","attachment","attachment","attributes","auto_repeat_mode","auto_repeats","automatic","ax_options","ax_timeout","axt_ctrls_mask","axt_ctrls_values","axt_opts_mask","axt_opts_values","background","background_pixel","background_pixmap","backing_pixel","backing_pixel","backing_planes","backing_planes","backing_store","backing_store","backing_store","barrier","barrier","base","base_group","base_group","base_height","base_mods","base_mods","base_pixel","base_width","bell_class","bell_duration","bell_duration","bell_id","bell_percent","bell_percent","bell_pitch","bell_pitch","bit_gravity","bit_gravity","bitmap_bit_order","bitmap_pad","bitmap_unit","bits_per_pixel","bits_per_pixel","bits_per_pixel","bits_per_rgb","bits_per_rgb","black_pixel","blue","blue","blue","blue","blue","blueMask","blue_mask","blue_mask","blue_mask","blue_max","blue_mult","border_bottom","border_left","border_pixel","border_pixmap","border_right","border_top","border_width","border_width","border_width","border_width","border_width","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bottom","button","button","buttons","buttons","byte1","byte2","byte_order","bytes_per_line","callback","callback","cap_style","capabilities","card32","caret","center","changed","changed","changed","changed","changed","changed_ctrls","changed_groups","changed_groups","changed_indicators","changed_vmods","chars","chars","chars","chars","chars","chars","chars","chars_matched","charset_count","charset_list","chg_first","chg_length","child","child","child","circulate","circulate_request","class","class","class","class","class","class","classes","classes","classes","client_data","client_data","client_message","clip_mask","clip_mask","clip_x_origin","clip_x_origin","clip_y_origin","clip_y_origin","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clones","closure","cmap","colormap","colormap","colormap","colormap","colormap","colormap","colormap_size","comment","comment_type","comments","compat","compat","compat_grab_mods","compat_grab_mods","compat_lookup_mods","compat_lookup_mods","compat_state","compat_state","component_alpha","compose_ptr","configTimestamp","config_timestamp","configure","configure_request","connection","connection","control","cookie","count","count","count","create_image","create_window","crossing","crtc","crtc","crtc","crtcs","crtcs","crtcs","ctrls","currentFilter","currentNparams","currentParams","currentTransform","current_role","cursor","cursor","cursors","cursors","dash_offset","dashes","data","data","data","data","data","debounce_delay","debounce_delay","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_char","default_gc","delay","delay","delta","delta","delta","delta","depth","depth","depth","depth","depth","depth","depth","depths","descent","descent","description","destroy_image","destroy_window","detach","detail","detail","detail","detail","detail","detail","detail","detail","device","device","device","device","device","device","device","device","device","device","device","device","device_id","device_id","device_spec","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","deviceid","direct","direction","direction","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","display","dither","do_not_propagate_mask","do_not_propagate_mask","dotClock","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dpy","dpy","drawable","drawable","dtime","duration","dx","dy","effective","enable","enabled","enabled","enabled_ctrl_changes","enabled_ctrls","enabled_ctrls","encoding","encoding_is_wchar","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","error","error_code","event","event","event","event","event","event","event","event","event","event","event","event","event_mask","event_only","event_type","event_type","event_type_base","event_x","event_x","event_y","event_y","eventid","eventid","evtype","evtype","evtype","evtype","evtype","evtype","evtype","evtype","evtype","evtype","expose","ext_data","ext_data","ext_data","ext_data","extension","extension","extension","extension","extension","extension","extension","extension","extension","extension","extension","family","feedback","fid","fill_rule","fill_style","filter","first_btn","first_error","first_event","first_key","first_key_act","first_key_bahavior","first_key_explicit","first_key_sym","first_keycode","first_lvl","first_modmap_key","first_si","first_type","first_type","first_vmodmap_key","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","focus","focus_change","font","font","font","font_set","font_set","foreground","format","format","format","free_private","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_configure","funcs","function","generic_event_cookie","geom","geometry","get_byte","get_long","get_pixel","get_short","get_type","global_auto_repeat","glyphset","glyphset","glyphset","grab_mods","grab_mods","graphics_expose","graphics_exposures","graphics_exposures","gravity","green","green","green","green","green","greenMask","green_mask","green_mask","green_mask","green_max","green_mult","group","group","group","group","group","groups","groups","groups_wrap","hSkew","hSyncEnd","hSyncStart","hTotal","header","header","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height_inc","height_inc","icon_mask","icon_pixmap","icon_window","icon_x","icon_y","id","id","id","id","id","ignore_loc","images","immutable","increment","indicators","indicators","info","initial_state","inner","input","input_class","inputclassinfo","internal","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","is_hint","join_style","key","key","key_aliases","key_click_percent","key_click_percent","key_event_follows","key_vector","keycode","keycode","keycode","keycode","keycode","keycodes","keycodes","keymap","keys","killid","kind","label","labels","latched","latched_group","latched_group","latched_mods","latched_mods","lbearing","led","led_class","led_id","led_mask","led_mode","led_state","leds_defined","left","left","left","length","length","length","length","length","length","line_style","line_width","locked","locked_group","locked_group","locked_mods","locked_mods","lookup_mods","lookup_mods","magic","major_code","major_code","major_opcode","major_version","map","map","map_entries","map_installed","map_request","map_state","mapping","maps","mask","mask","mask","mask","mask_len","mask_len","mask_len","matrix","max","max_aspect","max_bounds","max_byte1","max_char_or_byte2","max_height","max_height","max_ink_extent","max_key_code","max_key_code","max_key_code","max_keypermod","max_logical_extent","max_maps","max_width","max_width","message","message_type","mheight","mheight","mheight","mheight","min","min_aspect","min_bounds","min_byte1","min_char_or_byte2","min_height","min_height","min_key_code","min_key_code","min_key_code","min_maps","min_width","min_width","minor_code","minor_code","minor_code","minor_version","mk_curve","mk_delay","mk_dflt_btn","mk_interval","mk_max_speed","mk_time_to_max","mm_height","mm_width","mode","mode","mode","mode","mode","mode","mode","mode","modeFlags","modes","modes","modifiermap","modifiers","mods","mods","mods","mods","mods","motion","multi_byte","mwidth","mwidth","mwidth","mwidth","n_properties","nalias","name","name","name","name","name","name","name","name","name","name","name","nameLen","nameLen","nameLength","names","nassociatedproviders","nchars","nchars","nchars","nchars","nchars","nchars","nchars","nclone","ncomment","ncrtc","ncrtc","ncrtcs","ncursor","ndepths","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","new","new","new","new_master","next","nfilter","nimage","nitems","nmode","nmode","no_expose","noutput","noutput","noutput","noutputs","npossible","npreferred","nproviders","ntoc","num_aliases","num_btns","num_buttons","num_classes","num_classes","num_classes","num_classes","num_classes","num_groups","num_groups","num_info","num_key_acts","num_key_aliases","num_key_behaviors","num_key_explicit","num_key_syms","num_keycodes","num_keys","num_keys","num_lvls","num_modmap_keys","num_radio_groups","num_rg","num_si","num_si","num_total_si","num_touches","num_types","num_types","num_values","num_vmodmap_keys","number","number","number","nvisuals","obdata","old_device","old_max_key_code","old_min_key_code","open","open","open","open","open","open","open","open","option","outer","output","output","outputs","outputs","outputs","outputs","override_redirect","override_redirect","override_redirect","override_redirect","override_redirect","override_redirect","owner","p1","p1","p1","p2","p2","p2","p3","pad","pad","parent","parent","parent","parent","parent","pending","pendingFilter","pendingNparams","pendingParams","pendingTransform","per_char","per_key_repeat","percent","phys_indicators","phys_symbols","pitch","pixel","pixel","pixels","place","place","plane_mask","poly_edge","poly_mode","position","position","possible","present","press","primary","private_data","properties","property","property","property","property","property","property","provider","provider","providers","ptr_buttons","ptr_buttons","put_pixel","radio_groups","radius","range","raw_values","rbearing","read","real","real_mods","reason","reason","red","red","red","red","red","redMask","red_mask","red_mask","red_mask","red_max","red_mult","ref_","remove","reparent","repeat","repeat_delay","repeat_interval","req_major","req_major","req_major","req_minor","req_minor","req_minor","request","request_code","requestor","requestor","res_class","res_name","resize_request","resolution","resourceid","return_keyboard","return_mode","return_pointer","right","right","root","root","root","root","root","root","root","root","root","root","root","root_depth","root_input_mask","root_visual","root_x","root_x","root_x","root_y","root_y","root_y","rotation","rotation","rotation","rotation","rotations","same_screen","same_screen","same_screen","same_screen","same_screen","save_under","save_under","save_unders","scanline_pad","scanline_pad","screen","screen","scroll_type","seek","selection","selection","selection","selection","selection_clear","selection_request","send_core","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","send_event","sequence","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","serial","server","set_byte","set_long","set_short","sibling","size","size","size","size_index","size_si","sk_delay","slow_keys_delay","sourceid","sourceid","sourceid","sourceid","sourceid","sourceid","sourceid","sourceid","sourceid","sourceid","sourceid","sourceid","specifier","stack_mode","state","state","state","state","state","state","state","state","state","state","state","status","stipple","string","style","sub_image","subpixel_order","subpixel_order","subpixel_order","subtype","subtype","subtype","subtype","subtype","subtype","subtype","subtype","subtype","subwindow","subwindow","subwindow","subwindow","subwindow_mode","subwindow_mode","supported","sym_interpret","symbols","target","target","text","tile","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","tocs","top","top","top","touchid","track_height","track_left","track_top","track_width","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","ts_x_origin","ts_y_origin","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","unmap","unsupported","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","use_","vSyncEnd","vSyncStart","vTotal","valuators","valuators","value","value","value","value_mask","values","values","version","version","version","version","visibility","visual","visual","visualid","visualid","visualid","visuals","vmods","vmods","vmods","what","white_pixel","wide_char","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width_inc","width_inc","win_gravity","win_gravity","win_gravity","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window_group","write","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x1","x2","xError","xEvent","xOff","xOff","xOff","xOff","x_root","x_root","x_root","x_root","xcb_connection_t","xf86vm_notify","xhot","xkb","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xkb_type","xoffset","xrr_crtc_change_notify","xrr_notify","xrr_output_change_notify","xrr_output_property_notify","xrr_provider_change_notify","xrr_provider_property_notify","xrr_resource_change_notify","xrr_screen_change_notify","xss_notify","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y1","y2","yOff","yOff","yOff","yOff","y_root","y_root","y_root","y_root","yhot","your_event_mask","AaRect","Add","Append","CARDINAL_SIZE","Cardinal","Char","ClientMsgPayload","Combo","Desktop","Dialog","Dnd","Dock","DropdownMenu","EnvVarDPI","FORMAT","Flusher","Format","FormatMismatch","Formattable","FrameExtents","FrameExtentsHeuristic","FrameExtentsHeuristicPath","Geometry","GetPropertyError","LogicalFrameExtents","Long","Menu","MotifHints","Normal","NormalHints","NotSet","NothingAllocated","Notification","PointerState","PopupMenu","Prepend","PropMode","Randr","Remove","Replace","Scale","Short","Splash","StateOperation","Supported","Toggle","Toolbar","Tooltip","TranslatedCoords","TypeMismatch","UnsupportedBordered","UnsupportedNested","Utility","VIRTUAL_CORE_KEYBOARD","VIRTUAL_CORE_POINTER","WindowType","XError","XSmartPointer","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","border","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bottom","calc_dpi_factor","child","child","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","contains_point","default","default","depth","deref","deref_mut","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drop","drop","eq","eq","eq","equivalent","equivalent","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame_extents","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_border","from_format","get_actual_size","get_modifier_state","get_overlapping_area","get_position","group","has_flag","height","heuristic_path","hint_is_supported","inner_pos_to_outer","inner_size_to_outer","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","is_actual_property_type","keys","left","left","maybe_change","modifiers","ne","new","new","new","new","new","new","partial_cmp","ptr","queue","relative_to_window","right","right","root","root","root_x","root_y","set_base_size","set_decorations","set_max_size","set_maximizable","set_min_size","set_position","set_resize_increments","set_size","sync","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top","top","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","width","win_x","win_y","wm_name_is_one_of","x_rel_parent","x_rel_root","y_rel_parent","y_rel_root","0","0","0","0","Keymap","KeymapIter","adapt_into_using","adapt_into_using","borrow","borrow","borrow_mut","borrow_mut","downcast","downcast","from","from","into","into","into_color","into_color","into_color_unclamped","into_color_unclamped","into_iter","iter","next","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","upcast","upcast","Alt","Ctrl","Logo","Modifier","ModifierKeyState","ModifierKeymap","Shift","adapt_into_using","adapt_into_using","adapt_into_using","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","downcast","downcast","downcast","eq","equivalent","fmt","fmt","fmt","from","from","from","get_modifier","into","into","into","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","key_event","key_press","key_release","modifiers","new","reset_from_x_connection","reset_from_x_keymap","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","upcast","upcast","upcast","update_keymap","update_state","Alias","AllScroll","Arrow","BadIcon","Borderless","ByteCountNotDivisibleBy4","Cell","ColResize","ContextMenu","Copy","Critical","Crosshair","CursorIcon","Dark","Default","DimensionsVsPixelCount","EResize","EwResize","Exclusive","Fullscreen","Grab","Grabbing","Hand","Help","Icon","Informational","Light","Move","NResize","NeResize","NeswResize","NoDrop","NotAllowed","NsResize","NwResize","NwseResize","OsError","Progress","RowResize","SResize","SeResize","SwResize","Text","Theme","UserAttentionType","VerticalText","WResize","Wait","Window","WindowAttributes","WindowBuilder","WindowId","ZoomIn","ZoomOut","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","always_on_top","available_monitors","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","current_monitor","decorations","default","default","default","default","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","drag_window","drop","dummy","eq","eq","eq","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus_window","from","from","from","from","from","from","from","from","from","from","from","from_rgba","fullscreen","fullscreen","get_hash","get_hash","hash","hash","id","inner_position","inner_size","inner_size","into","into","into","into","into","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","is_maximized","is_ready","max_inner_size","maximized","min_inner_size","ne","ne","new","new","outer_position","outer_size","partial_cmp","position","primary_monitor","raw_window_handle","raw_window_handle","request_redraw","request_user_attention","resizable","scale_factor","set_always_on_top","set_cursor_grab","set_cursor_icon","set_cursor_position","set_cursor_visible","set_decorations","set_fullscreen","set_ime_position","set_inner_size","set_max_inner_size","set_maximized","set_min_inner_size","set_minimized","set_outer_position","set_resizable","set_title","set_visible","set_window_icon","source","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","visible","wayland_display","wayland_surface","window","window_icon","with_always_on_top","with_app_id","with_base_size","with_class","with_decorations","with_fullscreen","with_gtk_theme_variant","with_inner_size","with_max_inner_size","with_maximized","with_min_inner_size","with_override_redirect","with_position","with_resizable","with_resize_increments","with_title","with_transparent","with_visible","with_window_icon","with_x11_screen","with_x11_visual","with_x11_window_type","xcb_connection","xlib_display","xlib_screen_id","xlib_window","0","byte_count","height","pixel_count","width","width_x_height","0","0","0","A","AbntC1","AbntC2","Angle","AnimationMode","Apostrophe","Application","Apps","Asterisk","At","Ax","B","Back","Backslash","Batch","Begin","C","Calculator","Cancelled","Capital","Caret","Colon","Color","Comma","Compose","ControlPoint","Convert","Copy","Core","Cubic","Cut","D","Delete","DeviceId","Down","E","ElementState","End","End","Ended","Endpoint","Equals","Error","Escape","Event","EventStatus","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","Figure","Fill","Font","Forward","FrameRenderer","G","Grave","H","Home","I","Ignored","InputEvent","Insert","InternalWindowMessageSend","J","K","Kana","Kanji","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","Keyboard","L","LAlt","LBracket","LControl","LShift","LWin","Left","Left","Line","LineDelta","M","Mail","MediaSelect","MediaStop","Middle","Minus","MouseButton","MouseButton","MouseMoved","MouseScrollDelta","MouseWheel","Moved","Mute","MyComputer","N","NavigateBackward","NavigateForward","NextTrack","NoConvert","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEquals","NumpadMultiply","NumpadSubtract","O","OEM102","Other","Other","P","PageDown","PageUp","Paste","Path","PathBuilder","PathEvent","Pause","Period","PingPong","PixelDelta","Pixels","Pixels","PlayPause","Plus","Point","Points","Power","PreparedSpan","Pressed","PrevTrack","Processed","Q","Quadratic","R","RAlt","RBracket","RControl","RShift","RWin","Rect","RedrawRequester","RedrawStatus","Released","Return","Reverse","Right","Right","Runtime","S","Scale","Scaled","Scaled","ScanCode","Scene","Scroll","Semicolon","Shape","ShutdownCallback","SingleWindowApplication","Size","Slash","Sleep","Snapshot","Space","Sprite","SpriteAnimation","SpriteAnimations","SpriteCollection","SpriteFrame","SpriteMap","SpriteRotation","SpriteSheet","SpriteSource","SpriteSourceSublocation","Started","Stop","Stroke","Sysrq","T","Tab","Target","Text","Texture","TouchPhase","U","Underline","Unknown","Unlabeled","Up","V","Vector","VirtualKeyCode","VolumeDown","VolumeUp","W","Wake","WebBack","WebFavorites","WebForward","WebHome","WebRefresh","WebSearch","WebStop","Window","WindowBuilder","WindowCreator","WindowHandle","X","Y","Yen","Z","_","_","_","_","_","_","_","_","_","additional_scale","always_on_top","angle","animations","approx_eq","approx_ne","area","as_extents","as_rect","as_sized","bundled_fonts","ceil","center","clip","close_requested","color","color","contains","decorations","destination","device_id","duration","event","floor","frames","get_window_builder","height","image","include_aseprite_sprite","include_font","include_texture","inflate","initial_position","initial_size","initial_system_theme","initialize","initialize","intersection","is_empty","keys_pressed","location","location","location","maximized","mode","offset","one","open_window_count","options","options","origin","process_input","receive_character","render","resizable","round","scene","should_exit","shutdown","size","source","source","sprite","sprites","target_fps","texture","texture","to_non_empty","to_pixels","to_point","to_points","to_scaled","to_size","to_vector","translate","transparent","union","update","visible","width","window_title","zero","0","0","0","button","delta","key","position","scancode","state","state","touch_phase","0","0","0","1","at","close","ctrl","ctrl1","ctrl2","first","from","from","from","last","to","to","to","ROBOTO","ROBOTO_BLACK","ROBOTO_BLACK_ITALIC","ROBOTO_BOLD","ROBOTO_BOLD_ITALIC","ROBOTO_ITALIC","ROBOTO_LIGHT","ROBOTO_LIGHT_ITALIC","ROBOTO_MEDIUM","ROBOTO_MEDIUM_ITALIC","ROBOTO_THIN","ROBOTO_THIN_ITALIC","PersistentMap","PersistentTileMap","PersistentTileProvider","PersistentTileSource","Sprite","Sprite","SpriteSource","SpriteSource","Tile","TileMap","TileProvider","TileSprite","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","blank","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref_mut","downcast","downcast","downcast","downcast","downcast","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_frame","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","location","new","new","persistent_with_size","render","render_scaled","set","set","set_stagger","sprite","tile","tile","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","0","0","0","0"],"q":["kludgine","","","","","kludgine::app","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::app::Error","","","kludgine::app::event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::app::event::Event","","","","","","","","kludgine::app::event::MouseButton","kludgine::app::event::MouseScrollDelta","","","kludgine::app::preludekludgine::app::prelude::Error","","","kludgine::app::prelude::Event","","","","","","","","kludgine::app::prelude::MouseButton","kludgine::app::prelude::MouseScrollDelta","","","kludgine::corekludgine::core::Error","","","","kludgine::core::easygpu","","","","","","","","","","","","","","","","kludgine::core::easygpu::binding","","","","","","","","","","","","","","","","","kludgine::core::easygpu::binding::BindingType","kludgine::core::easygpu::buffers","","","","","","","","","","","","","","","kludgine::core::easygpu::canvas","","","","","","kludgine::core::easygpu::color","","","","","","","","","","","","","","","kludgine::core::easygpu::device","","","","kludgine::core::easygpu::error","","","kludgine::core::easygpu::error::Error","kludgine::core::easygpu::figureskludgine::core::easygpu::figures::Angle","","kludgine::core::easygpu::figures::Rect","","kludgine::core::easygpu::figures::approx","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::easygpu::figures::num_traitskludgine::core::easygpu::figures::num_traits::bounds","","","kludgine::core::easygpu::figures::num_traits::cast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::easygpu::figures::num_traits::float","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::easygpu::figures::num_traits::identities","","","","","","","","","","kludgine::core::easygpu::figures::num_traits::int","","","","","","","","","","","","","","","","","kludgine::core::easygpu::figures::num_traits::ops","","","","","","kludgine::core::easygpu::figures::num_traits::ops::checked","","","","","","","","","","","","","","","","kludgine::core::easygpu::figures::num_traits::ops::inv","","","kludgine::core::easygpu::figures::num_traits::ops::mul_add","","","","","kludgine::core::easygpu::figures::num_traits::ops::overflowing","","","","","","kludgine::core::easygpu::figures::num_traits::ops::saturating","","","","","","","","","kludgine::core::easygpu::figures::num_traits::ops::wrapping","","","","","","","","","","","","kludgine::core::easygpu::figures::num_traits::pow","","","","","kludgine::core::easygpu::figures::num_traits::real","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::easygpu::figures::num_traits::sign","","","","","","","","","","kludgine::core::easygpu::frame","","kludgine::core::easygpu::pipeline","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::easygpu::preludekludgine::core::easygpu::prelude::BindingType","kludgine::core::easygpu::prelude::Error","kludgine::core::easygpu::prelude::Op","","","","","","","","","","kludgine::core::easygpu::prelude::PassOp","kludgine::core::easygpu::prelude::wgpukludgine::core::easygpu::prelude::wgpu::BindingResource","","","","","kludgine::core::easygpu::prelude::wgpu::BindingType","","","","","","","","","","","kludgine::core::easygpu::prelude::wgpu::BufferBindingType","kludgine::core::easygpu::prelude::wgpu::Error","","","kludgine::core::easygpu::prelude::wgpu::LoadOp","kludgine::core::easygpu::prelude::wgpu::QueryType","kludgine::core::easygpu::prelude::wgpu::ShaderSource","","kludgine::core::easygpu::prelude::wgpu::TextureSampleType","kludgine::core::easygpu::prelude::wgpu::util","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::easygpu::renderable","","","kludgine::core::easygpu::renderer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::easygpu::renderer::Op","","","","","","","","","","kludgine::core::easygpu::renderer::PassOp","kludgine::core::easygpu::sampler","","kludgine::core::easygpu::shader","","","kludgine::core::easygpu::texture","","","","","","kludgine::core::easygpu::transform","","","kludgine::core::easygpu::vertex","","","","","","","kludgine::core::flumekludgine::core::flume::SendTimeoutError","","kludgine::core::flume::TrySendError","","kludgine::core::flume::async","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::flume::select","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::frame_renderer","","","kludgine::core::imagekludgine::core::image::DynamicImage","","","","","","","","","","kludgine::core::image::ExtendedColorType","kludgine::core::image::ImageError","","","","","","kludgine::core::image::ImageOutputFormat","kludgine::core::image::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::image::errorkludgine::core::image::error::ImageError","","","","","","kludgine::core::image::error::ImageFormatHint","","","kludgine::core::image::error::ParameterErrorKind","kludgine::core::image::error::UnsupportedErrorKind","","","kludgine::core::image::flatkludgine::core::image::flat::Error","","kludgine::core::image::imageops","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::image::imageops::colorops","","","","","","","","","","","","","","","","","kludgine::core::image::io","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::image::math","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::image::math::nq","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::image::math::utils","kludgine::core::lazy_static","","","","","","kludgine::core::math","","","","","","","","","","","","","kludgine::core::preludekludgine::core::prelude::PathEvent","","","","","","","","","","","","","kludgine::core::scene","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::scene::Element","","","","","kludgine::core::scene::SceneEvent","","kludgine::core::shape","","","","","","","","","","","","","","","","","","kludgine::core::shape::PathEvent","","","","","","","","","","","","","kludgine::core::sprite","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::sprite::SpriteSourceLocation","","kludgine::core::text","","","","kludgine::core::text::bundled_fontskludgine::core::text::prepared","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::texture","","kludgine::core::winit","","","","","","","kludgine::core::winit::dpikludgine::core::winit::dpi::Position","","kludgine::core::winit::dpi::Size","","kludgine::core::winit::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::winit::error::ExternalError","","kludgine::core::winit::eventkludgine::core::winit::event::DeviceEvent","","","","","","","","kludgine::core::winit::event::Event","","","","","","","kludgine::core::winit::event::Force","","","","kludgine::core::winit::event::MouseButton","kludgine::core::winit::event::MouseScrollDelta","","","kludgine::core::winit::event::StartCause","","","","kludgine::core::winit::event::WindowEvent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::winit::event_loop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::winit::event_loop::ControlFlow","kludgine::core::winit::monitor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::winit::platform","","kludgine::core::winit::platform::run_return","","","kludgine::core::winit::platform::unix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::winit::platform::unix::XNotSupported","kludgine::core::winit::platform::unix::xkludgine::core::winit::platform::unix::x11::XNotSupported","kludgine::core::winit::platform::unix::x11::ffikludgine::core::winit::platform::unix::x11::utilkludgine::core::winit::platform::unix::x11::util::EnvVarDPI","kludgine::core::winit::platform::unix::x11::util::GetPropertyError","","","kludgine::core::winit::platform::unix::x11::util::keys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::winit::platform::unix::x11::util::modifiers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::core::winit::windowkludgine::core::winit::window::BadIcon","","","","","","kludgine::core::winit::window::Fullscreen","","kludgine::preludekludgine::prelude::Error","","","kludgine::prelude::Event","","","","","","","","kludgine::prelude::MouseButton","kludgine::prelude::MouseScrollDelta","","","kludgine::prelude::PathEvent","","","","","","","","","","","","","kludgine::prelude::bundled_fonts","","","","","","","","","","","","kludgine::tilemap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine::tilemap::PersistentTileSource","","kludgine::tilemap::TileSprite",""],"d":["Alias for <code>std::result::Result</code> where the error type is <code>Error</code>…","","Convenience module that exports the public interface of …","","Types for rendering tilemaps. Requires <code>unstable-apis</code> …","","A trait that describes the application’s behavior.","An error from <code>kludgine-core</code> occurred.","All errors that kludgine-app can return.","An error occurred while communicating internally between …","A window that can be opened.","An error from user code arose.","Allows requesting window refreshes outside of the event …","Tracks when a window should be redrawn. Allows for …","Alias for <code>std::result::Result</code> where the error type is <code>Error</code>…","Runtime is designed to consume the main thread. For …","An <code>Application</code> implementation that begins with a single …","Trait to implement a Window","A builder for a <code>Window</code>.","Defines initial window properties.","A handle to an open window.","","","","","","","","Called prior to rendering to allow setting a scaling …","Whether the window should always be on top or not.","Wakes the event loop, without necessarily redrawing.","Executes a future in a blocking-safe manner.","","","","","","","","","","","","","","","","","","","The window was requested to be closed, most likely from …","Whether the window should be drawn with decorations or not.","","","","","","","","","Estimates the next redraw instant by adding <code>duration</code> to …","Estimates the next redraw instant. If <code>instant</code> is later …","Types for event handling.","","","","","","","","","","","","","","","Returns a <code>WindowBuilder</code> for this window.","The initial position of the window. If None is returned, …","The initial size of the window.","The default <code>Theme</code> for the <code>Window</code> if <code>winit</code> is unable to …","Executed upon application launch.","Initializes the managed async runtime.","Called when the window is being initilaized.","Returns the position of the top-left of the content area …","Returns the size of the content area of the window.","","","","","","","","","","","","","","","","","","","","","","Whether the window should be maximized or not.","Returns true if the window is maximized.","Returns a new runtime for <code>app</code>.","Opens <code>self</code> as a <code>Window</code>.","Opens a <code>Window</code>. Requires feature <code>multiwindow</code>.","Returns the number of open windows.","Returns the position on the screen of the window’s …","A collection of commonly used exports provided by this …","The window has received an input event.","A text input was received.","Returns a redraw requester that can be used outside of the …","Renders the contents of the window. Called whenever the …","Requests that the window close.","Requests the window refresh itself. This will trigger …","Whether the window should be resizable or not.","Runs the app. Does not return.","Executes the runtime’s event loop.","Sets whether the window should always be on top of other …","Attempts to resize the window to <code>new_size</code>. This may not …","Sets whether the window should be maximized.","Sets whether the window should be minimized.","Triggers a redraw as soon as possible. Any estimated frame …","Triggers an update as soon as possible. Does not affect …","Sets the outer position of the window. This may not work …","Sets the window title.","Return true if the app should exit. Default implementation …","","Spawns an async task.","Specify a target frames per second, which will force your …","Executes <code>future</code> for up to <code>duration</code>. If a timeout occurs, …","","","","Whether the window should be transparent or not.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Called on a regular basis as events come in. Use <code>status</code> to …","Whether the window should be visible or not.","The initial title of the window.","Builder-style function. Sets <code>alawys_on_top</code> and returns …","Builder-style function. Sets <code>decorations</code> and returns self.","Builder-style function. Sets <code>icon</code> and returns self.","Builder-style function. Sets <code>initial_system_theme</code> and …","Builder-style function. Sets <code>maximized</code> and returns self.","Builder-style function. Sets <code>size</code> and returns self.","Builder-style function. Sets <code>resizable</code> and returns self.","Builder-style function. Sets <code>size</code> and returns self.","Builder-style function. Sets <code>title</code> and returns self.","Builder-style function. Sets <code>transparent</code> and returns self.","Builder-style function. Sets <code>visible</code> and returns self.","","","","","","","","","","","","","The Backspace key, right over Enter.","","","","","","","","","The “Compose” key on Linux.","","","","","","Identifier of an input device.","","","Describes the input state of a key.","","","","The Escape key, next to F1.","An input Event","Whether an event has been processed or ignored.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The event was not handled.","An Event from a device","<code>Insert</code>, next to Backspace.","","","","","The ‘0’ key over the ‘O’ and ‘P’ keys.","The ‘1’ key over the letters.","The ‘2’ key over the letters.","The ‘3’ key over the letters.","The ‘4’ key over the letters.","The ‘5’ key over the letters.","The ‘6’ key over the letters.","The ‘7’ key over the letters.","The ‘8’ key over the letters.","The ‘9’ key over the letters.","A keyboard event","","","","","","","","","Amount in lines or rows to scroll in the horizontal and …","","","","","","","Describes a button of a mouse controller.","A mouse button event","Mouse cursor event","Describes a difference in the mouse scroll wheel state.","Mouse wheel event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pause/Break key, next to Scroll lock.","","Amount in pixels to scroll in the horizontal and vertical …","","","","","","The event was handled and should not be processed any …","","","","","","","","","The Enter key.","","","","Hardware-dependent keyboard scan code.","Scroll Lock.","","","","Print Screen/SysRq.","The space bar.","","","","","","Describes touch-screen input state.","","","","","","Symbolic name for a keyboard key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The device that triggered this event","","","","","","The event that was triggered","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates <code>self</code> such that if either <code>self</code> or <code>other</code> are …","The button tha triggered this event.","The scroll amount.","Contains a <code>VirtualKeyCode</code> if <code>scancode</code> was interpetted as a …","The location within the window of the cursor. Will be …","The hardware-dependent scan code.","Indicates pressed or released/","Indicates pressed or released/","If this event was caused by touch events, the phase of the …","","","","","","","","","","A trait that describes the application’s behavior.","","","","","","The Backspace key, right over Enter.","","","","","","","","","The “Compose” key on Linux.","","","An error from <code>kludgine-core</code> occurred.","","","","Identifier of an input device.","","","Describes the input state of a key.","","","","All errors that kludgine-app can return.","The Escape key, next to F1.","An input Event","Whether an event has been processed or ignored.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The event was not handled.","An Event from a device","<code>Insert</code>, next to Backspace.","An error occurred while communicating internally between …","","","","","The ‘0’ key over the ‘O’ and ‘P’ keys.","The ‘1’ key over the letters.","The ‘2’ key over the letters.","The ‘3’ key over the letters.","The ‘4’ key over the letters.","The ‘5’ key over the letters.","The ‘6’ key over the letters.","The ‘7’ key over the letters.","The ‘8’ key over the letters.","The ‘9’ key over the letters.","A keyboard event","","","","","","","","","Amount in lines or rows to scroll in the horizontal and …","","","","","","","Describes a button of a mouse controller.","A mouse button event","Mouse cursor event","Describes a difference in the mouse scroll wheel state.","Mouse wheel event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An error from user code arose.","","","","","Pause/Break key, next to Scroll lock.","","Amount in pixels to scroll in the horizontal and vertical …","","","","","","The event was handled and should not be processed any …","","","","","","","","Allows requesting window refreshes outside of the event …","Tracks when a window should be redrawn. Allows for …","","The Enter key.","","","Runtime is designed to consume the main thread. For …","","Hardware-dependent keyboard scan code.","Scroll Lock.","","An <code>Application</code> implementation that begins with a single …","","","Print Screen/SysRq.","The space bar.","","","","","","Describes touch-screen input state.","","","","","","Symbolic name for a keyboard key.","","","","","","","","","","","","Trait to implement a Window","A builder for a <code>Window</code>.","Defines initial window properties.","A handle to an open window.","","","","","Called prior to rendering to allow setting a scaling …","Whether the window should always be on top or not.","The window was requested to be closed, most likely from …","Whether the window should be drawn with decorations or not.","The device that triggered this event","The event that was triggered","Returns a <code>WindowBuilder</code> for this window.","The initial position of the window. If None is returned, …","The initial size of the window.","The default <code>Theme</code> for the <code>Window</code> if <code>winit</code> is unable to …","Executed upon application launch.","Called when the window is being initilaized.","Whether the window should be maximized or not.","Returns the number of open windows.","The window has received an input event.","A text input was received.","Renders the contents of the window. Called whenever the …","Whether the window should be resizable or not.","Return true if the app should exit. Default implementation …","Specify a target frames per second, which will force your …","Whether the window should be transparent or not.","Called on a regular basis as events come in. Use <code>status</code> to …","Whether the window should be visible or not.","The initial title of the window.","","","","The button tha triggered this event.","The scroll amount.","Contains a <code>VirtualKeyCode</code> if <code>scancode</code> was interpetted as a …","The location within the window of the cursor. Will be …","The hardware-dependent scan code.","Indicates pressed or released/","Indicates pressed or released/","If this event was caused by touch events, the phase of the …","","","","","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","A RGBA color with f32 components.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","All errors that <code>kludgine-core</code> can return.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Renders frames created by a <code>Scene</code>.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","An error opening an image.","The sprite’s current tag has no frames.","An error parsing Json.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Alias for <code>std::result::Result</code> where the error type is <code>Error</code>…","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","A callback that can be invoked when a <code>FrameRenderer</code> is …","An error while parsing sprite data.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","An error while rendering shapes.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","","","","Returns the alpha component.","Returns the blue component.","","","","","","","","","Darkens the color by <code>amount</code>.","","","","","","","","","Renders individual frames. Can be used for offscreen …","","","","","","","","","Returns the green component.","Includes an Aseprite sprite sheet and Json export. For …","Embeds a font into your executable.","Embeds a texture in the binary.","","","","","","","","","","Lightens the color by <code>amount</code>.","Math types for 2d geometry.","","Equivalent to the CSS color keywords of the same name.","A collection of commonly used exports provided by this …","Returns the red component.","Launches a thread that renders the results of the …","Returns the color as an f32 array.","Launches a thread that renders the results of the …","<code>Scene</code> and <code>Target</code> types that are used to draw.","Types for rendering shapes.","Invoked when the <code>FrameRenderer</code> is fully shut down.","","Types for rendering sprites.","Types for rendering text.","Types for managing textures.","","","","","","","","","","","","","","","","","","Returns if the color has a non-zero alpha value.","Returns a new color using red, green, and blue from <code>self</code> …","","","","","","","","","","","","","","","","","","","","","A trait representing a resource that can be bound.","","A group of bindings.","The layout of a <code>BindingGroup</code>.","A binding type.","","","","","","","","","","","","","","Z-Depth buffer.","Off-screen framebuffer. Can be used as a render target in …","","A uniform buffer that can be bound in a ‘BindingGroup’.","","","","","","","","","","","","","","","","","","A BGRA color with 8-bit channels, used when dealing with …","","","","","","","","","","","","","","","","","","","","","","","An angle of rotation.","Allows comparing floating point numbers with approximation.","Defines the smallest integer equal or greater than the …","An angle expressed in degrees.","Scaling ratios for <code>Scaled</code> and <code>Displayable</code>.","Methods for converting between display scales.","An <code>ExtentsRect</code>.","A rectangle that uses two <code>Point</code>s for representation.","A value in a specific unit.","Defines the biggest integer equal or lower than the …","Returns a one value.","A unit representing physical pixels.","The <code>Pixels</code> unit type for this implementor.","A location represented by an x and y value.","A unit representing DPI-adjusted resolution configured on …","The <code>Points</code> unit type for this implementor.","An angle expressed in radians.","A 2d rectangle. This type may internally be represented …","Functionalitiy that all rectangle types implement","Defines the nearest integer value to the original value.","Allows converting between <code>UnitA</code> and <code>UnitB</code> by multiplying …","A unit representing virtual pixels that are scaled on top …","The <code>Scaled</code> unit type for this implementor.","A measurement of space using width and height.","A <code>SizedRect</code>.","A rectangle that uses a <code>Point</code> and a <code>Size</code> for …","A 2d measurement using x and y values.","Methods that enable converting between 2d types that have …","Returns a zero value.","Returns a new instance with the absolute value of each …","Returns a new instance with the absolute value of each …","Returns a new instance with the absolute value of each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the scale between <code>Points</code> and <code>Scaled</code>.","Returns true if the values are approximately equal. Uses […","","","","","","","","Returns true if the values are not approximately equal. …","Returns the area contained by this rectangle.","Returns the area represented by this size.","Returns this rectangle converted to an <code>ExtentsRect</code>.","","","","Returns this rectangle as a <code>Rect</code>. The rectangle’s …","","","","Returns this rectangle converted to a <code>SizedRect</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts <code>T</code> to <code>NewT</code>.","Casts <code>T</code> to <code>NewT</code>.","Casts <code>T</code> to <code>NewT</code>.","Converts from <code>T</code> to <code>Output</code>.","Converts from <code>T</code> to <code>Output</code>.","Converts from <code>T</code> to <code>Output</code>.","Returns this value with the new unit. Does not affect the …","Returns this value with the new unit. Does not affect the …","Returns this value with the new unit. Does not affect the …","Returns this value with the new unit. Does not affect the …","Returns this value with the new unit. Does not affect the …","Returns this value with the new unit. Does not affect the …","Returns this value with the new unit. Does not affect the …","Rounds to the smallest integer equal or greater than the …","","","","","","","","Returns the center of the rectangle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if <code>point</code> is within this rectangle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns this angle, converting to degrees if necessary.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the scale between <code>Pixels</code> and <code>Points</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","The non-origin point of the rectangle.","Returns a new rect using points <code>origin</code> and <code>extent</code>.","Rounds to the biggest integer equal or lower than the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a new `","Returns a new `","Returns a new `","Returns a new vector with <code>height</code>, and <code>T::default()</code> for …","Returns a new vector with <code>width</code>, and <code>T::default()</code> for …","Returns a new point with <code>x</code>, and <code>T::default()</code> for <code>y</code>.","Returns a new vector with <code>x</code>, and <code>T::default()</code> for <code>y</code>.","Returns a new point with <code>y</code>, and <code>T::default()</code> for <code>x</code>.","Returns a new vector with <code>y</code>, and <code>T::default()</code> for <code>x</code>.","Returns the inner value","Returns the scaling ratio.","Returns the height of the rectangle.","","","","Returns the","","Increases the size of this rectangle by the vector …","","","","Returns the intersecting area between the two rectangles. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the inverse of this scale.","Returns true if the rect doesn’t have a positive width …","","Returns the larger value of <code>self</code> and <code>rhs</code>.","Returns a new `","Returns a new `","Returns a new `","Returns the smaller value of <code>self</code> and <code>rhs</code>.","Returns a new `","Returns a new `","Returns a new `","","","","","","","","","","","","","","","","","","","","","Returns a new instance with the two scales provided.","Returns a new figure with <code>value</code>.","Returns a new rectangle using <code>origin</code> and <code>size</code>.","Returns a new rectangle using <code>origin</code> and <code>extent</code>.","Returns a new scale with the given <code>ratio</code>.","Returns a new `","Returns a new `","Returns a new `","Returns a one value.","","","","","","","","Returns the origin of the rectangle.","","","","The origin of the rectangle.","The origin of the rectangle.","","","","","","Returns this angle, converting to radians if necessary.","","","","","","","","","","","","","","","","","","","Rounds to the nearest integer value.","","","","","","","","Returns a new rectangle that rounds the origin up using …","Returns a new rectangle that rounds the origin up using …","Returns a new rectangle that rounds the origin up using …","Returns a new rectangle that rounds the origin down using …","Returns a new rectangle that rounds the origin down using …","Returns a new rectangle that rounds the origin down using …","","","","","","","","","","","","","Sets the scale factor between <code>Points</code> and <code>Scaled</code>.","Sets the scale factor between <code>Pixels</code> and <code>Points</code>.","Returns a <code>Vector</code> with the result of <code>signum()</code> called on each","Returns a <code>Vector</code> with the result of <code>signum()</code> called on each","Returns a <code>Vector</code> with the result of <code>signum()</code> called on each","Returns the size of the rectangle.","The size of the rectangle.","Returns a new rect using <code>origin</code> and <code>size</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks to see if this rect is empty. If it is, None is …","","","","","","","","","","","","","","Returns this value after applying <code>scale</code>, if needed.","","","","","","","","","","","","","","","","","","","","","","Returns <code>self</code> as a <code>Point</code>.","","","","Returns this value after applying <code>scale</code>, if needed.","","","","","","","","","","","","","","","","","","","","","","Returns this value after applying <code>scale</code>, if needed.","","","","","","","","","","","","","","","","","","","","","","Returns <code>self</code> as a <code>Size</code>.","","","","","","","","","","Returns <code>self</code> as a <code>Vector</code>.","","","","Returns the scale between <code>Pixels</code> and <code>Scaled</code>.","Transforms <code>point</code> around 0,0 by this angle.","Transforms <code>vector</code> around 0,0 by this angle.","Moves this rectangle by the vector provided.","","","","Attempts to cast <code>T</code> to <code>NewT</code>. If unsuccessful, None is …","Attempts to cast <code>T</code> to <code>NewT</code>. If unsuccessful, None is …","Attempts to cast <code>T</code> to <code>NewT</code>. If unsuccessful, None is …","Attempts to convert from <code>T</code> to <code>Output</code> using <code>NumCast</code>. …","Attempts to convert from <code>T</code> to <code>Output</code> using <code>NumCast</code>. …","Attempts to convert from <code>T</code> to <code>Output</code> using <code>NumCast</code>. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of the two rectangles. If both …","","","","","","","","","","","","","","Returns the width of the rectangle.","","","","Returns the","","Returns the","Returns the","","","Returns the","Returns the","","","Returns a zero value.","","","","","","","","The requisite parameters for testing for approximate …","Equality that is defined using the absolute difference of …","Used for specifying relative comparisons.","The requisite parameters for testing for approximate …","Equality comparisons between two numbers using both the …","The requisite parameters for testing for approximate …","Equality comparisons between two numbers using both the …","A test for equality that uses the absolute difference to …","Approximate equality of using the absolute difference.","The inverse of <code>AbsDiffEq::abs_diff_eq</code>.","Approximate inequality of using the absolute difference.","","","","An assertion that delegates to [<code>abs_diff_eq!</code>], and panics …","An assertion that delegates to [<code>abs_diff_ne!</code>], and panics …","An assertion that delegates to [<code>relative_eq!</code>], and panics …","An assertion that delegates to [<code>relative_ne!</code>], and panics …","An assertion that delegates to [<code>ulps_eq!</code>], and panics with …","An assertion that delegates to [<code>ulps_ne!</code>], and panics with …","","","","","","","","","","The default tolerance to use when testing values that are …","The default relative tolerance for testing values that are …","The default ULPs to tolerate when testing values that are …","","","","Replace the epsilon value with the one specified.","Replace the epsilon value with the one specified.","Replace the epsilon value with the one specified.","The tolerance to use when testing values that are close …","The tolerance to use when testing values that are close …","The tolerance to use when testing values that are close …","Peform the equality comparison","Peform the equality comparison","Peform the equality comparison","","","","","","","","","","","","","Replace the maximum relative value with the one specified.","The relative tolerance for testing values that are …","Replace the max ulps value with the one specified.","The ULPs to tolerate when testing values that are …","Peform the inequality comparison","Peform the inequality comparison","Peform the inequality comparison","A test for equality that uses a relative comparison if the …","Approximate equality using both the absolute difference …","The inverse of <code>RelativeEq::relative_eq</code>.","Approximate inequality using both the absolute difference …","","","","","","","","","","","","","A test for equality that uses units in the last place …","Approximate equality using both the absolute difference …","The inverse of <code>UlpsEq::ulps_eq</code>.","Approximate inequality using both the absolute difference …","","","","A generic interface for casting between machine scalars …","Numbers which have upper and lower bounds","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Return Euler’s number.","","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Generic trait for floating point numbers","","","A generic trait for converting a number to a value.","","Unary operator for retrieving the multiplicative inverse, …","","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation.","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","The trait for <code>Num</code> types which also implement assignment …","The trait for types implementing numeric assignment …","The trait for <code>NumAssign</code> types which also implement …","An interface for casting between machine scalars.","The trait for types implementing basic numeric operations","The trait for <code>Num</code> types which also implement numeric …","Defines a multiplicative identity element for <code>Self</code>.","The result after applying the operator.","The resulting type after applying the fused multiply-add.","The result after applying the operator.","Return Archimedes’ constant <code>π</code>.","","Binary operator for raising a value to a power.","Generic trait for primitive integers.","The trait for references which implement numeric …","Return <code>sqrt(2.0)</code>.","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Useful functions for signed numbers (i.e. numbers that can …","Return the full circle constant <code>τ</code>.","A generic trait for converting a value to a number.","A trait for values which cannot be negative","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Defines an additive identity element for <code>Self</code>.","Computes the absolute value.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","","","Convert a value to another, using the <code>as</code> operator.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","","","","","","","Cast from one machine scalar to another.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Raises a value to the power of exp, returning <code>None</code> if an …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","A value bounded by a minimum and a maximum","A value bounded by a maximum value","A value bounded by a minimum value","Returns the floating point category of the number. If only …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","","","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","","Returns the largest integer less than or equal to a number.","","","","Returns the fractional part of a number.","Creates a number from another value that can be converted …","","","Convert an integer from big endian to the target’s …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Convert an integer from little endian to the target’s …","Convert from a string and radix (typically <code>2..=36</code>).","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Calculate the length of the hypotenuse of a right-angle …","","Returns the infinite value.","","Returns the mantissa, base 2 exponent, and sign as …","","","","","","","Returns the multiplicative inverse of <code>self</code>.","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns true if the number is negative and false if the …","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns true if the number is positive and false if the …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","","Returns the number of leading zeros in the binary …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","returns the largest finite number this type can represent","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","returns the smallest finite number this type can represent","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Performs the fused multiply-add operation.","Performs the fused multiply-add operation.","Returns the <code>NaN</code> value.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","","","Raises a value to the power of exp, using exponentiation …","Raises self to the power of <code>exp</code>, using exponentiation by …","Returns <code>self</code> to the power <code>rhs</code>.","Raise a number to a floating point power.","Raise a number to an integer power.","","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Returns the nearest integer to a number. Round half-way …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Returns the sign of the number.","Returns a number that represents the sign of <code>self</code>.","Returns the sign of the number.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Reverses the byte order of the integer.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Convert <code>self</code> to big endian from the target’s endianness.","Converts radians to degrees.","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Convert <code>self</code> to little endian from the target’s …","Converts degrees to radians.","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Returns the number of trailing zeros in the binary …","Return the integer part of a number.","","","","","","","","","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","","","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Numbers which have upper and lower bounds","returns the largest finite number this type can represent","returns the smallest finite number this type can represent","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Generic trait for floating point numbers","","Generic trait for floating point numbers that works with …","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Computes the absolute value of <code>self</code>. Returns …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If only …","Returns the floating point category of the number. If only …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns positive infinity.","Returns the infinite value.","Returns the mantissa, base 2 exponent, and sign as …","Returns the mantissa, base 2 exponent, and sign as …","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Returns NaN.","Returns the <code>NaN</code> value.","Returns negative infinity.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Returns <code>-0.0</code>.","Raise a number to a floating point power.","Raise a number to an integer power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the reciprocal (multiplicative inverse) of the …","Returns the nearest integer to a number. Round half-way …","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts to degrees, assuming the number is in radians.","Converts radians to degrees.","Converts to radians, assuming the number is in degrees.","Converts degrees to radians.","Return the integer part of a number.","Return the integer part of a number.","Defines a multiplicative identity element for <code>Self</code>.","Defines an additive identity element for <code>Self</code>.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Returns the number of leading zeros in the binary …","Raises self to the power of <code>exp</code>, using exponentiation by …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","","","","","","","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation.","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation.","Performs the fused multiply-add operation.","Performs addition with a flag for overflow.","Performs multiplication with a flag for overflow.","Performs substraction with a flag for overflow.","Returns a tuple of the sum along with a boolean indicating …","Returns a tuple of the product along with a boolean …","Returns a tuple of the difference along with a boolean …","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","A trait for real number types that do not necessarily have …","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Raise a number to a real number power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts radians to degrees.","Converts degrees to radians.","Return the integer part of a number.","Useful functions for signed numbers (i.e. numbers that can …","A trait for values which cannot be negative","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Returns true if the number is negative and false if the …","Returns true if the number is positive and false if the …","Returns the sign of the number.","Returns the sign of the number.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A BGRA color with 8-bit channels, used when dealing with …","A trait representing a resource that can be bound.","","A group of bindings.","The layout of a <code>BindingGroup</code>.","A binding type.","","","","","Binding is visible from the compute shader of a compute …","","","","","Z-Depth buffer.","","","","","Binding is visible from the fragment shader of a render …","","","","","","","Off-screen framebuffer. Can be used as a render target in …","","","Binding is not visible from any shader stage.","","","","","","","","","","","","","Can be rendered to in a pass.","","","","","","","","","","","","","Describes the shader stages that a binding will be visible …","","","","","","A uniform buffer that can be bound in a ‘BindingGroup’.","","","","Binding is visible from the vertex shader of a render …","Binding is visible from the vertex and fragment shaders of …","","","Describes a ‘VertexBuffer’ layout.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Given a byte slice, returns a slice of <code>Rgba8</code> values.","Given a byte slice, returns a slice of <code>Bgra8</code> values.","Returns the set containing all flags.","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Color component.","","","Returns the complement of this set of flags.","","","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","Framebuffer height, in pixels.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","","","","","","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","","","","","","","","","Size in pixels of the framebuffer.","","","","","","","","","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","","","","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Framebuffer width, in pixels.","","Depth component.","","","","","","","","","","","","","","","","Allows the use of <code>AddressMode::ClampToBorder</code>.","Enable writes to all channels.","Enable alpha channel writes","Blend mode that does standard alpha blending with …","Supports samplers with anisotropic filtering. Note this isn…","Handle to a physical graphics and/or compute device.","Information about an adapter.","Src + Dst","How edges should be handled in texture addressing.","Depth, Stencil, and Color.","Function always passes","10x10 block compressed texture. 16 bytes per block (1.28 …","10x10 block compressed texture. 16 bytes per block (1.28 …","10x5 block compressed texture. 16 bytes per block (2.56 …","10x5 block compressed texture. 16 bytes per block (2.56 …","10x6 block compressed texture. 16 bytes per block (2.13 …","10x6 block compressed texture. 16 bytes per block (2.13 …","10x8 block compressed texture. 16 bytes per block (1.6 …","10x8 block compressed texture. 16 bytes per block (1.6 …","12x10 block compressed texture. 16 bytes per block (1.07 …","12x10 block compressed texture. 16 bytes per block (1.07 …","12x12 block compressed texture. 16 bytes per block (0.89 …","12x12 block compressed texture. 16 bytes per block (0.89 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","5x4 block compressed texture. 16 bytes per block (6.4 …","5x4 block compressed texture. 16 bytes per block (6.4 …","5x5 block compressed texture. 16 bytes per block (5.12 …","5x5 block compressed texture. 16 bytes per block (5.12 …","6x5 block compressed texture. 16 bytes per block (4.27 …","6x5 block compressed texture. 16 bytes per block (4.27 …","6x6 block compressed texture. 16 bytes per block (3.56 …","6x6 block compressed texture. 16 bytes per block (3.56 …","8x5 block compressed texture. 16 bytes per block (3.2 …","8x5 block compressed texture. 16 bytes per block (3.2 …","8x6 block compressed texture. 16 bytes per block (2.67 …","8x6 block compressed texture. 16 bytes per block (2.67 …","8x8 block compressed texture. 16 bytes per block (2 …","8x8 block compressed texture. 16 bytes per block (2 …","Supports non-zero <code>base_vertex</code> parameter to indexed draw …","","Enable blue channel writes","","Supported when targeting the web through webassembly","Allows the user to create arrays of buffers in shaders:","Back face","Backends supported by wgpu.","Represents the backends that wgpu will use.","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Blue, green, red, and alpha channels. 8 bit integer per …","Blue, green, red, and alpha channels. 8 bit integer per …","Handle to a binding group.","Describes a group of bindings and the resources to be …","Bindable resource and the slot to bind it to.","Handle to a binding group layout.","Describes a <code>BindGroupLayout</code>.","Describes a single binding inside a bind group.","Resource that can be bound to a pipeline.","Specific type of a binding.","Describes the blend component of a pipeline.","Alpha blend factor.","Alpha blend operation.","Describe the blend state of a render pipeline.","WebGPU in the browser","Handle to a GPU-accessible buffer.","Binding is backed by a buffer.","A buffer binding.","Integral type used for buffer offsets.","Binding is backed by an array of buffers.","Error occurred when trying to async map a buffer.","Describes the segment of a buffer to bind.","Specific type of a buffer binding.","Describes a <code>Buffer</code>.","Integral type used for buffer slice sizes.","Slice into a <code>Buffer</code>.","Different ways that you can use a buffer.","Read only view into a mapped buffer.","Write only view into mapped buffer.","Enables clear to zero for buffers &amp; textures.","Amount of times the clipper is invoked. This is also the …","Amount of primitives that are not culled by the clipper. …","Enable red, green, and blue channel writes","Supports comparison samplers.","The device supports compiling and using compute shaders.","Amount of times a compute shader is invoked. This will be …","Allows the user to set a …","Buffer to buffer copy as well as buffer clear offsets and …","Buffer-Texture copies must have <code>bytes_per_row</code> aligned to …","Allow a buffer to be the destination buffer for a […","Allows a texture to be the destination in a  […","Allow a buffer to be the source buffer for a […","Allows a texture to be the source in a […","Supports textures that are cube arrays.","Triangles with vertices in counter clockwise order are …","Clamp the value to the border of the texture Requires …","Clamp the value to the edge of the texture","Clear with a specified value.","RGBA double precision color.","Describes the color state of a render pipeline.","Color write mask. Disabled color channels will not be …","Handle to a command buffer on the GPU.","Describes a [<code>CommandBuffer</code>].","Encodes a series of GPU operations.","Describes a <code>CommandEncoder</code>.","Comparison function used for depth and stencil operations.","In-progress recording of a compute pass.","Describes the attachments of a compute pass.","Handle to a compute pipeline.","Describes a compute pipeline.","Constant","Cpu / Software Rendering.","A cubemap texture. <code>textureCube</code> in glsl shaders.","A cubemap array texture. <code>textureCubeArray</code> in glsl shaders.","Triangles with vertices in clockwise order are considered …","A one dimensional texture. <code>texture1D</code> in glsl shaders.","1D texture","A two dimensional texture. <code>texture2D</code> in glsl shaders.","2D texture","A two dimensional array texture. <code>texture2DArray</code> in glsl …","A three dimensional texture. <code>texture3D</code> in glsl shaders.","3D texture","By default, polygon depth is clipped to 0-1 range. …","Supports:","Supported on Windows 7+","Supported on Windows 10","Decrements stencil value by one, clamping on underflow.","Decrements stencil value by one, wrapping on underflow.","Sampling does the depth reference comparison.","Special depth format with at least 24 bit integer depth.","Special depth/stencil format with at least 24 bit integer …","Special depth format with 32 bit floating point depth.","Describes the biasing setting for the depth target.","Depth.","Describes the depth/stencil state in a render pipeline.","Open connection to a graphics and/or compute device.","Describes a <code>Device</code>.","Supported physical device types.","Discrete GPU with separate CPU/GPU memory.","Lists various ways the underlying platform does not …","Binary flags listing features that may or may not be …","D.component","D.alpha","Direct3D-11 (Windows)","Direct3D-12 (Windows)","Integral type used for dynamic bind group offsets.","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","4x4 block compressed texture. 16 bytes per block (8 …","Dummy backend, used for testing.","Function passes if new value is equal to existing value","Error type","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","4x4 block compressed texture. 8 bytes per block (4 …","Extent of a texture related operation.","Amount of times the fragment shader is ran. Accounts for …","Supports storage buffers in fragment shaders.","Supports binding storage buffers and textures to fragment …","Face of a vertex.","Features that are not guaranteed to be supported.","The presentation engine waits for the next vertical …","Polygons are filled","Texel mixing mode when sampling between texels.","Sampling returns floats.","Two half-precision floats (no Rust equiv). <code>vec2</code> in shaders.","Four half-precision floats (no Rust equiv). <code>vec4</code> in …","One single-precision float (f32). <code>float</code> in shaders.","Two single-precision floats (f32). <code>vec2</code> in shaders.","Three single-precision floats (f32). <code>vec3</code> in shaders.","Four single-precision floats (f32). <code>vec4</code> in shaders.","One double-precision float (f64). <code>double</code> in shaders. …","Two double-precision floats (f64). <code>dvec2</code> in shaders. …","Three double-precision floats (f64). <code>dvec3</code> in shaders. …","Four double-precision floats (f64). <code>dvec4</code> in shaders. …","Describes the fragment process in a render pipeline.","Front face","Winding order which classifies the “front” face.","Currently unsupported","Enable green channel writes","","OpenGL ES-3 (Linux, Android)","No issues.","Function passes if new value is greater than existing value","Function passes if new value is greater than or equal to …","Adapter that has the highest performance. This is often a …","Ignore the stencil state for the face.","Supports different blending modes per color target.","Allow a buffer to be the index buffer in a draw operation.","Allow a buffer to be the indirect buffer in an indirect …","Supports indirect drawing and dispatching.","View of a buffer which can be used to copy to/from a …","View of a buffer which can be used to copy to/from a …","View of a texture which can be used to copy to/from a …","View of a texture which can be used to copy to/from a …","Layout of a texture in a buffer’s memory.","Subresource range within an image","The presentation engine does <strong>not</strong> wait for a vertical …","Increments stencil value by one, clamping on overflow.","Increments stencil value by one, wrapping on overflow.","Format of indices used with pipeline.","Context for all other wgpu objects. Instance of wgpu.","Vertex data is advanced every instance.","Integrated GPU with shared CPU/GPU memory.","Bitwise inverts stencil value.","Keep stencil value unchanged.","Object label.","Function passes if new value less than existing value","Function passes if new value is less than or equal to …","Represents the sets of limits an adapter/device supports.","Polygons are drawn as line segments","Vertex data is a list of lines. Each pair of vertices …","Vertex data is a strip of lines. Each set of two adjacent …","Linear Interpolation","Load from memory.","Operation to perform to the output attachment at the start …","The swap chain has been lost and needs to be recreated.","The surface under the swap chain is lost.","Adapter that uses the least possible power. This is often …","Webgpu only allows the MAP_READ and MAP_WRITE buffer usage …","Size to align mappings.","Allow a buffer to be mapped for reading using […","Allow a buffer to be mapped for writing using […","Supported on macOS/iOS","Allows the user to call [<code>RenderPass::multi_draw_indirect</code>] …","Allows the user to call […","The presentation engine waits for the next vertical …","Passed to <code>Device::poll</code> to control if it should block or …","Type of buffer mapping.","max(Src, Dst)","Metal API (Apple platforms)","min(Src, Dst)","Repeat the texture, mirroring it every repeat","Describes the multi-sampling state of a render pipeline.","Supports textures with mipmaps which have a non power of …","Nearest neighbor sampling.","Function never passes","Function passes if new value is not equal to existing value","Blend state of (1 * src) + ((1 - src_alpha) * dst)","Query returns a single 64-bit number, serving as an …","1.0","1.0 - Constant","1.0 - D.component","1.0 - D.alpha","1.0 - S.component","1.0 - S.alpha","[0, 0, 0, 1]","[1, 1, 1, 1]","Pair of load and store operations for an attachment aspect.","Origin of a copy to/from a texture.","Other.","There is no more memory left to allocate a new frame.","Out of memory error","The underlying surface has changed, and therefore the swap …","The surface under the swap chain has changed.","Allows the user to create bind groups continaing arrays …","Enables use of Pipeline Statistics Queries. These queries …","Allows the user to set <code>PolygonMode::Line</code> in …","Allows the user to set <code>PolygonMode::Point</code> in …","Blend mode that does standard alpha blending with …","All the apis that wgpu offers first tier of support for.","Allows the use of push constants: small, fast bits of …","Alignment all push constants need","Handle to a pipeline layout.","Describes a pipeline layout.","Query returns up to 5 64-bit numbers based on the given …","Flags for which pipeline data should be recorded.","Polygons are drawn as points","Vertex data is a list of points. Each vertex is a new …","Don’t block","Type of drawing mode for polygons","Power Preference when choosing a physical adapter.","Behavior of the presentation engine based on frame rate.","Describes the state of primitive assembly and …","Primitive type the input mesh is composed of.","A range of push constant memory to pass to a shader stage.","An offset into the query resolve buffer has to be aligned …","Maximum queries in a query set","Size of a single piece of query data.","Handle to a query set.","Describes a <code>QuerySet</code>.","Type of query contained in a QuerySet.","Handle to a command queue on a device.","Red channel only. 16 bit float per channel. Float in …","Red channel only. 16 bit integer per channel. Signed in …","Red channel only. 16 bit integer per channel. Unsigned in …","Red channel only. 32 bit float per channel. Float in …","Red channel only. 32 bit integer per channel. Signed in …","Red channel only. 32 bit integer per channel. Unsigned in …","Red channel only. 8 bit integer per channel. Signed in …","Red channel only. 8 bit integer per channel. [-127, 127] …","Red channel only. 8 bit integer per channel. Unsigned in …","Red channel only. 8 bit integer per channel. [0, 255] …","Supports reading from a depth/stencil buffer while using …","Enable red channel writes","","Allows a texture to be an output attachment of a …","Default blending state that replaces destination with the …","Blend mode that does no color blending, just overwrites …","Map only for reading","The texture can only be read in the shader and it must be …","The texture can be both read and written in the shader. …","Pre-prepared reusable bundle of GPU operations.","Describes the depth/stencil attachment for render bundles.","Describes a <code>RenderBundle</code>.","Encodes a series of GPU operations into a reusable “…","Describes a <code>RenderBundleEncoder</code>.","In-progress recording of a render pass.","Describes a color attachment to a <code>RenderPass</code>.","Describes a depth/stencil attachment to a <code>RenderPass</code>.","Describes the attachments of a render pass.","Handle to a rendering (graphics) pipeline.","Describes a render (graphics) pipeline.","Repeat the texture in a tiling fashion","Replace stencil value with value provided in most recent …","Additional information required when requesting an adapter.","Options for requesting adapter.","Requesting a device failed.","Dst - Src","Red, green, and blue channels. 11 bit float with no sign …","Red and green channels. 16 bit float per channel. Float in …","Red and green channels. 16 bit integer per channel. Signed …","Red and green channels. 16 bit integer per channel. …","Red and green channels. 32 bit float per channel. Float in …","Red and green channels. 32 bit integer per channel. Signed …","Red and green channels. 32 bit integer per channel. …","Red and green channels. 8 bit integer per channel. Signed …","Red and green channels. 8 bit integer per channel. [-127, …","Red and green channels. 8 bit integer per channel. …","Red and green channels. 8 bit integer per channel. [0, 255]…","Red, green, blue, and alpha channels. 10 bit integer for …","Packed unsigned float with 9 bits mantisa for each RGB …","Red, green, blue, and alpha channels. 16 bit float per …","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha channels. 16 bit integer per …","Red, green, blue, and alpha channels. 32 bit float per …","Red, green, blue, and alpha channels. 32 bit integer per …","Red, green, blue, and alpha channels. 32 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Red, green, blue, and alpha channels. 8 bit integer per …","Allows shaders to index sampled texture and storage buffer …","All the apis that wgpu offers second tier of support for. …","Enables 64-bit floating point types in SPIR-V shaders.","Enables <code>builtin(primitive_index)</code> in fragment shaders.","Enables creating shader modules from SPIR-V binary data …","Allow a buffer to be a <code>BufferBindingType::Storage</code> inside a …","When used as a STORAGE texture, then a texture with this …","Allows a texture to be a <code>BindingType::StorageTexture</code> in a …","When used as a STORAGE texture, then a texture with this …","Allows the user to create uniform arrays of storage …","Handle to a sampler.","Binding is a sampler.","A sampler that can be used to sample a texture.","Color variation to use when sampler addressing mode is …","Describes a <code>Sampler</code>","Integral type used for binding locations in shaders.","Collections of shader features a device supports if they …","Handle to a compiled shader module.","Descriptor for a shader module.","Descriptor for a shader module given by SPIR-V binary.","Source of a shader module.","Describes the shader stages that a binding will be visible …","Sampling returns signed integers.","Two signed shorts (i16). <code>ivec2</code> in shaders.","Four signed shorts (i16). <code>ivec4</code> in shaders.","One signed int (i32). <code>int</code> in shaders.","Two signed ints (i32). <code>ivec2</code> in shaders.","Three signed ints (i32). <code>ivec3</code> in shaders.","Four signed ints (i32). <code>ivec4</code> in shaders.","Two signed bytes (i8). <code>ivec2</code> in shaders.","Four signed bytes (i8). <code>ivec4</code> in shaders.","Extremely limited shaders, including a total instruction …","Missing minor features and storage images.","WebGPU supports shader module 5.","Two signed shorts (i16). [-32767, 32767] converted to …","Four signed shorts (i16). [-32767, 32767] converted to …","Two signed bytes (i8). [-127, 127] converted to float [-1, …","Four signed bytes (i8). [-127, 127] converted to float […","SPIR-V module represented as a slice of words.","S.component","S.alpha","min(S.alpha, 1.0 - D.alpha)","Describes stencil state in a render pipeline.","Stencil.","Operation to perform on the stencil value.","State of the stencil operation (fixed-pipeline stage).","A storage buffer.","A storage texture.","Specific type of a sample in a texture binding.","The swap chain is operational, but it does no longer …","Src - Dst","Handle to a presentable surface.","Configures a [<code>Surface</code>] for presentation.","Result of an unsuccessful call to …","Status of the recieved surface image.","Surface texture that can be rendered to. Result of a …","Enables device specific texture format features.","Allows a texture to be a <code>BindingType::Texture</code> in a bind …","Allows the user to create uniform arrays of textures in …","Enables ASTC family of compressed textures. ASTC textures …","Enables BCn family of compressed textures. All BCn …","Enables ETC family of compressed textures. All ETC …","Enables use of Timestamp Queries. These queries tell the …","","Handle to a texture on the GPU.","A texture binding.","Kind of data the texture holds.","Describes a <code>Texture</code>.","Dimensionality of a texture.","Underlying texture data format.","Feature flags for a texture format.","Features supported by a given texture format","Specific type of a sample in a texture binding.","Different ways that you can use a texture.","Handle to a texture view.","Binding is backed by a texture.","Binding is backed by an array of textures.","Describes a <code>TextureView</code>.","Dimensions of a particular texture view.","A timeout was encountered while trying to acquire the next …","Unable to get the next frame, timed out.","Query returns a 64-bit number indicating the GPU-timestamp …","[0, 0, 0, 0]","Vertex data is a list of triangles. Each set of 3 vertices …","Vertex data is a triangle strip. Each set of three …","Allow a buffer to be a <code>BufferBindingType::Uniform</code> inside a …","Allows shaders to index uniform buffer and storage texture …","Allows the user to create unsized uniform arrays of …","Sampling returns unsigned integers.","Indices are 16 bit unsigned integers.","Two unsigned shorts (u16). <code>uvec2</code> in shaders.","Four unsigned shorts (u16). <code>uvec4</code> in shaders.","Indices are 32 bit unsigned integers.","One unsigned int (u32). <code>uint</code> in shaders.","Two unsigned ints (u32). <code>uvec2</code> in shaders.","Three unsigned ints (u32). <code>uvec3</code> in shaders.","Four unsigned ints (u32). <code>uvec4</code> in shaders.","Two unsigned bytes (u8). <code>uvec2</code> in shaders.","Four unsigned bytes (u8). <code>uvec4</code> in shaders.","Type for the callback of uncaptured error handler","A buffer for uniform values.","Two unsigned shorts (u16). [0, 65535] converted to float […","Four unsigned shorts (u16). [0, 65535] converted to float […","Two unsigned bytes (u8). [0, 255] converted to float [0, 1]…","Four unsigned bytes (u8). [0, 255] converted to float [0, 1…","Allow a buffer to be the vertex buffer in a draw operation.","Enables using 64-bit types for vertex attributes.","Amount of times the vertex shader is ran. Accounts for the …","Supports storage buffers in vertex shaders.","Vertex buffer strides have to be aligned to this number.","Enables bindings of writable storage buffers and textures …","Supported on Windows, Linux/Android, and macOS/iOS via …","Validation error, signifying a bug in code or data","Vertex data is advanced every vertex.","Vertex inputs (attributes) to shaders.","Describes how the vertex buffer is interpreted.","Vertex Format for a Vertex Attribute (input).","Describes the vertex process in a render pipeline.","Rate that determines when vertex data is advanced.","Virtual / Hosted.","Vulkan API","","Block","WGSL module as a string slice.","Map only for writing","The texture can only be written in the shader and it must …","Zero origin.","0.0","Set stencil value to zero.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","How to deal with out of bounds accesses in the u (i.e. x) …","How to deal with out of bounds accesses in the v (i.e. y) …","How to deal with out of bounds accesses in the w (i.e. z) …","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Mask of all features that are only available when …","Mask of all features which are part of the upstream WebGPU …","Valid bits for <code>TextureDescriptor::Usage</code> provided for …","Alpha equation.","When enabled, produces another sample mask per pixel based …","Valid values: 1, 2, 4, 8, and 16.","Layer count. If <code>Some(count)</code>, <code>base_array_layer + count</code> must …","Layer count. If <code>Some(count)</code>, <code>base_array_layer + count</code> must …","The stride, in bytes, between elements of this buffer.","Return the binding view of the entire buffer.","Return the binding view of the entire buffer.","Returns the inner hal Texture using a callback. The hal …","Make an <code>ImageCopyTexture</code> representing the whole texture.","","","Aspect of the texture. Color textures must be …","The copy aspect.","Aspect of the texture. Color textures must be …","The list of attributes which comprise a single vertex.","","Back face mode.","Backend used for device","Base array layer.","Base array layer.","Base mip level.","Base mip level.","","Begins recording of a compute pass.","Start a pipeline statistics query on this render pass. It …","Start a pipeline statistics query on this render pass. It …","Begins recording of a render pass.","Depth bias state.","Bind groups that this pipeline uses. The first entry will …","Slot for which binding provides resource. Corresponds to …","Binding index. Must match shader index and be unique …","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","The blending that is used for this pipeline.","Border color to use when address_mode is …he buffer to bind.","The buffer to be copied to/from.","The format of any vertex buffers used with this pipeline.","Bytes per “row” in an image.","Depth bias clamp value (absolute).","If set to true, the polygon depth is clamped to 0-1 range …","Clears buffer to zero.","Clears texture to zeroolor equation.","The color attachments of the render pass.","The formats of the color attachments that this render …","If this is enabled, this is a comparison sampler using the …","Comparison function that determines if the fail_op or …","Surface that is required to be presentable with the …","Get the texture dimension required of this texture view …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","All flags that indicate if the backend is WebGPU compliant","Initializes <code>Surface</code> for presentation.","If set to true, the primitives are rendered with …","Constant depth biasing factor, in basic units of the depth …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Copy data from one buffer to another.","Copy data from a buffer to a texture.","Copy data from a texture to a buffer.","Copy data from one texture to another.","The number of samples calculated per pixel (for MSAA). For …","If this value is Some, indicates this entry is an array. …","Converts a wgpu-hal <code>ExposedAdapter</code> to a wgpu <code>Adapter</code>.","Creates a new <code>BindGroup</code>.","Creates a <code>BindGroupLayout</code>.","Creates a <code>Buffer</code>.","","Creates an empty <code>CommandEncoder</code>.","Creates a <code>ComputePipeline</code>.","Create a wgpu <code>Device</code> and <code>Queue</code> from a wgpu-hal <code>OpenDevice</code>","Creates a <code>PipelineLayout</code>.","Creates a new <code>QuerySet</code>.","Creates an empty <code>RenderBundleEncoder</code>.","Creates a <code>RenderPipeline</code>.","Creates a new <code>Sampler</code>.","Creates a shader module from either SPIR-V or WGSL source …","Creates a shader module from SPIR-V binary directly.","Creates a shader module from either SPIR-V or WGSL source …","Creates a surface from a raw window handle.","Creates a new <code>Texture</code>.","Creates a <code>Texture</code> from a wgpu-hal Texture.","","Creates a view of this texture.","The face culling mode.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Comparison function used to compare depth values in the …","Operation that is performed when depth test fails but …","What operations will be performed on the depth part of the …","","True if the depth aspect is used but not modified.","The effect of draw calls on the depth and stencil aspects …","Information about the depth attachment that this render …","The depth and stencil attachment of the render pass, if …","If disabled, depth will not be written to.","","","","Get useful information about the texture format.","Destroy the associated native resources as soon as …","Destroy the associated native resources as soon as …","PCI id of the adapter","Type of device","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","The dimension of the texture view. For 1D textures, this …","Dispatches compute work operations.","Dispatches compute work operations, based on the contents …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","These default limits are guarenteed to be compatible with …","These default limits are guarenteed to be compatible with …","","Draws primitives from the active vertex buffer(s).","","Draws primitives from the active vertex buffer(s).","","","Draws indexed primitives using the active index buffer and …","","","Draws indexed primitives using the active index buffer and …","","","Draws indexed primitives using the active index buffer and …","Draws indexed primitives using the active index buffer and …","","","Draws primitives from the active vertex buffer(s) based on …","","Draws primitives from the active vertex buffer(s) based on …","","","","","","","","","","","","","","","","","","","","","","","Multiplier for the destination, which is stored in the …","","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","End the pipeline statistics query on this render pass. It …","End the pipeline statistics query on this render pass. It …","The resources to bind to this bind group.","Array of entries in this BindGroupLayout","The name of the entry point in the compiled shader. There …","The name of the entry point in the compiled shader. There …","The name of the entry point in the compiled shader. There …","Retrieves all available <code>Adapter</code>s that match the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Execute a render bundle, which is a set of pre-recorded …","","","","","","","","","Operation that is preformed when stencil test fails.","List all features that are supported with this adapter.","List all features that may be used with this device.","If <code>filterable</code> is false, the texture can’t be sampled …","Finishes recording and returns a <code>CommandBuffer</code> that can be …","Finishes recording and returns a <code>RenderBundle</code> that can be …","Combined boolean flags.","Additional property flags for the format.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indicates that only a fallback adapter can be returned. …","Format of the texture view. At this time, it must be the …","The <code>TextureFormat</code> of the image that this pipeline will …","Format of the depth/stencil buffer, must be special depth …","Format of the input","The texture format of the swap chain. The only formats …","Format of the attachment.","The compiled fragment stage, its entry point, and the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Create an new instance of wgpu from a wgpu-hal instance.","","","","","","","","","Front face mode.","The face to consider the front for the purpose of culling …","","Generates memory report.","Get an object representing the bind group layout at a …","Get an object representing the bind group layout at a …","Returns the next texture to be presented by the swapchain …","Get info about the adapter itself.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get info about the adapter itself.","Synchronously and immediately map a buffer for reading. If …","Synchronously and immediately map a buffer for writing. If …","Returns an optimal texture format to use for the <code>Surface</code> …","Returns the features supported for a given texture format …","Gets the amount of nanoseconds each tick of a timestamp …","Returns true for buffer bindings with dynamic offset …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Height of the swap chain. Must be the same size as the …","","Macro to load a SPIR-V module statically.","Macro to load raw SPIR-V data statically, for use with …","Macro to load a WGSL module statically.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts debug marker.","Inserts debug marker.","Inserts debug marker.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …eturns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns true if the depth testing is enabled.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns true if the stencil test is enabled.","Returns true if the depth biasing is enabled.","Returns true if the state doesn’t mutate the target …","Returns true if the state doesn’t mutate either depth or …","Returns true for strip topologies.","Returns whether this adapter may present to the passed …","Returns true if the underlying platform offers complete …","Debug label of the shader module. This will show up in …","Debug label of the shader module. This will show up in …","Debug label of the texture view. This will show up in …","Debug label of the pipeline layout. This will show up in …","Debug label of the sampler. This will show up in graphics …","Debug label of the bind group. This will show up in …","Debug label of the render pass. This will show up in …","Debug label of the pipeline. This will show up in graphics …","Debug label of the compute pass. This will show up in …","Debug label of the pipeline. This will show up in graphics …","Debug label of the bind group layout. This will show up in …","Debug label of the render bundle encoder. This will show …","Debug label of this command buffer.","The <code>BindGroupLayout</code> that corresponds to this bind group.","The layout of bind groups for this pipeline.","The layout of bind groups for this pipeline.","The layout of the texture data in this buffer.","List the “best” limits that are supported by this …","List all limits that were requested of this device.","Additional limits","How data should be read through this attachment.","Maximum level of detail (i.e. mip level) to use","Minimum level of detail (i.e. mip level) to use","How to filter the texture when it needs to be magnified …","Map the buffer. Buffer is ready to map once the future is …","","Bitmask that restricts the samples of a pixel modified by …","Amount of bind groups that can be attached to a pipeline …","Amount of storage buffer bindings that can be dynamic in a …","Amount of uniform buffer bindings that can be dynamic in a …","Calculates the maximum possible count of mipmaps.","Amount of storage available for push constants in bytes. …","Amount of sampled textures visible in a single shader …","Amount of samplers visible in a single shader stage. …","Maximum size in bytes of a binding to a storage buffer. …","Amount of storage buffers visible in a single shader …","Amount of storage textures visible in a single shader …","Maximum allowed value for the <code>size.depth_or_array_layers</code> …","Maximum allowed value for the <code>size.width</code> of a texture …","Maximum allowed value for the <code>size.width</code> and <code>size.height</code> …","Maximum allowed value for the <code>size.width</code>, <code>size.height</code>, and …","Maximum size in bytes of a binding to a uniform buffer. …","Amount of uniform buffers visible in a single shader …","Maximum length of <code>VertexBufferLayout::attributes</code>, summed …","Maximum value for <code>VertexBufferLayout::array_stride</code> when …","Maximum length of <code>VertexState::buffers</code> when creating a …","How to filter the texture when it needs to be minified …","Required <code>BufferBindingType::Storage</code> alignment for …","Required <code>BufferBindingType::Uniform</code> alignment for …","The target mip level of the texture.","Mip level count. If <code>Some(count)</code>, <code>base_mip_level + count</code> …","Mip level count. If <code>Some(count)</code>, <code>base_mip_level + count</code> …","Calculates the extent at a given mip level.","How to filter between mip map levels","The compiled shader module for this stage.","The compiled shader module for this stage.","The compiled shader module for this stage.","Dispatches multiple draw calls from the active index …","Dispatches multiple draw calls from the active index …","Dispatches multiple draw calls from the active vertex …","Disptaches multiple draw calls from the active vertex …","The multi-sampling properties of the pipeline.","Adapter name","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the stencil state uses the reference value …","Returns true if the face state uses the reference value …","Returns true if the comparison depends on the reference …","Create an new instance of wgpu.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Base offset of the buffer. For bindings with …","Byte offset of the start of the input","Offset into the buffer that is the start of the texture. …","Returns a future that resolves once all the work submitted …","Set a callback for errors that are not handled in error …","The binary operation applied to the source and destination,","What operations will be performed on this color attachment.","The base texel of the texture in the selected <code>mip_level</code>.","","","","","","","","","","","","Operation that is performed when stencil test success.","Calculates the physical size is backing an texture of the …","Check for resource cleanups and mapping callbacks.","Polls all devices. If <code>force_wait</code> is true and this is not …","Controls the way each polygon is rasterized. Can be either …","Stops command recording and creates debug group.","Stops command recording and creates debug group.","Stops command recording and creates debug group.","Power preference for the adapter.","Schedule this texture to be presented on the owning …","Presentation mode of the swap chain. FIFO is the only …","The properties of the pipeline at the primitive assembly …","Set of push constant ranges this pipeline uses. Each …","Start record commands and group it into debug marker group.","Start record commands and group it into debug marker group.","Start record commands and group it into debug marker group.","","Range in push constant memory to use for the stage. Must …","Stencil values are AND’d with this mask when reading and …","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Retrieves an <code>Adapter</code> which matches the given …","Requests a connection to a physical device, creating a …","Resolve a query set, writing the results into the supplied …","The view that will receive the resolved output if …","Resource to attach to the binding","“Rows” that make up a single “image”.","Sample count this render bundle is capable of rendering …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Sets the active bind group for a given bind group index. …","","Sets the active bind group for a given bind group index. …","","Sets the active bind group for a given bind group index. …","","Sets the blend color as used by some of the blending modes.","","","","","Sets the active index buffer.","Sets the active index buffer.","","Sets the active render pipeline.","","Sets the active compute pipeline.","","Sets the active render pipeline.","Set push constant data.","","Set push constant data.","","Set push constant data.","Sets the scissor region.","Sets the stencil reference.","","Assign a vertex buffer to a slot.","","Assign a vertex buffer to a slot.","Sets the viewport region.","Location for this input. Must match the location in the …","Which collections of features shaders support. Defined in …","Returns the byte size of the format.","Size of the binding, or <code>None</code> for using the rest of the …","Use only a portion of this Buffer for a given operation. …","Slope depth biasing factor.","","Source code for the shader.","Binary SPIR-V data, in 4-byte words.","Multiplier for the source, which is produced by the …","Stage push constant range is visible from. Each stage can …","Starts frame capture.","Stencil state.","What operations will be performed on the stencil part of …","True if the stencil aspect is used but not modified.","How often this vertex buffer is “stepped” forward.","Stops frame capture.","Whether data will be written to through this attachment.","When drawing strip topologies with indices, this is the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Submits a series of finished command buffers for execution.","<code>true</code> if the acquired buffer can still be used for …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","The color state of the render targets.","Accessible view of the frame.","The texture to be copied to/from.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","The primitive topology used to interpret vertices.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type of the binding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Flushes any pending write operations and unmaps the buffer …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The usage of the swap chain. The only supported usage is …","Returns true if the state relies on the constant color, …","Modify the current limits to use the buffer alignment …","Modify the current limits to use the resolution limits of …","Utility structures and functions.","Vendor PCI id of the adapter","The compiled vertex stage, its entry point, and the input …","Macro to produce an array of <code>VertexAttribute</code>.","The view to use as an attachment.","The view to use as an attachment.","Which shader stages can see this binding.","Width of the swap chain. Must be the same size as the …","","Schedule a data write into <code>buffer</code> starting at <code>offset</code>.","Mask which enables/disables writes to different …","Stencil values are AND’d with this mask when writing to …","Schedule a data write into <code>texture</code>.","Issue a timestamp command at this point in the queue. The …","Issue a timestamp command at this point in the queue. The …","Issue a timestamp command at this point in the queue. The …","","","","","","","","","Allowed access to this texture.","Use as a comparison sampler instead of a normal sampler. …","The sampling result is produced based on more than a …","Format of the texture.","Indicates that the binding has a dynamic offset. One …","Minimum size of the corresponding <code>BufferBinding</code> required …","True if the texture has a sample count greater than 1. If …","Sample type of the texture binding.","Sub-type of the buffer binding.","Dimension of the texture view that is going to be sampled.","Dimension of the texture view that is going to be sampled.","If <code>true</code>, the buffer can only be read in the shader, and it …","","","","","","","","If <code>filterable</code> is false, the texture can’t be sampled with","Describes a Buffer when allocating.","Utility methods not meant to be in the main API.","CPU accessible buffer used to download data back from the …","Methods shared by <code>RenderPass</code> and <code>RenderBundleEncoder</code>.","Staging belt is a machine that uploads data.","","","","Get a set of backend bits from the environment variable …","","","","","","","","","Contents of a buffer on creation.","Creates a Buffer with data to initialize it.","Upload an entire texture and its mipmaps from a source …","","","","","Draws primitives from the active vertex buffer(s).","Draws indexed primitives using the active index buffer and …","Draws indexed primitives using the active index buffer and …","Draws primitives from the active vertex buffer(s) based on …","","","Prepare currently mapped buffers for use in a submission.","","","","","","","Initialize the adapter obeying the WGPU_ADAPTER_NAME …","Initialize the adapter obeying the WGPU_ADAPTER_NAME …","","","","","","","","","","Debug label of a buffer. This will show up in graphics …","Treat the given byte slice as a SPIR-V module.","Version of make_spirv intended for use with …","","Create a new staging belt.","Generates a set of backends from a comma separated list of …","Get a power preference from the environment variable …","Asynchronously read the contents of a buffer.","Recall all of the closed buffers back to be reused.","Sets the active bind group for a given bind group index. …","Sets the active index buffer.","Sets the active render pipeline.","[<code>wgt::Features::PUSH_CONSTANTS</code>] must be enabled on the …","Assign a vertex buffer to a slot.","","","","","","","","","","","","","","","","","Usages of a buffer. If the buffer is used in any way that …","Allocate the staging belt slice of <code>size</code> to be uploaded …","","","","","","","","","","","","","","Can be rendered to in a pass.","","","","Color component.","","","","","","","","","","","","","","","Depth component.","","","","","","","","","","","","","","","Describes the shader stages that a binding will be visible …","","","","","","","","","","","","","","","","","Describes a ‘VertexBuffer’ layout.","","All channel receivers were dropped and so the message has …","All channel receivers were dropped and so the message has …","All senders were dropped and no messages are waiting in …","All senders were dropped and no messages are waiting in …","All senders were dropped and no messages are waiting in …","An fixed-sized iterator over the msgs drained from a …","The channel was empty when the receive was attempted.","The channel the message is sent on has a finite capacity …","An owned iterator over the msgs received from a channel.","An iterator over the msgs received from a channel.","The receiving end of a channel.","An error that may be emitted when attempting to wait for a …","An error that may be emitted when attempting to wait for a …","A type used to wait upon multiple blocking operations at …","An error that may be emitted when attempting to send a …","An error that may be emitted when sending a value into a …","A transmitting end of a channel.","A timeout occurred when attempting to send the message.","A timeout occurred when attempting to receive a message.","An non-blocking iterator over the msgs received from a …","An error that may be emitted when attempting to fetch a …","An error that may be emitted when attempting to send a …","","","","","","","","","","","","","","Futures and other types that allow asynchronous …","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a channel with a maximum capacity.","If the channel is bounded, returns its capacity.","If the channel is bounded, returns its capacity.","Clone this sender. <code>Sender</code> acts as a handle to the ending a …","Clone this receiver. <code>Receiver</code> acts as a handle to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Take all msgs currently sitting in the channel and produce …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consume the error, yielding the message that failed to …","Consume the error, yielding the message that failed to …","Consume the error, yielding the message that failed to …","","","","","","Convert this receiver into a future that asynchronously …","Convert this sender into a future that asynchronously …","Convert this sender into a sink that allows asynchronously …","Convert this receiver into a stream that allows …","Returns true if all receivers for this channel have been …","Returns true if all senders for this channel have been …","Returns true if the channel is empty. Note: Zero-capacity …","Returns true if the channel is empty. Note: Zero-capacity …","Returns true if the channel is full. Note: Zero-capacity …","Returns true if the channel is full. Note: Zero-capacity …","Create a blocking iterator over the values received on the …","Returns the number of messages in the channel","Returns the number of messages in the channel.","","","","","Create a new selector.","","","","","Add a receive operation to the selector.","Wait for an incoming value from the channel associated …","Asynchronously receive a value from the channel, returning …","Wait for an incoming value from the channel associated …","Wait for an incoming value from the channel associated …","Types that permit waiting upon multiple blocking …","Add a send operation to the selector that sends the …","Send a value into the channel, returning an error if all …","Asynchronously send a value into the channel, returning an …","Send a value into the channel, returning an error if all …","Send a value into the channel, returning an error if all …","Create an asynchronous sink that uses this sender to …","Create an asynchronous stream that uses this receiver to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A non-blocking iterator over the values received on the …","Attempt to fetch an incoming value from the channel …","Attempt to send a value into the channel. If the channel …","","","","","","","","","","","","","","Create a channel with no maximum capacity.","","","","","","","","","","","","","","Wait until one of the events associated with this <code>Selector</code> …","Wait until one of the events associated with this <code>Selector</code> …","Wait until one of the events associated with this <code>Selector</code> …","","","","","A future which allows asynchronously receiving a message.","A stream which allows asynchronously receiving messages.","A future that sends a value into a channel.","A sink that allows sending values into a channel.","","","","","","","","","","","","","See <code>Sender::capacity</code>.","See <code>Receiver::capacity</code>.","See <code>Receiver::capacity</code>.","See <code>Sender::capacity</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>Sender::is_disconnected</code>.","See <code>Receiver::is_disconnected</code>.","See <code>Receiver::is_disconnected</code>.","See <code>Sender::is_disconnected</code>.","See <code>Sender::is_empty</code>.","See <code>Receiver::is_empty</code>.","See <code>Receiver::is_empty</code>.","See <code>Sender::is_empty</code>.","See <code>Sender::is_full</code>.","See <code>Receiver::is_full</code>.","See <code>Receiver::is_full</code>.","See <code>Sender::is_full</code>.","","","","See <code>Sender::len</code>.","See <code>Receiver::len</code>.","See <code>Receiver::len</code>.","See <code>Sender::len</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An error that may be emitted when attempting to wait for a …","A type used to wait upon multiple blocking operations at …","A timeout occurred when waiting on a <code>Selector</code>.","","","","","","","","","","","","","","","","","","","","","","Renders frames created by a <code>Scene</code>.","A callback that can be invoked when a <code>FrameRenderer</code> is …","Invoked when the <code>FrameRenderer</code> is fully shut down.","","","","","","","Pixel is 8-bit alpha","AnimationDecoder trait","An Image in AVIF format.","BGR colors","Pixel contains 8-bit B, G and R channels","Pixel contains 8-bit B, G and R channels","BGR colors + alpha channel","Pixel is 8-bit BGR with an alpha channel","Pixel is 8-bit BGR with an alpha channel","An Image in BMP Format","The number of channels of this pixel type.","A string that can help to interpret the meaning each …","ColorType for this pixel format","An enumeration over supported color types and bit depths","An Image in DDS Format","An error was encountered while decoding.","The delay of a frame relative to the previous one.","A Dynamic Image","Types which are safe to treat as an immutable byte slice …","An error was encountered while encoding.","An enumeration of color types encountered in image formats.","An Image in farbfeld Format","A flat buffer over a (multi channel) image.","A single animation frame","An implementation dependent iterator, reading the frames …","A trait for manipulating images.","Trait to inspect an image.","An Image in GIF Format","Sendable grayscale + alpha channel image buffer","Sendable grayscale image buffer","An Image in Radiance HDR Format","An Image in ICO Format","Each pixel in this image is 8-bit Bgr","Each pixel in this image is 8-bit Bgr with alpha","Generic image buffer","The trait that all decoders implement","Specialized image decoding not be supported by all formats","The trait all encoders implement","The generic error type for image operations.","An enumeration of supported image formats. Not all formats …","Each pixel in this image is 16-bit Luma","Each pixel in this image is 8-bit Luma","Each pixel in this image is 16-bit Luma with alpha","Each pixel in this image is 8-bit Luma with alpha","An enumeration of supported image formats for encoding.","Result of an image decoding/encoding process","Each pixel in this image is 16-bit Rgb","Each pixel in this image is 8-bit Rgb","Each pixel in this image is 16-bit Rgb with alpha","Each pixel in this image is 8-bit Rgb with alpha","Underlying image type. This is mainly used by SubImages in …","Underlying image type. This is mainly used by SubImages in …","An error occurred while interacting with the environment.","An Image in JPEG Format","Pixel is 1-bit luminance","Pixel is 16-bit luminance","Pixel is 16-bit luminance","Pixel is 2-bit luminance","Pixel is 4-bit luminance","Pixel is 8-bit luminance","Pixel is 8-bit luminance","Pixel is 1-bit luminance with an alpha channel","Pixel is 16-bit luminance with an alpha channel","Pixel is 16-bit luminance with an alpha channel","Pixel is 2-bit luminance with an alpha channel","Pixel is 4-bit luminance with an alpha channel","Pixel is 8-bit luminance with an alpha channel","Pixel is 8-bit luminance with an alpha channel","Completing the operation would have required more …","Grayscale colors","Grayscale colors + alpha channel","An error was encountered in input arguments.","A generalized pixel.","The type of pixel.","Immutable pixel iterator","An Image in PNG Format","An Image in general PNM Format","Primitive trait from old stdlib","Represents the progress of an image operation.","The type of reader produced by <code>into_reader</code>.","RGB colors","Pixel contains 1-bit R, G and B channels","Pixel is 16-bit RGB","Pixel contains 16-bit R, G and B channels","Pixel contains 2-bit R, G and B channels","Pixel contains 4-bit R, G and B channels","Pixel contains 8-bit R, G and B channels","Pixel contains 8-bit R, G and B channels","Sendable Rgb image buffer","RGB colors + alpha channel","Pixel is 1-bit RGB with an alpha channel","Pixel is 16-bit RGBA","Pixel is 16-bit RGB with an alpha channel","Pixel is 2-bit RGB with an alpha channel","Pixel is 4-bit RGB with an alpha channel","Pixel is 8-bit RGB with an alpha channel","Pixel is 8-bit RGB with an alpha channel","Sendable Rgb + alpha channel image buffer","A View into another image","The underlying subpixel type.","An Image in TGA Format","An Image in TIFF Format","Pixel is of unknown color type with the specified bits per …","An operation can not be completed by the chosen …","A value for signalling an error: An unsupported format was …","An Image in WEBP Format","","","","","","","","","","","","","","","","","","","","","Adjust the contrast of this image. <code>contrast</code> is the amount …","Apply the function <code>f</code> to each channel of this pixel.","","","","","","","Apply the function <code>f</code> to each channel of this pixel and …","","","","","","","Apply the function <code>f</code> to each channel except the alpha …","","","","","","","Apply the function <code>f</code> to each channel except the alpha …","Return a reference to an 8bit BGR image","Return a reference to an 8bit BGRA image","Get the bytes of this value.","Return this image’s pixels as a native endian byte slice.","Return a view on the raw sample buffer.","Return a mutable view on the raw sample buffer.","Return a view on the raw sample buffer for 16 bit per …","Return a view on the raw sample buffer for 8 bit per …","Return a reference to an 16bit Grayscale image","Return a reference to an 8bit Grayscale image","Return a reference to an 16bit Grayscale image with an …","Return a reference to an 8bit Grayscale image with an …","Get a mutable reference based version.","Return a mutable reference to an 8bit BGR image","Return a mutable reference to an 8bit RGBA image","Return a mutable reference to an 16bit Grayscale image","Return a mutable reference to an 8bit Grayscale image","Return a mutable reference to an 16bit Grayscale image …","Return a mutable reference to an 8bit Grayscale image with …","Return a mutable reference to an 16bit RGB image","Return a mutable reference to an 8bit RGB image","Return a mutable reference to an 16bit RGBA image","Return a mutable reference to an 8bit RGBA image","View the samples as a slice.","Returns the underlying raw buffer","Get a reference based version.","Return a reference to an 16bit RGB image","Return a reference to an 8bit RGB image","Return a reference to an 16bit RGBA image","Return a reference to an 8bit RGBA image","View the samples as a slice.","View this buffer as an image over some type of pixel.","Interpret this buffer as a mutable image.","View this buffer but keep mutability at a sample level.","Returns the number of bits contained in a pixel of …","Blend the color of a given pixel into ourself, taking into …","","","","","","","Put a pixel at location (x, y), taking into account alpha …","DEPRECATED: This method will be removed. Blend the pixel …","Put a pixel at location (x, y), taking into account alpha …","DEPRECATED: Use iterator <code>pixels_mut</code> to blend the pixels …","Performs a Gaussian blur on this image. <code>sigma</code> is a measure …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bounding rectangle of this image.","","Tuple of bounds in the order of coordinate inputs.","","","Brighten the pixels of this image. <code>value</code> is the amount to …","Iterators and other auxiliary structure for the <code>ImageBuffer</code>…","Returns the image buffer","Returns a mutable image buffer","Returns the number of bytes contained in a pixel of …","Return if the ImageFormat can be decoded by the lib.","Return if the ImageFormat can be encoded by the lib.","Change the coordinates of this subimage.","Returns the number of channels of this pixel type.","Returns the number of color channels that make up this …","Get the number of channels for colors of this type.","Returns the components as a slice.","","","","","","","Returns the channels of this pixel as a 4 tuple. If the …","","","","","","","Returns the components as a mutable slice","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encoding and decoding for various image file formats.","Steps through the iterator from the current frame until …","Return this image’s color type.","Supplementary color information.","Returns a string that can help to interpret the meaning …","Returns the color type of the image data produced by this …","Returns the ColorType for this pixel format","Examples","Copies all of the pixels from another image into this …","Copies all of the pixels from one part of this image to …","","Return a cut-out of this image delimited by the bounding …","Return a cut-out of this image delimited by the bounding …","A measure of completed decoding.","","Delay of this frame","","","Returns a tuple containing the width and height of the …","The width and height of this image.","","The width and height of this image.","","","","","","","","","","","","","","","","","","","","","","","Enumerates over the pixels of the image. The iterator …","Enumerates over the pixels of the image. The iterator …","Enumerates over the rows of the image. The iterator yields …","Enumerates over the rows of the image. The iterator yields …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains detailed error representation.","Expands a color palette by re-using the existing buffer. …","Return a list of applicable extensions for this format.","Get the dimensions <code>(channels, width, height)</code>.","Filters this image with the specified 3x3 kernel.","Check if a buffer of length <code>len</code> is large enough.","Image representations for ffi.","Flip this image horizontally","Flip this image vertically","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a pixel from the 4 channels a, b, c and d. If …","","","","","","","Decodes an encoded image into a dynamic image.","Return the image format specified by a path’s file …","Constructs a new ImageBuffer by repeated application of …","Create a delay from a ratio of milliseconds.","Contructs a new frame","Return the image format specified by the path’s file …","Constructs a new ImageBuffer by copying a pixel","Contructs a buffer from a generic container (for example a …","Convert from a duration, clamped between 0 and an …","Returns a view into a slice.","","","","","","","Returns mutable view into a mutable slice.","","","","","","","Creates an image buffer out of an existing buffer. Returns …","","","","","","","","","","","","Get a mutable reference to a single sample.","Returns the pixel located at (x, y). Indexed from top left.","","","Gets a reference to the pixel at location <code>(x, y)</code>","","Gets a reference to the mutable pixel at location <code>(x, y)</code>. …","","","Gets a reference to the mutable pixel at location <code>(x, y)</code>","DEPRECATED: Do not use is function: It is unimplemented!","Get a reference to a single sample.","Return a grayscale version of this image.","Guess image format from memory block","If there are any samples aliasing each other.","Returns if there is an alpha channel.","Returns false if the color scheme is grayscale, true …","","","","","","","","","","","","The height of this image.","The height of this image.","Hue rotate the supplied image. <code>value</code> is the degrees to …","Read the dimensions of the image located at the specified …","Mutable portion of the buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Image Processing Functions","Returns true if this x, y coordinate is contained inside …","Check that the pixel and the channel index are in bounds.","Get an index provided it is inbouds.","Resolve the index of a particular sample.","Return a reference to a single sample at specified …","","","","","","","","Get the theoretical position of sample (x, y, channel).","Return a mutable reference to a single sample at specified …","","","","","","","","Returns a reference to the underlying image.","","","","Returns a mutable reference to the underlying image.","","","","","","","","","","","","","","","","","","","","","","","","Consume the image and returns a BGR image.","Consume the image and returns a BGR image.","Consume the image and returns a BGRA image.","Consume the image and returns a BGRA image.","Returns the image buffer","Return this image’s pixels as a byte vector. If the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the raw sample buffer with its stride an dimension …","Consume the decoder producing a series of frames.","","","Consume the image and returns a Luma image.","Consume the image and returns a Luma image.","Consume the image and returns a Luma image.","Consume the image and returns a LumaA image.","Consume the image and returns a LumaA image.","Consume the image and returns a LumaA image.","Returns the underlying raw buffer","Returns a reader that can be used to obtain the bytes of …","Consume the image and returns a RGB image.","Consume the image and returns a RGB image.","Consume the image and returns a RGB image.","Consume the image and returns a RGBA image.","Consume the image and returns a RGBA image.","Consume the image and returns a RGBA image.","Consumes the image buffer and returns the underlying data …","Invert this pixel","","","","","","","Invert the colors of this image. This method operates …","Input and output of images.","Check if a buffer fulfills the requirements of a normal …","A <code>repr(C)</code> description of the layout of buffer samples.","Returns the x offset","Create a new image from a Reader","Create a new image from a byte slice","Create a new image from a byte slice","Apply the function <code>f</code> to each channel of this pixel.","","","","","","","Apply the function <code>f</code> to each channel of this pixel and …","","","","","","","Apply the function <code>f</code> to each channel except the alpha …","","","","","","","Apply the function <code>f</code> to each channel except the alpha …","Mathematical helper functions and types.","Get the minimum length of a buffer such that all in-bounds …","","","","","","","","","","","","","","","Creates a new <code>Frames</code> from an implementation specific …","Construct a new subimage The coordinates set the position …","Contructs a new frame without any delay.","Creates a new image buffer based on a <code>Vec&lt;P::Subpixel&gt;</code>.","Creates a dynamic image backed by a buffer of BGR pixels.","Creates a dynamic image backed by a buffer of BGRA pixels.","Creates a dynamic image backed by a buffer of grey pixels.","Creates a dynamic image backed by a buffer of grey pixels.","Creates a dynamic image backed by a buffer of grey pixels …","Creates a dynamic image backed by a buffer of grey pixels …","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","","","The numerator and denominator of the delay in milliseconds.","Open the image located at the path specified. The image’…","Retuns the color type of the image file before decoding","","Returns an Iterator over the pixels of this image. The …","Returns an iterator over the pixels of this image. The …","Returns an iterator over the mutable pixels of this image.","Put a pixel at location (x, y). Indexed from top left.","","","Puts a pixel at location <code>(x, y)</code>","","Returns all the bytes in the image.","Same as <code>read_image</code> but periodically calls the provided …","Decode a rectangular section of the image; see …","Decode a rectangular section of the image, periodically …","Calculate a measure for remaining decoding work.","Resize this image using the specified filter algorithm. …","Resize this image using the specified filter algorithm. …","Resize this image using the specified filter algorithm. …","Rotate this image 180 degrees clockwise.","Rotate this image 270 degrees clockwise.","Rotate this image 90 degrees clockwise.","Returns an iterator over the rows of this image.","Returns an iterator over the mutable rows of this image.","Get the format of the buffer when viewed as a matrix of …","Underlying linear container holding sample values.","Saves the buffer to a file at the path specified.","Saves the buffer to a file at the path specified.","Saves the supplied buffer to a file at the path specified.","Saves the supplied buffer to a file at the path specified …","Saves the buffer to a file at the specified path in the …","Saves the buffer to a file at the specified path in the …","Returns the minimum number of bytes that can be …","Shrink the image to the minimum of current and given …","","Get the strides for indexing matrix-like <code>[(c, w, h)]</code>.","Returns a mutable subimage that is a view into this image. …","","Scale this image down to fit within a specific size. …","Scale this image down to a specific size. Returns a new …","Convert this pixel to BGR","","","","","","","Returns a copy of this image as an BGR image.","Returns a copy of this image as an BGR image.","Convert this pixel to BGR with an alpha channel","","","","","","","Returns a copy of this image as an BGRA image.","Returns a copy of this image as an BGRA image.","Return a copy of this image’s pixels as a byte vector.","Convert this subimage to an ImageBuffer","Convert this pixel to luma","","","","","","","Returns a copy of this image as a Luma image.","Returns a copy of this image as a Luma image.","Returns a copy of this image as a Luma image.","Convert this pixel to luma with an alpha channel","","","","","","","Returns a copy of this image as a LumaA image.","Returns a copy of this image as a LumaA image.","Returns a copy of this image as a LumaA image.","","","","","","","","","","","","","","","","","","Convert this pixel to RGB","","","","","","","Returns a copy of this image as an RGB image.","Returns a copy of this image as an RGB image.","Returns a copy of this image as an RGB image.","Convert this pixel to RGB with an alpha channel","","","","","","","Returns a copy of this image as an RGBA image.","Returns a copy of this image as an RGBA image.","Returns a copy of this image as an RGBA image.","","Copy the data into an owned vector.","Returns the y offset","A measure of all necessary decoding work.","Returns the total number of bytes in the decoded image.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Move the data into an image buffer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the pixel located at (x, y). Indexed from top left.","Returns the pixel located at (x, y), ignoring bounds …","Puts a pixel at location (x, y). Indexed from top left.","Puts a pixel at location (x, y), ignoring bounds checking.","Performs an unsharpen mask on this image. <code>sigma</code> is the …","","","","","","","","","","","","","","","","","","","","","Returns an subimage that is an immutable view into this …","","The width of this image.","The width of this image.","Create a monocolor image from a single pixel.","Writes all the bytes in an image to the encoder.","Encode this image and write it to <code>w</code>","","","","","","","","","","","","","","","","","","","Provides color conversions for whole image buffers.","Enumerate the pixels of an image.","Enumerate the pixels of an image.","Enumerate the rows of an image.","Enumerate the rows of an image.","Iterate over pixel refs.","Iterate over mutable pixel refs.","Iterate over rows of an image","Iterate over mutable rows of an image","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts <code>self</code> to a buffer of type T","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The required color type can not be handled.","An error was encountered while decoding.","An error was encountered while decoding an image.","The resulting image exceed dimension limits in either …","The dimensions passed are wrong.","An error was encountered while encoding.","An error was encountered while encoding an image.","The format is known exactly.","Repeated an operation for which error that could not be …","An image format is not supported.","A string describing the parameter. This is discouraged and …","Some feature specified by string. This is discouraged and …","The generic error type for image operations.","A best effort representation for image formats.","Result of an image decoding/encoding process","The operation would have performed an allocation larger …","An error occurred while interacting with the environment.","Completing the operation would have required more …","Indicates the limit that prevented an operation from …","Completing the operation would have required more …","The format can be identified by a name.","The end of the image has been reached.","An error was encountered in input arguments.","An error was encountered in inputs arguments.","Details how a parameter is malformed.","A common path extension for the format is known.","The format is not known or could not be determined.","An operation can not be completed by the chosen …","The implementation for an operation was not provided.","Details what feature is not supported.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the image format associated with this error.","Return the image format associated with this error.","Returns the image format associated with this error.","","","","","","","","","","","","","Create an <code>UnsupportedError</code> for an image with details on …","Create an <code>EncodingError</code> for an image format.","Create a <code>DecodingError</code> for an image format.","Construct a <code>ParameterError</code> directly from a corresponding …","Construct a generic <code>LimitError</code> directly from a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the corresponding <code>UnsupportedErrorKind</code> of the …","Returns the corresponding <code>ParameterErrorKind</code> of the error.","Returns the corresponding <code>LimitErrorKind</code> of the error.","","","","","Create an <code>EncodingError</code> that stems from an arbitrary error …","Create a <code>DecodingError</code> that stems from an arbitrary error …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The samples are in column-major form and all samples are …","Denotes invalid flat sample buffers when trying to convert …","A flat buffer over a (multi channel) image.","All samples are packed.","Different normal forms of buffers.","The represented image can not use this representation.","At least pixels are packed.","The samples are in row-major form and all samples are …","A ffi compatible description of a sample buffer.","The represented image was too large.","No pixel aliases another.","A flat buffer that can be used as an image view.","A mutable owning version of a flat buffer.","The color format did not match the channel count.","","","","","","","","","","","","","","","","","Tuple of bounds in the order of coordinate inputs.","","","Add this to an index to get to the sample in the next …","The number of channels in the color representation of the …","","","","","","","","","","","Supplementary color information.","Describe a column-major image packed in all directions.","","","","","","","","","","","","","","Get the dimensions <code>(channels, width, height)</code>.","Check if a buffer of length <code>len</code> is large enough.","Get a reference on the inner sample descriptor.","Get a reference on the sample buffer descriptor.","","","","","","","","","","","","","","","Get a mutable reference to a selected subpixel if it is …","Get a mutable reference to a selected sample.","","","","Get a reference to a selected subpixel if it is in-bounds.","Get a reference to a selected subpixel.","If there are any samples aliasing each other.","","","","The height of the represented image.","Add this to an index to get to the next sample in …","Return the mutable portion of the buffer that holds sample …","Return the mutable buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Check that the pixel and the channel index are in bounds.","","","Get an index provided it is inbouds.","Resolve the index of a particular sample.","Get the theoretical position of sample (channel, x, y).","","","","","","","","","","","","","","","","","","","Take out the sample buffer.","Take out the sample buffer.","Check if a buffer fulfills the requirements of a normal …","A <code>repr(C)</code> description of the layout of buffer samples.","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","","","Compares the logical preconditions.","","Describe a row-major image packed in all directions.","Get a reference on the inner buffer.","Get a reference on the inner buffer.","Underlying linear container holding sample values.","Shrink the image to the minimum of current and given …","Shrink the inner image.","Shrink the inner image.","Get the strides for indexing matrix-like <code>[(c, w, h)]</code>.","","","","","","","","","","","","","","","","","","","","","","Try to convert this into an image with mutable pixels.","","","","","","","","","","","The width of the represented image.","Add this to an index to get to the next sample in …","","","A bi-level color map","Cubic Filter","The color type on which the map operates on","A color map","Available Sampling Filters.","Gaussian Filter","Lanczos with window 3","Nearest Neighbor","Linear Filter","","","Performs a Gaussian blur on the supplied image. <code>sigma</code> is a …","","","","","Brighten the supplied image. <code>value</code> is the amount to …","","","","","Functions for altering and converting the color of …","Adjust the contrast of the supplied image. <code>contrast</code> is the …","Return a mutable view into an image The coordinates set …","Return an immutable view into an image The coordinates set …","Reduces the colors of the image using the supplied …","","","","Perform a 3x3 box filter on the supplied image. <code>kernel</code> is …","Flip an image horizontally","Flip an image horizontally and put the result into the …","Flip an image horizontally in place.","Flip an image vertically","Flip an image vertically and put the result into the …","Flip an image vertically in place.","","","","Convert the supplied image to grayscale","Determine if this implementation of ColorMap overrides the …","Indicate NeuQuant implements <code>lookup</code>.","Fill the image with a linear horizontal gradient","Hue rotate the supplied image. <code>value</code> is the degrees to …","Reduces the colors using the supplied <code>color_map</code> and …","Returns the index of the closest match of <code>color</code> in the …","","","","","","","","Invert each pixel within the supplied image. This function …","Looks up color by index in the color map.  If <code>idx</code> is out …","","Maps <code>color</code> to the closest color in the color map.","","Overlay an image at a given coordinate (x, y)","Calculate the region that can be copied from top to bottom.","Replace the contents of an image at a given coordinate (x, …","Resize the supplied image to the specified dimensions. …","Rotate an image 180 degrees clockwise.","Rotate an image 180 degrees clockwise and put the result …","Rotate an image 180 degrees clockwise in place.","Rotate an image 270 degrees clockwise.","Rotate an image 270 degrees clockwise and put the result …","Rotate an image 90 degrees clockwise.","Rotate an image 90 degrees clockwise and put the result …","Resize the supplied image to the specific dimensions.","Tile an image by repeating it multiple times","","","","","","","","","","","Performs an unsharpen mask on the supplied image. <code>sigma</code> is …","","","Fill the image with a linear vertical gradient","A bi-level color map","The color type on which the map operates on","A color map","Brighten the supplied image. <code>value</code> is the amount to …","Brighten the supplied image in place. <code>value</code> is the amount …","Adjust the contrast of the supplied image. <code>contrast</code> is the …","Adjust the contrast of the supplied image in place. …","Reduces the colors of the image using the supplied …","Convert the supplied image to grayscale","Determine if this implementation of ColorMap overrides the …","Hue rotate the supplied image. <code>value</code> is the degrees to …","Hue rotate the supplied image in place. <code>value</code> is the …","Reduces the colors using the supplied <code>color_map</code> and …","Returns the index of the closest match of <code>color</code> in the …","Invert each pixel within the supplied image. This function …","Looks up color by index in the color map.  If <code>idx</code> is out …","Maps <code>color</code> to the closest color in the color map.","A multi-format image reader.","","","","Remove the current information on the image format.","Read the image (replaces <code>load</code>).","","Get the currently determined format.","","","","","Read the image dimensions.","Unwrap the reader.","Create a new image reader without a preset format.","Open a file to read, format will be guessed from path.","Supply the format as which to interpret the read image.","","","","","","Construct a reader with specified format.","Make a format guess based on the content, replacing it on …","A Rectangle defined by its top left corner, width and …","","","","","","","","","","","","","The rectangle’s height.","","","","","NEUQUANT Neural-Net quantization algorithm by Anthony …","","","","","","","Shared mathematical utility functions.","The rectangle’s width.","The x coordinate of the top left corner.","The y coordinate of the top left corner.","Neural network color quantizer","","","","","","","Indicate NeuQuant implements <code>lookup</code>.","","","","","","","","","","","","","","","","","Cut value to be inside given range","Support trait for enabling a few common operation on lazy …","The resulting type after dereferencing.","Used for immutable dereferencing operations, like <code>*v</code>.","Dereferences the value.","Takes a shared reference to a lazy static and initializes …","","A type representing an angle of measurement.","A rectangle that uses two <code>Point</code>s for representation.","A value in a specific unit.","A unit representing physical pixels on a display.","A type representing an x and y coordinate.","A type representing a <code>Point</code> and <code>Size</code>.","Allows converting between <code>UnitA</code> and <code>UnitB</code> by multiplying …","A unit representing Desktop publishing points/PostScript …","A type representing a width and height.","A unit representing","A type representing a vector with magnitudes x and y.","The non-origin point of the rectangle.","The origin of the rectangle.","A type representing an angle of measurement.","The animation mode of the sprite.","A batch of shapes that can be rendered together.","Begins a path. Must be at the start.","A RGBA color with f32 components.","A control point used to create curves.","A cubic curve (two control points).","Ends the path. Must be the last entry.","A point on a <code>Path</code>.","A value in a specific unit.","Shape fill options.","Font provides TrueType Font rendering","Iterate frames in order. When at the end, reset to the …","Renders frames created by a <code>Scene</code>.","A straight line segment.","A geometric shape defined by a path.","Builds a <code>Path</code>.","An entry in a <code>Path</code>.","Iterate frames starting at the beginning and continuously …","A unit representing physical pixels on a display.","The <code>Pixels</code> unit type for this implementor.","A type representing an x and y coordinate.","The <code>Points</code> unit type for this implementor.","A formatted span of text that is ready to render. Cheap to …","A quadratic curve (one control point).","A type representing a <code>Point</code> and <code>Size</code>.","Iterate frames in reverse order. When at the start, reset …","Allows converting between <code>UnitA</code> and <code>UnitB</code> by multiplying …","A unit representing Desktop publishing points/PostScript …","The <code>Scaled</code> unit type for this implementor.","The main rendering destination, usually interacted with …","A 2d shape.","A callback that can be invoked when a <code>FrameRenderer</code> is …","A type representing a width and height.","A sprite is a renderable graphic with optional animations.","An animation of one or more <code>SpriteFrame</code>s.","A collection of <code>SpriteAnimation</code>s. This is an immutable …","A collection of sprites.","A single frame for a <code>SpriteAnimation</code>.","A collection of <code>SpriteSource</code>s.","A rotation of a sprite.","A collection of sprites from a single <code>Texture</code>.","A sprite’s source location and texture. Cheap to clone.","A sub-location of a joined sprite.","A shape stroke (outline) options.","A render target","Text rendering functionality","An image that can be used as a sprite. Cheap to clone.","A unit representing","A type representing a vector with magnitudes x and y.","Methods that enable converting between 2d types that have …","Defines the nearest integer value to the original value.","Methods for converting between display scales.","Defines the biggest integer equal or lower than the …","Returns a one value.","Functionalitiy that all rectangle types implement","Returns a zero value.","Allows comparing floating point numbers with approximation.","Defines the smallest integer equal or greater than the …","","","","","","","","","","","","","","","","","","","","","","","","","Adds a collection from <code>sheet</code> using <code>converter</code> to convert …","Adds all sprites from <code>sheet</code>.","The angle to rotate around <code>screen_location</code>.","Returns the animation for <code>tag</code>.","The animations that form this sprite.","Returns true if any of <code>keys</code> are currently pressed.","Returns true if the values are approximately equal. Uses […","Returns true if the values are not approximately equal. …","Returns the area contained by this rectangle.","Returns a rotation around <code>location</code>.","Returns a rotation around the center of the shape.","Returns this rectangle converted to an <code>ExtentsRect</code>.","Returns this rectangle as a <code>Rect</code>. The rectangle’s …","Returns this rectangle converted to a <code>SizedRect</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the built path.","Returns the path event with the new unit. Does not alter …","Returns the path with the new unit. Does not alter the …","Returns the shape with the geometry casted to the unit …","Rounds to the smallest integer equal or greater than the …","Returns the center of the rectangle.","Returns a circle with <code>center</code> and <code>radius</code>.","The curent clipping rect. All drawing calls will be …","Returns a new <code>Target</code> with the intersection of <code>new_clip</code> an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Closes the path, connecting the current location to the …","The color to fill.","The color to stroke the shape’s with.","Returns true if <code>point</code> is within this rectangle.","Create a cubic curve from the current location to <code>end_at</code> …","Retrieve the current animation frame, if set and valid.","Returns the current tag.","","","","","","","","","","","","","The relative destination when rendering.","Returns the destination with the source’s size.","","","","","","","","","","","","","","","","","","","","","","","","","The length the frame should be displayed. <code>None</code> will act as …","Returns the elapsed <code>Duration</code> since the scene was created.","Ends the current frame, allowing it to be rendered.","Creates a sprite source for an entire texture.","Returns the name of the font’s family, if available.","Builder-style function. Set <code>fill</code> and returns self.","Rounds to the biggest integer equal or lower than the …","","","","","","","","","","","","","","","","","","","","","","","The frames of the animation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a collection from <code>sheet</code> using <code>converter</code> to convert …","Gets the current frame after advancing the animation for …","Returns the height of the rectangle.","Returns the unique ID of the font. This ID depends on load …","The unique ID of this texture. This depends on load order …","The image behind the texture.","Includes an Aseprite sprite sheet and Json export. For …","Embeds a font into your executable.","Embeds a texture in the binary.","Increases the size of this rectangle by the vector …","Returns the intersecting area between the two rectangles. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if the rect doesn’t have a positive width …","Returns true if this is the first frame being rendered.","Creates a sprite by joining multiple rectangular areas …","Creates a sprite by joining an iterator of <code>SpriteSource</code>s …","The virtual key codes curently depressed.","Create a straight line from the current location to <code>end_at</code>.","Builder-style function. Sets <code>options.line_width</code> and return …","Loads a texture from an image at <code>path</code>","Loads Aseprite JSON export format, when using the correct …","The location of the sprite","The location to rotate the sprite around. If not …","The location of the span.","For merging multiple Sprites that have no tags within them","Measures the vertical metrics for a given size.","The mode of the animation.","Returns the currently depressed modifier keys.","","","","Creates a new path with the initial position <code>start_at</code>.","Returns a new Scene that emits <code>SceneEvent</code>s to <code>event_sender</code>.","Returns a solid fill of <code>color</code> with default options.","Creates a new instance using <code>color</code> with default options.","Creates a new collection with <code>sprites</code>.","Creates a new sprite sheet, diving <code>texture</code> into a grid of …","Creates a new sprite source with the location and textuer …","Returns a new sprite with <code>animations</code>.","Creates a new collection from <code>animations</code>.","Creates a new animation with <code>frames</code> and …","Creates a new frame with <code>source</code> and no duration.","Creates a new texture from an image.","Returns a value that performs no rotation.","Returns the <code>Instant</code> when the frame began.","The current offset (translation) of drawing calls.","Returns a new <code>Target</code> offset by <code>delta</code> from the current …","Translates <code>point</code> by the current <code>offset</code>, if any.","Translates <code>point</code> by the current <code>offset</code>, if any.","Returns a one value.","The options to use while filling.","The options for drawing the stroke.","Returns the origin of the rectangle.","Returns a closed polygon created with <code>points</code>.","Prepares <code>text</code> to be rendered with the provided settings.","Create a quadratic curve from the current location to …","Returns a rectangle.","Returns the amount of time remaining until the next frame …","Renders the shape within <code>scene</code>. Uses the coordinates in …","Renders the shape at <code>location</code> within <code>scene</code>.","Renders the sprite at <code>location</code> with <code>rotation</code> into <code>scene</code>.","Renders the sprite with <code>alpha</code> at <code>location</code> with <code>rotation</code> …","Renders the text in <code>scene</code> with the baseline at <code>location</code>","Renders the sprite with <code>alpha</code> within <code>bounds</code> with <code>rotation</code> …","Renders the sprite with <code>alpha</code> within <code>bounds</code> with <code>rotation</code> …","Renders the sprite with <code>alpha</code> within <code>bounds</code> with <code>rotation</code> …","Renders the sprite within <code>bounds</code> (stretching if needed) …","Returns the raw image data.","Rounds to the nearest integer value.","Returns the current <code>DisplayScale</code>.","The scene to draw into.","Returns the scene as a mutable reference. Will only …","","Sets the current tag for the animation. If the tag …","Sets the DPI scale.","Sets the size of the scene.","Sets the <code>Theme</code>.","Invoked when the <code>FrameRenderer</code> is fully shut down.","Creates an instance from a texture. This creates a …","Returns the current size of the scene in <code>Scaled</code> units.","Returns the size of the image.","Returns the size of the rectangle.","Returns the current size of the scene in <code>Pixels</code> units.","The source rectangle.","The source to render.","Returns the sprite referred to by <code>tile</code>.","","","Returns the sprites identified by each element in <code>iterator</code> …","Returns all of the requested <code>tiles</code>.","Returns the sprites identified by each element in <code>iterator</code>.","Begins a new frame with the current size.","Builder-style function. Set <code>stroke</code> and returns self.","Returns the currently set <code>Theme</code>.","The source texture.","The texture.","Returns the size of the tiles within this sheet.","Checks to see if this rect is empty. If it is, None is …","","","","","","","","","","","","","","","","","","","","","","Returns this value after applying <code>scale</code>, if needed.","","","","","","","","","","","","","Returns <code>self</code> as a <code>Point</code>.","Returns this value after applying <code>scale</code>, if needed.","","","","","","","","","","","","","Returns this value after applying <code>scale</code>, if needed.","","","","","","","","","","","","","Returns <code>self</code> as a <code>Size</code>.","Returns a collection of all tiles in the sheet  as","Returns <code>self</code> as a <code>Vector</code>.","Moves this rectangle by the vector provided.","","","","","","","","","","","","","","","","","","","","","","","","","","Try to load a font from <code>bytes</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of the two rectangles. If both …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the width of the rectangle.","Converts the underlying image into a format compatible …","Builder-style function. Sets <code>duration</code> and returns self.","Builder-style function. Sets <code>mode</code> and returns self.","Builder-style function. Sets <code>options</code> and return self.","Returns a zero value.","The location to begin at.","Whether the path should be closed.","The control point for the curve.","The first control point for the curve.","The second control point for the curve.","The start location of the path.","The origin of the line.","The origin of the curve.","The origin of the curve.","The end location of the path.","The end location of the line.","The end location of the curve.","The end location of the curve.","Begin a new frame with the given size.","An individual render instruction.","Finish the current frame.","The state of keyboard modifier keys.","Render an element.","The main rendering destination, usually interacted with …","An event instructing how to render frames.","A rendered shape.","A rendered sprite.","A render target","A rendered span of text.","","","","If true, an alt key is currently depressed.","","","","","","","The curent clipping rect. All drawing calls will be …","Returns true if the command key/Apple key is pressed. This …","If true, a control key is currently depressed.","","","","","","","","","","","","","","","","","The virtual key codes curently depressed.","The current offset (translation) of drawing calls.","If true, an “Operating System key” is currently …","Returns true if the primary modifier of the current OS is …","The scene to draw into.","If true, a shift key is currently depressed.","","","","","","","","","","","","","","","","","The current clipping rect.","The current clipping rect.","The span being rendered.","The sprite being rendered.","","The frame size to render.","A batch of shapes that can be rendered together.","Begins a path. Must be at the start.","A control point used to create curves.","A cubic curve (two control points).","Ends the path. Must be the last entry.","A point on a <code>Path</code>.","Shape fill options.","A straight line segment.","A geometric shape defined by a path.","Builds a <code>Path</code>.","An entry in a <code>Path</code>.","A quadratic curve (one control point).","A 2d shape.","A shape stroke (outline) options.","The color to fill.","The color to stroke the shape’s with.","The options to use while filling.","The options for drawing the stroke.","The location to begin at.","Whether the path should be closed.","The control point for the curve.","The first control point for the curve.","The second control point for the curve.","The start location of the path.","The origin of the line.","The origin of the curve.","The origin of the curve.","The end location of the path.","The end location of the line.","The end location of the curve.","The end location of the curve.","The animation mode of the sprite.","Iterate frames in order. When at the end, reset to the …","A joined series of images. Useful for constructing a 32x32 …","The corresponding shader source type in <code>easygpu_lyon</code> for …","The uncorrected Rgb colorspace. Used as a …","Iterate frames starting at the beginning and continuously …","A single rectangle.","A rendered sprite.","Iterate frames in reverse order. When at the start, reset …","A sprite is a renderable graphic with optional animations.","An animation of one or more <code>SpriteFrame</code>s.","A collection of <code>SpriteAnimation</code>s. This is an immutable …","A collection of sprites.","A single frame for a <code>SpriteAnimation</code>.","A collection of <code>SpriteSource</code>s.","A rotation of a sprite.","A collection of sprites from a single <code>Texture</code>.","A sprite’s source location and texture. Cheap to clone.","A sprite location.","A sub-location of a joined sprite.","The Srgb colorspace. Used as a <code>VertexShaderSource</code> in …","Defines a shader source for sprites.","","","","","The angle to rotate around <code>screen_location</code>.","The animations that form this sprite.","","","","","","","","","Returns the bounding box of the source rect.","","","","","The relative destination when rendering.","","","","","The length the frame should be displayed. <code>None</code> will act as …","","","The frames of the animation.","","","","","","","","","","","","","","","","","The location of the sprite","The location to rotate the sprite around. If not …","The mode of the animation.","The sampler format expected.","The shader executable.","","","Returns the size of the bounds.","The source rectangle.","The source to render.","Returns the sprite referred to by <code>tile</code>.","Returns all of the requested <code>tiles</code>.","The source texture.","The texture.","The texture format expected.","","","","","","","","","","","","","","","","","","","","","","","","","","","Font provides TrueType Font rendering","Text rendering functionality","Feature-flag enabled fonts that are licensed under APL 2.0","Types for handling perpared text.","Roboto Regular font, licensed under APL 2.0, feature flag …","Roboto Black font, licensed under APL 2.0, feature flag …","Roboto Black-Italic font, licensed under APL 2.0, feature …","Roboto Bold font, licensed under APL 2.0, feature flag …","Roboto Bold-Italic font, licensed under APL 2.0, feature …","Roboto Italic font, licensed under APL 2.0, feature flag …","Roboto Light font, licensed under APL 2.0, feature flag …","Roboto Light-Italic font, licensed under APL 2.0, feature …","Roboto Medium font, licensed under APL 2.0, feature flag …","Roboto Medium-Italic font, licensed under APL 2.0, feature …","Roboto  font, licensed under APL 2.0, feature flag …","Roboto Thin-Italic font, licensed under APL 2.0, feature …nformation about a font glyph","A formatted span of text that is ready to render. Cheap to …","The shared data of a <code>PreparedSpan</code>.","A vertical metrics measurement.","","","","The amount of pixels above the baseline.","","","","","","","THe characters that compose this span.","","","The color to render.","The amount of pixels below the baseline. Typically a …","","","","","","","The font being rendered.","","","","","The positioned glyph.","The glyphs that will be rendered.","The height of the ascent and descent combined.","","","","","","","","","","The amount of pixels to allow between lines.","The total height of the line.","The location of the glyph, relative to the span start.","The location of the span.","The vertical metrics of the span.","The font size.","The character responsible for this glyph.","The offset of the glyph within the source string.","","","","","","","","","","","","","","","","","The width of the glyph.","The total width of the span.","An image that can be used as a sprite. Cheap to clone.","The image behind the texture.","UI scaling is important, so read the docs for this module …","","The <code>Event</code> enum and assorted supporting types.","The <code>EventLoop</code> struct and assorted supporting types, …","Types useful for interacting with a user’s monitors.","Contains traits with platform-specific methods in them.","The <code>Window</code> struct and associated types.","","","A position represented in logical pixels.","A size represented in logical pixels.","","","A position represented in physical pixels.","A size represented in physical pixels.","","A position that’s either physical or logical.","A size that’s either physical or logicalhecks that the scale factor is a normal positive <code>f64</code>.","","","","","","","","","","","An error whose cause it outside Winit’s control.","The operation is not supported by the backend.","The error type for when the requested operation is not …","The OS cannot perform the operation.","The error type for when the OS cannot perform the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The “alt” key.","","","","","","","","","Identifier for a specific analog axis on some device.","Motion on some analog axis. May report data redundant to …","","The Backspace key, right over Enter.","","","Identifier for a specific button on some device.","","The “control” key.","","On iOS, the force is calibrated so that the same number …","","","","The window has been requested to close.","","","The “Compose” key on Linux.","","","The cursor has entered the window.","The cursor has left the window.","The cursor has moved on the window.","","","","The window has been destroyed.","Represents raw hardware events that are not associated …","Emitted when the OS sends an event to a device.","Identifier of an input device.","","A file has been dropped into the window.","","Describes the input state of a key.","","","","The Escape key, next to F1.","Describes a generic event.","","","","","","","","","","","","","","","","","","","","","","","","","","The window gained or lost focus.","Describes the force of a touch event","","","","","A file is being hovered over the window.","A file was hovered, but has exited the window.","","Sent once, immediately after <code>run</code> is called. Indicates that …","<code>Insert</code>, next to Backspace.","","","","","","The ‘0’ key over the ‘O’ and ‘P’ keys.","The ‘1’ key over the letters.","The ‘2’ key over the letters.","The ‘3’ key over the letters.","The ‘4’ key over the letters.","The ‘5’ key over the letters.","The ‘6’ key over the letters.","The ‘7’ key over the letters.","The ‘8’ key over the letters.","The ‘9’ key over the letters.","Describes a keyboard input event.","An event from the keyboard has been received.","","","","","This is the “windows” key on PC and “command” key …","","","","","Amount in lines or rows to scroll in the horizontal and …","Emitted when the event loop is being shut down.","","","Emitted when all of the event loop’s input events have …","","","","","The keyboard modifiers have changed.","Represents the current state of the keyboard modifiers","Motion on some analog axis.  This event will be reported …","Describes a button of a mouse controller.","An mouse button press has been received.","Change in physical position of a pointing device.","Describes a difference in the mouse scroll wheel state.","A mouse wheel movement or touchpad scroll occurred.","Physical scroll event","The position of the window has changed. Contains the window…","","","","","","","Emitted when new events arrive from the OS to be processed.","","","If the platform reports the force as normalized, we have …","","","","","","","","","","","","","","","","","","","","","","","","","","","Pause/Break key, next to Scroll lock.","","Amount in pixels to scroll in the horizontal and vertical …","","","Sent if the event loop is being resumed after the loop’s …","","","","","","","","","","","The window received a unicode character.","Emitted after all <code>RedrawRequested</code> events have been …","Emitted after <code>MainEventsCleared</code> when a window should be …","","","The size of the window has changed. Contains the client …","Sent if the time specified by <code>ControlFlow::WaitUntil</code> has …","Emitted when the application has been resumed.","The Enter key.","","","","The “shift” key.","The window’s scale factor has changed.","Hardware-dependent keyboard scan code.","Scroll Lock.","","","","Print Screen/SysRq.","The space bar.","Describes the reason the event loop is resuming.","","","Emitted when the application has been suspended.","","","","","The system window theme has changed.","Represents a touch event","Touch event has been received","Describes touch-screen input state.","Touchpad pressure event.","","","","","Emitted when an event is sent from …","","Symbolic name for a keyboard key.","","","","Sent if the OS has new events to send to the window, after …","","","","","","","","","Describes an event from a <code>Window</code>.","Emitted when the OS sends an event to a winit window.","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns <code>true</code> if the alt key is pressed.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if the control key is pressed.","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","Returns a dummy <code>DeviceId</code>, useful for unit testing.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes how hard the screen was pressed. May be <code>None</code> if …","","","","","","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","","","Unique identifier of a finger.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns <code>true</code> if the logo key is pressed.","","Modifier keys active at the time of this input.","","","","","","","","","","","","Returns the force normalized to the range between 0.0 and …","Returns the complement of this set of flags.","","","","","Removes the specified flags in-place.","Identifies the physical key pressed","Inserts or removes the specified flags depending on the …","Returns <code>true</code> if the shift key is pressed.","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","If the event doesn’t contain a reference, turn it into …","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","Identifies the semantic meaning of the key","","","","","(x, y) change in position in unspecified units.","","","","","","","","","","","","The altitude (in radians) of the stylus.","The force of the touch, where a value of 1.0 represents …","The maximum possible force for a touch.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If <code>true</code>, the event was generated synthetically by winit in …","","","","","","(x,y) coords in pixels relative to the top-left corner of …","","","","","","","Set by the user callback given to the <code>EventLoop::run</code> …","Provides a way to retrieve events from the system and from …","The error that is returned when an <code>EventLoopProxy</code> attempts …","Used to send custom events to <code>EventLoop</code>.","Target that associates windows with an <code>EventLoop</code>.","Send a <code>LoopDestroyed</code> event and stop the event loop. This …","When the current loop iteration finishes, immediately …","When the current loop iteration finishes, suspend the …","When the current loop iteration finishes, suspend the …","","","","","","Returns the list of all the monitors available on the …","","","","","","","","","","","","","","","","","Creates an <code>EventLoopProxy</code> that can be used to dispatch …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a new event loop with a <code>()</code> as the user event type.","","","","","","Returns the primary monitor of the system.","Hijacks the calling thread and initializes the winit event …","","Send an event to the <code>EventLoop</code> from which this proxy was …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds a new event loop.","","Handle to a monitor.","Describes a fullscreen video mode of a monitor.","","","Returns the bit depth of this video mode, as in how many …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the monitor that this video mode is valid for. …","Returns a human-readable name of the monitor.","","","","","","Returns the top-left corner position of the monitor …","Returns the refresh rate of this video mode. <strong>Note</strong>: the …","Returns the scale factor that can be used to map logical …","Returns the resolution of this video mode.","Returns the monitor’s resolution.","","","","","","","","","","","","","","Returns all fullscreen video modes supported by this …","","","Additional methods on <code>EventLoop</code> to return control flow to …","A type provided by the user that can be passed through …","Initializes the <code>winit</code> event loop.","This should be used on the windows that are popped up by …","A desktop feature. This can include a single window …","This is a dialog window.","This indicates the the window is being dragged. This …","A dock or panel feature. Typically a Window Manager would …","A dropdown menu that usually appears when the user clicks …","Additional methods on <code>EventLoop</code> that are specific to Unix.","Additional methods on <code>EventLoopWindowTarget</code> that are …","Failed to load one or several shared libraries.","Pinnable menu windows. “Torn off” from the main …","Additional methods on <code>MonitorHandle</code> that are specific to …","This is a normal, top-level window.","The window is a notification. This property is typically …","A popup menu that usually appears when the user right …","The window is a splash screen displayed as an application …","Toolbar windows. “Torn off” from the main application.","A tooltip window. Usually used to show additional …","A small persistent utility window, such as a palette or …","Additional methods on <code>WindowBuilder</code> that are specific to …","Additional methods on <code>Window</code> that are specific to Unix.","Error returned if this system doesn’t have XLib or can’…","Connecting to the X server with <code>XOpenDisplay</code> failed.","X window type. Maps directly to <code>_NET_WM_WINDOW_TYPE</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check if the window is ready for drawing","True if the <code>EventLoopWindowTarget</code> uses Wayland.","True if the <code>EventLoopWindowTarget</code> uses X11.","Returns the inner identifier of the monitor.","Builds a new <code>EventLoop</code> on any thread.","Builds a new <code>EventLoop</code> that is forced to use Wayland.","Builds a new Wayland <code>EventLoop</code> on any thread.","Builds a new <code>EventLoop</code> that is forced to use X11.","Builds a new X11 <code>EventLoop</code> on any thread.","","","","","","","","","","","","","","","Returns a pointer to the <code>wl_display</code> object of wayland that …","Returns a pointer to the <code>wl_display</code> object of wayland that …","Returns a pointer to the <code>wl_surface</code> object of wayland that …","Build window with a given application ID. It should match …","Build window with base size hint. Only implemented on X11.","Build window with <code>WM_CLASS</code> hint; defaults to the name of …","Build window with <code>_GTK_THEME_VARIANT</code> hint set to the …","Build window with override-redirect flag; defaults to …","Build window with resize increment hint. Only implemented …","","","Build window with <code>_NET_WM_WINDOW_TYPE</code> hints; defaults to …","","This function returns the underlying <code>xcb_connection_t</code> of …","Returns a pointer to the <code>Display</code> object of xlib that is …","","Returns the ID of the <code>Window</code> xlib object that is used by …","","","","","","Failed to load one or several shared libraries.","","","","","","A connection to an X server.","Error triggered by xlib.","Error returned if this system doesn’t have XLib or can’…","Connecting to the X server with <code>XOpenDisplay</code> failed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks whether an error has been triggered by the previous …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ignores any previous erroreturns the <code>XConnection</code> of this events loop.","","","","","","","","","","","Exposes XRandR functions from version &lt; 1.5","Exposes XRandR functions from versionhis should be used on the windows that are popped up by …","A desktop feature. This can include a single window …","This is a dialog window.","This indicates the the window is being dragged. This …","A dock or panel feature. Typically a Window Manager would …","A dropdown menu that usually appears when the user clicks …","Represents values of <code>WINIT_HIDPI_FACTOR</code>.","","","","","","","","","","","","","Pinnable menu windows. “Torn off” from the main …","","This is a normal, top-level window.","","","","The window is a notification. This property is typically …","","A popup menu that usually appears when the user right …","","","","","","","","The window is a splash screen displayed as an application …","","","","Toolbar windows. “Torn off” from the main application.","A tooltip window. Usually used to show additional …","","","","","A small persistent utility window, such as a palette or …","","","X window type. Maps directly to <code>_NET_WM_WINDOW_TYPE</codeelf explanatory.","An error produced when using <code>Icon::from_rgba</code> with invalid …","Providing <code>None</code> to <code>Borderless</code> will fullscreen on the …","Produced when the length of the <code>rgba</code> argument isn’t …","","","","","Platform-specific","A simple crosshair.","Describes the appearance of the mouse cursor.","","The platform-dependent default cursor.","Produced when the number of pixels (<code>rgba.len() / 4</code>) isn’…","Indicate that some edge is to be moved. For example, the …","","","Fullscreen modes.","Indicates something can be grabbed.","Indicates something is grabbed.","A hand (often used to indicate links in web browsers).","Help indicator (often rendered as a “?”)","An icon used for the window titlebar, taskbar, etc.","Platform-specific","","Indicates something is to be moved.","","","","","Cursor showing that something cannot be done.","","","","Produced when underlying OS functionality failed to create …","Progress indicator. Shows that processing is being done. …","","","","","Indicates text that may be selected or edited.","","Platform-specific","","","Program busy indicator.","Represents a window.","Attributes to use when creating a window.","Object that allows you to build windows.","Identifier of a window. Unique for each window.","","","","","","","","","","","","","Whether the window should always be on top of other …","Returns the list of all the monitors available on the …","","","","","","","","","","","","","","","","","","","","","Builds the window.","","","","","","","","","","","","","","","","","","Returns the monitor on which the window currently resides.","Whether the window should have borders and bars.","","","","","","","","","","","","","","","Moves the window with the left mouse button until the …","","Returns a dummy <code>WindowId</code>, useful for unit testing.","","","","","","","","","","","","","","","","","","","Brings the window to the front and sets input focus. Has …","","","","","","","","","","","","Creates an <code>Icon</code> from 32bpp RGBA data.","Gets the window’s current fullscreen state.","Whether the window should be set as fullscreen upon …","","","","","Returns an identifier unique to the window.","Returns the position of the top-left hand corner of the …","Returns the physical size of the window’s client area.","The dimensions of the window. If this is <code>None</code>, some …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets the window’s current maximized state.","","The maximum dimensions a window can be, If this is <code>None</code>, …","Whether the window should be maximized upon creation.","The minimum dimensions a window can be, If this is <code>None</code>, …","","","Creates a new Window for platforms where this is …","Initializes a new <code>WindowBuilder</code> with default values.","Returns the position of the top-left hand corner of the …","Returns the physical size of the entire window.","","The desired position of the window. If this is <code>None</code>, some …","Returns the primary monitor of the system.","","Returns a <code>raw_window_handle::RawWindowHandle</code> for the Window","Emits a <code>WindowEvent::RedrawRequested</code> event in the …","Requests user attention to the window, this has no effect …","Whether the window is resizable or not.","Returns the scale factor that can be used to map logical …","Change whether or not the window will always be on top of …","Grabs the cursor, preventing it from leaving the window.","Modifies the cursor icon of the window.","Changes the position of the cursor in window coordinates.","Modifies the cursor’s visibility.","Turn window decorations on or off.","Sets the window to fullscreen or back.","Sets location of IME candidate box in client area …","Modifies the inner size of the window.","Sets a maximum dimension size for the window.","Sets the window to maximized or back.","Sets a minimum dimension size for the window.","Sets the window to minimized or back","Modifies the position of the window.","Sets whether the window is resizable or not.","Modifies the title of the window.","Modifies the window’s visibility.","Sets the window icon. On Windows and X11, this is …","","The title of the window in the title bar.","","","","","","","","","","Whether the the window should be transparent. If this is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the window should be immediately visible upon …","","","The attributes to use to create the window.","The window icon.","Sets whether or not the window will always be on top of …","","","","Sets whether the window should have a border, a title bar, …","Sets the window fullscreen state.","","Requests the window to be of specific dimensions.","Sets a maximum dimension size for the window.","Requests maximized mode.","Sets a minimum dimension size for the window.","","Sets a desired initial position for the window.","Sets whether the window is resizable or not.","","Requests a specific title for the window.","Sets whether the background of the window should be …","Sets whether the window will be initially hidden or …","Sets the window icon.","","","","","","","","","","","","","","","","","","","","A type representing an angle of measurement.","The animation mode of the sprite.","","A trait that describes the application’s behavior.","","","","","","The Backspace key, right over Enter.","","A batch of shapes that can be rendered together.","Begins a path. Must be at the start.","","","","","","","A RGBA color with f32 components.","","The “Compose” key on Linux.","A control point used to create curves.","","","An error from <code>kludgine-core</code> occurred.","A cubic curve (two control points).","","","","Identifier of an input device.","","","Describes the input state of a key.","Ends the path. Must be the last entry.","","","A point on a <code>Path</code>.","","All errors that kludgine-app can return.","The Escape key, next to F1.","An input Event","Whether an event has been processed or ignored.","","","","","","","","","","","","","","","","","","","","","","","","","","A value in a specific unit.","Shape fill options.","Font provides TrueType Font rendering","Iterate frames in order. When at the end, reset to the …","Renders frames created by a <code>Scene</code>.","","","","","","The event was not handled.","An Event from a device","<code>Insert</code>, next to Backspace.","An error occurred while communicating internally between …","","","","","The ‘0’ key over the ‘O’ and ‘P’ keys.","The ‘1’ key over the letters.","The ‘2’ key over the letters.","The ‘3’ key over the letters.","The ‘4’ key over the letters.","The ‘5’ key over the letters.","The ‘6’ key over the letters.","The ‘7’ key over the letters.","The ‘8’ key over the letters.","The ‘9’ key over the letters.","A keyboard event","","","","","","","","","A straight line segment.","Amount in lines or rows to scroll in the horizontal and …","","","","","","","Describes a button of a mouse controller.","A mouse button event","Mouse cursor event","Describes a difference in the mouse scroll wheel state.","Mouse wheel event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An error from user code arose.","","","","","A geometric shape defined by a path.","Builds a <code>Path</code>.","An entry in a <code>Path</code>.","Pause/Break key, next to Scroll lock.","","Iterate frames starting at the beginning and continuously …","Amount in pixels to scroll in the horizontal and vertical …","A unit representing physical pixels on a display.","The <code>Pixels</code> unit type for this implementor.","","","A type representing an x and y coordinate.","The <code>Points</code> unit type for this implementor.","","A formatted span of text that is ready to render. Cheap to …","","","The event was handled and should not be processed any …","","A quadratic curve (one control point).","","","","","","","A type representing a <code>Point</code> and <code>Size</code>.","Allows requesting window refreshes outside of the event …","Tracks when a window should be redrawn. Allows for …","","The Enter key.","Iterate frames in reverse order. When at the start, reset …","","","Runtime is designed to consume the main thread. For …","","Allows converting between <code>UnitA</code> and <code>UnitB</code> by multiplying …","A unit representing Desktop publishing points/PostScript …","The <code>Scaled</code> unit type for this implementor.","Hardware-dependent keyboard scan code.","The main rendering destination, usually interacted with …","Scroll Lock.","","A 2d shape.","A callback that can be invoked when a <code>FrameRenderer</code> is …","An <code>Application</code> implementation that begins with a single …","A type representing a width and height.","","","Print Screen/SysRq.","The space bar.","A sprite is a renderable graphic with optional animations.","An animation of one or more <code>SpriteFrame</code>s.","A collection of <code>SpriteAnimation</code>s. This is an immutable …","A collection of sprites.","A single frame for a <code>SpriteAnimation</code>.","A collection of <code>SpriteSource</code>s.","A rotation of a sprite.","A collection of sprites from a single <code>Texture</code>.","A sprite’s source location and texture. Cheap to clone.","A sub-location of a joined sprite.","","","A shape stroke (outline) options.","","","","A render target","Text rendering functionality","An image that can be used as a sprite. Cheap to clone.","Describes touch-screen input state.","","","A unit representing","","","","A type representing a vector with magnitudes x and y.","Symbolic name for a keyboard key.","","","","","","","","","","","","Trait to implement a Window","A builder for a <code>Window</code>.","Defines initial window properties.","A handle to an open window.","","","","","Methods that enable converting between 2d types that have …","Returns a zero value.","Methods for converting between display scales.","Allows comparing floating point numbers with approximation.","Functionalitiy that all rectangle types implement","Returns a one value.","Defines the biggest integer equal or lower than the …","Defines the smallest integer equal or greater than the …","Defines the nearest integer value to the original value.","Called prior to rendering to allow setting a scaling …","Whether the window should always be on top or not.","The angle to rotate around <code>screen_location</code>.","The animations that form this sprite.","Returns true if the values are approximately equal. Uses […","Returns true if the values are not approximately equal. …","Returns the area contained by this rectangle.","Returns this rectangle converted to an <code>ExtentsRect</code>.","Returns this rectangle as a <code>Rect</code>. The rectangle’s …","Returns this rectangle converted to a <code>SizedRect</code>.","Feature-flag enabled fonts that are licensed under APL 2.0","Rounds to the smallest integer equal or greater than the …","Returns the center of the rectangle.","The curent clipping rect. All drawing calls will be …","The window was requested to be closed, most likely from …","The color to fill.","The color to stroke the shape’s with.","Returns true if <code>point</code> is within this rectangle.","Whether the window should be drawn with decorations or not.","The relative destination when rendering.","The device that triggered this event","The length the frame should be displayed. <code>None</code> will act as …","The event that was triggered","Rounds to the biggest integer equal or lower than the …","The frames of the animation.","Returns a <code>WindowBuilder</code> for this window.","Returns the height of the rectangle.","The image behind the texture.","Includes an Aseprite sprite sheet and Json export. For …","Embeds a font into your executable.","Embeds a texture in the binary.","Increases the size of this rectangle by the vector …","The initial position of the window. If None is returned, …","The initial size of the window.","The default <code>Theme</code> for the <code>Window</code> if <code>winit</code> is unable to …","Executed upon application launch.","Called when the window is being initilaized.","Returns the intersecting area between the two rectangles. …","Returns true if the rect doesn’t have a positive width …","The virtual key codes curently depressed.","The location of the sprite","The location to rotate the sprite around. If not …","The location of the span.","Whether the window should be maximized or not.","The mode of the animation.","The current offset (translation) of drawing calls.","Returns a one value.","Returns the number of open windows.","The options to use while filling.","The options for drawing the stroke.","Returns the origin of the rectangle.","The window has received an input event.","A text input was received.","Renders the contents of the window. Called whenever the …","Whether the window should be resizable or not.","Rounds to the nearest integer value.","The scene to draw into.","Return true if the app should exit. Default implementation …","Invoked when the <code>FrameRenderer</code> is fully shut down.","Returns the size of the rectangle.","The source rectangle.","The source to render.","Returns the sprite referred to by <code>tile</code>.","Returns all of the requested <code>tiles</code>.","Specify a target frames per second, which will force your …","The source texture.","The texture.","Checks to see if this rect is empty. If it is, None is …","Returns this value after applying <code>scale</code>, if needed.","Returns <code>self</code> as a <code>Point</code>.","Returns this value after applying <code>scale</code>, if needed.","Returns this value after applying <code>scale</code>, if needed.","Returns <code>self</code> as a <code>Size</code>.","Returns <code>self</code> as a <code>Vector</code>.","Moves this rectangle by the vector provided.","Whether the window should be transparent or not.","Returns the union of the two rectangles. If both …","Called on a regular basis as events come in. Use <code>status</code> to …","Whether the window should be visible or not.","Returns the width of the rectangle.","The initial title of the window.","Returns a zero value.","","","","The button tha triggered this event.","The scroll amount.","Contains a <code>VirtualKeyCode</code> if <code>scancode</code> was interpetted as a …","The location within the window of the cursor. Will be …","The hardware-dependent scan code.","Indicates pressed or released/","Indicates pressed or released/","If this event was caused by touch events, the phase of the …","","","","","The location to begin at.","Whether the path should be closed.","The control point for the curve.","The first control point for the curve.","The second control point for the curve.","The start location of the path.","The origin of the line.","The origin of the curve.","The origin of the curve.","The end location of the path.","The end location of the line.","The end location of the curve.","The end location of the curve.","Roboto Regular font, licensed under APL 2.0, feature flag …","Roboto Black font, licensed under APL 2.0, feature flag …","Roboto Black-Italic font, licensed under APL 2.0, feature …","Roboto Bold font, licensed under APL 2.0, feature flag …","Roboto Bold-Italic font, licensed under APL 2.0, feature …","Roboto Italic font, licensed under APL 2.0, feature flag …","Roboto Light font, licensed under APL 2.0, feature flag …","Roboto Light-Italic font, licensed under APL 2.0, feature …","Roboto Medium font, licensed under APL 2.0, feature flag …","Roboto Medium-Italic font, licensed under APL 2.0, feature …","Roboto  font, licensed under APL 2.0, feature flag …","Roboto Thin-Italic font, licensed under APL 2.0, feature …","Convenience trait for creating persistent tile maps.","<code>PersistentTileMap</code> is an alias for <code>TileMap</code><code>&lt;</code>…","Provides a simple interface for tile maps that have …","A tile sprite source for <code>PersistentTileProvider</code>.","A sprite that may be animated.","A sprite.","A single frame image.","A sprite source.","A Tile represents a sprite at an integer offset on the map","<code>TileMap</code> renders tiles retrieved from a <code>TileProvider</code>","<code>TileProvider</code> provides <code>Tile</code>s for a  <code>TileMap</code>.","A tile’s sprite.","","","","","","Returns a blank map with dimensions <code>dimensions</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the current frame to display.","","","","","","","","","","","","","","","","The location of the tile.","Creates a new tile map of the given size.","Creates a new map using <code>tiles</code> with <code>dimensions</code>. Tiles are …","Creates a <code>TileMap</code> using a <code>PersistentTileProvider</code>.","Renders the tilemap. The tilemap will fill the <code>target</code>, but …","Renders the tilemap scaled by <code>scale</code>. The tilemap will fill …","Sets a single tile at <code>location</code>. Returns the existing tile, …","Sets a single tile at <code>location</code>. Returns the existing tile, …","Sets the stagger. This causes every odd row of tiles to be …","The sprite to render for the tile.","Returns the tile for <code>location</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,0,1,0,2,0,3,0,3,0,3,0,0,0,0,0,0,0,0,0,4,5,3,6,7,2,8,9,10,6,5,4,5,3,6,7,2,8,4,5,3,6,7,2,8,6,2,6,2,9,10,8,4,5,3,6,7,2,8,7,7,0,3,3,6,7,2,4,5,3,3,3,6,7,2,8,10,10,10,10,11,5,9,2,2,4,5,3,6,7,2,8,4,5,3,6,7,2,8,4,5,3,6,7,2,8,10,2,5,12,5,11,2,0,9,9,7,9,2,6,10,4,5,2,2,2,2,7,7,2,2,11,3,5,9,5,6,2,3,10,4,5,3,6,7,2,8,4,5,3,6,7,2,8,4,5,3,6,7,2,8,4,5,3,6,7,2,8,4,5,3,6,7,2,8,9,10,10,8,8,8,8,8,8,8,8,8,8,8,13,14,15,16,16,16,16,16,16,16,16,16,16,16,16,16,17,16,16,16,16,16,16,16,16,16,16,0,16,16,0,16,17,16,16,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,18,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,19,16,16,16,16,16,16,20,16,21,16,16,16,16,20,16,0,19,19,0,19,17,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,20,16,16,16,16,16,16,21,16,16,16,22,16,18,16,16,16,16,16,16,16,22,16,20,16,16,0,16,16,16,16,16,16,17,16,16,16,16,0,16,16,16,16,16,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,18,23,19,18,23,19,18,23,19,18,23,19,18,23,19,18,23,18,23,19,18,18,23,18,23,19,18,23,19,18,23,19,18,23,19,18,23,19,18,23,19,18,23,19,18,23,19,18,23,19,18,23,19,18,23,19,18,24,25,26,27,26,26,24,25,28,29,30,29,2,16,16,16,16,0,16,16,16,16,16,16,16,16,16,17,16,16,16,16,16,16,16,3,16,16,16,0,16,16,0,16,17,16,0,16,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,18,0,16,3,16,16,16,16,16,16,16,16,16,16,16,16,16,16,19,16,16,16,16,16,16,20,16,21,16,16,16,16,20,16,0,19,19,0,19,17,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,20,3,16,16,16,16,16,16,21,16,16,16,22,16,18,16,16,16,16,16,16,16,0,0,22,16,20,16,0,16,0,16,16,0,16,16,16,16,17,16,16,16,16,0,16,16,16,16,16,0,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,16,16,16,16,9,10,9,10,23,23,10,10,10,10,11,9,10,11,9,9,9,10,11,9,10,9,10,10,13,14,15,24,25,26,27,26,26,24,25,28,29,30,29,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,31,31,31,31,0,31,31,31,31,31,31,31,31,31,31,31,31,31,32,32,32,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,32,31,31,31,31,31,32,31,31,31,31,31,31,33,31,32,31,31,33,31,32,33,31,32,31,31,31,31,33,31,32,31,31,32,32,0,33,31,31,31,31,32,32,32,31,0,0,0,33,31,32,33,31,32,33,31,32,31,0,31,31,0,31,33,31,33,0,0,34,32,0,0,0,31,32,33,31,32,33,31,32,33,31,32,33,31,32,33,31,32,31,31,35,36,37,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,39,39,40,41,42,43,43,41,42,43,44,0,0,0,0,0,45,46,47,45,48,49,46,47,45,48,0,50,50,50,50,50,0,0,0,51,52,53,51,52,53,51,52,53,51,52,53,0,54,54,54,0,55,55,56,0,0,0,57,0,0,58,0,0,0,0,0,59,0,0,59,57,0,0,0,0,0,59,0,58,0,0,0,0,60,61,62,63,58,64,65,60,61,62,63,58,64,65,60,61,62,57,66,67,68,69,63,58,64,65,70,60,61,62,57,63,63,60,60,61,61,61,62,62,57,63,63,60,60,61,61,61,62,62,69,71,63,58,64,65,60,61,62,71,72,60,72,58,64,65,72,58,64,65,72,58,64,65,57,66,67,68,69,63,58,64,65,70,60,61,62,57,66,67,68,69,63,58,64,65,70,60,61,62,58,64,65,60,61,62,63,58,64,65,60,61,62,73,63,58,64,65,60,61,62,72,57,66,67,68,69,63,58,64,65,70,60,61,62,57,66,67,68,69,63,58,64,65,70,60,61,62,66,67,68,63,70,72,57,66,67,68,63,58,64,65,60,61,62,63,58,64,65,60,61,62,63,58,64,65,60,61,62,63,58,64,65,60,61,62,57,57,66,67,68,63,58,64,65,70,60,61,62,63,63,63,58,64,65,60,60,61,61,62,62,63,63,57,66,67,68,69,63,58,64,65,70,60,61,62,69,66,67,68,63,58,64,65,70,60,60,61,61,61,62,62,66,67,68,63,58,64,65,70,60,61,62,65,58,74,63,58,64,65,60,61,62,57,66,67,68,69,63,58,64,65,70,60,61,62,57,66,67,68,69,63,63,63,63,58,58,58,58,64,64,65,70,70,70,60,60,60,61,61,61,62,62,62,62,60,61,62,60,60,61,62,61,62,63,70,72,58,64,65,60,60,72,58,64,65,72,57,66,67,68,69,63,58,64,65,70,60,61,62,57,66,67,68,69,63,58,64,65,70,60,61,62,57,66,67,68,69,63,58,64,65,70,60,61,62,70,72,63,63,60,61,62,63,60,61,62,63,63,63,58,64,65,70,60,60,61,61,62,62,63,63,70,63,60,61,62,69,63,64,65,70,60,61,62,75,69,63,63,63,70,70,70,72,58,64,65,64,65,66,67,68,63,70,57,63,58,64,65,60,61,62,63,58,64,65,60,61,62,63,63,63,63,76,63,58,64,65,60,61,62,58,64,65,58,64,65,57,66,67,68,63,58,64,65,70,60,61,62,69,69,60,61,62,72,64,58,57,63,63,60,60,61,61,61,62,62,57,63,63,60,60,61,61,61,62,62,63,63,63,63,63,63,63,63,72,57,66,67,68,69,63,58,64,65,70,60,61,62,59,63,63,63,58,58,58,64,64,64,65,65,65,60,60,60,61,61,61,62,62,62,77,60,61,62,59,63,63,63,58,58,58,64,64,64,65,65,65,60,60,60,61,61,61,62,62,62,59,63,63,63,58,58,58,64,64,64,65,65,65,60,60,60,61,61,61,62,62,62,77,60,61,62,63,63,63,63,63,63,77,60,61,62,69,57,57,72,58,64,65,58,64,65,60,61,62,57,66,67,68,69,63,58,64,65,70,60,61,62,57,66,67,68,69,63,58,64,65,70,60,61,62,57,66,67,68,69,63,58,64,65,70,60,61,62,57,66,67,68,69,63,58,64,65,70,60,61,62,63,58,64,65,60,61,62,63,58,64,65,60,61,62,72,57,66,67,68,69,63,58,64,65,70,60,61,62,72,58,64,65,60,60,61,62,61,62,61,62,61,62,78,63,63,63,79,80,81,82,0,0,83,0,0,0,0,83,0,83,0,84,85,86,0,0,0,0,0,0,84,85,86,84,85,86,84,85,86,83,87,88,84,85,86,84,85,86,84,85,86,84,85,86,84,85,86,84,85,86,84,85,86,84,85,86,85,85,86,86,84,85,86,87,0,87,0,84,85,86,84,85,86,84,85,86,84,85,86,88,0,88,0,84,85,86,0,0,0,0,0,0,0,0,0,0,89,90,89,89,89,89,89,89,89,89,89,0,0,0,0,91,0,90,89,89,89,89,89,89,0,0,0,0,0,0,0,0,0,0,92,93,94,89,0,0,0,0,89,0,0,0,0,0,89,0,0,0,0,0,0,0,0,0,0,95,96,0,95,96,95,95,90,97,98,95,95,95,95,95,90,97,90,97,0,0,0,95,95,99,100,101,102,0,103,104,105,106,0,0,0,95,95,95,107,107,90,97,95,95,95,95,0,95,90,97,97,95,108,90,97,107,109,109,109,109,109,109,109,109,107,91,109,109,109,109,109,109,95,0,95,0,95,90,97,90,97,90,97,92,95,95,95,96,95,110,96,95,95,111,97,107,95,95,95,95,95,95,112,95,95,95,112,95,95,93,113,95,95,95,0,110,0,0,0,107,94,95,95,0,95,107,107,95,114,115,116,114,117,110,111,0,107,107,0,95,96,95,95,95,95,107,95,95,107,95,118,118,118,118,118,118,118,118,107,95,97,118,118,118,118,118,118,107,95,90,97,90,97,90,97,90,97,107,107,90,97,119,120,121,122,123,124,0,111,0,112,112,0,0,0,0,98,0,108,109,109,109,109,109,109,109,109,109,109,109,109,109,109,118,118,118,118,118,118,118,118,118,118,118,118,118,118,89,89,89,89,89,89,89,89,89,89,0,0,0,89,89,89,89,89,89,89,89,89,95,125,95,95,95,95,95,95,95,95,95,95,125,125,95,95,95,125,95,95,95,95,95,125,95,125,95,125,95,125,95,95,125,95,125,95,125,95,125,95,125,95,125,95,95,95,95,95,95,125,125,95,95,125,125,95,125,95,95,125,95,125,95,125,95,95,95,125,95,125,95,125,95,125,95,95,95,95,95,95,125,95,125,95,95,125,0,0,110,111,0,110,110,111,0,111,0,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,100,101,102,103,104,105,106,0,92,92,0,0,93,93,113,0,0,0,126,127,128,0,0,0,0,114,115,116,114,117,0,0,0,0,0,0,119,120,121,122,123,124,94,0,0,0,94,0,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,0,0,0,96,0,96,96,96,0,96,0,130,131,0,132,0,0,0,133,133,0,0,0,0,134,0,133,134,133,135,134,136,137,135,136,134,138,134,135,137,136,136,137,131,0,132,0,0,0,0,0,0,0,0,0,139,140,0,139,141,50,0,0,0,0,49,140,139,142,142,142,142,0,0,0,141,140,55,133,133,0,0,0,0,0,0,134,0,0,0,0,0,55,0,0,39,0,39,0,0,0,0,0,133,53,0,139,142,0,39,39,134,140,140,0,0,0,0,133,51,52,53,135,139,143,42,43,39,41,49,46,47,45,48,51,52,53,54,55,130,137,144,133,132,131,138,136,145,141,146,147,148,149,142,150,140,51,52,140,144,51,52,53,151,40,46,45,146,148,41,145,135,140,140,140,140,140,140,140,50,46,148,135,139,143,42,43,39,41,49,46,47,45,48,51,52,53,54,55,130,137,144,133,132,131,138,136,145,141,146,147,148,149,142,150,140,135,139,143,42,43,39,41,49,46,47,45,48,51,52,53,54,55,130,137,144,133,132,131,138,136,145,141,146,147,148,149,142,150,140,152,50,46,148,148,51,52,53,55,144,133,132,149,142,140,51,52,53,55,144,133,132,149,142,140,51,140,153,143,46,140,54,145,144,140,130,45,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,145,51,52,53,144,150,143,46,134,54,145,54,140,135,139,143,42,43,39,41,49,46,47,45,48,51,52,53,54,55,130,137,144,133,132,131,138,136,145,141,146,147,148,149,142,150,140,154,48,151,151,151,143,151,47,140,130,130,130,51,52,53,144,133,132,140,51,52,144,133,132,140,140,148,50,46,148,148,152,42,43,39,41,49,46,47,45,48,51,52,53,54,55,55,130,137,144,133,132,131,138,136,145,141,146,147,148,149,142,150,140,140,140,140,140,54,145,148,136,145,145,135,139,143,42,43,39,41,49,46,47,45,48,51,51,51,51,51,52,52,52,53,53,53,54,55,55,130,137,144,133,132,131,138,136,145,141,146,147,148,148,149,142,150,150,140,140,140,140,140,51,52,53,140,140,46,149,140,140,140,135,139,143,42,43,39,41,49,46,47,45,48,51,52,53,54,55,130,137,144,133,132,131,138,136,145,141,146,147,148,149,142,150,140,135,139,143,42,43,39,41,49,46,47,45,48,51,52,53,54,55,130,137,144,133,132,131,138,136,145,141,146,147,148,149,142,150,140,135,139,143,42,43,39,41,49,46,47,45,48,51,52,53,54,55,130,137,144,133,132,131,138,136,145,141,146,147,148,149,142,150,140,140,140,137,51,52,53,144,140,42,43,51,52,53,130,144,140,54,145,149,51,140,130,145,135,136,134,145,54,51,52,53,145,140,145,145,140,151,151,151,151,42,43,138,134,46,54,143,43,45,48,148,47,48,55,41,140,140,54,145,54,140,145,49,46,149,51,52,53,55,144,133,132,149,142,140,55,39,150,140,50,46,148,148,135,139,143,42,43,39,41,49,46,47,45,48,51,52,53,54,55,130,137,144,133,132,131,138,136,145,141,146,147,148,149,142,150,140,135,139,143,42,43,39,41,49,46,47,45,48,51,52,53,54,55,130,137,144,133,132,131,138,136,145,141,146,147,148,149,142,150,140,135,139,143,42,43,39,41,49,46,47,45,48,51,52,53,54,55,130,137,144,133,132,131,138,136,145,141,146,147,148,149,142,150,140,135,139,143,42,43,39,41,49,46,47,45,48,51,52,53,54,55,130,137,144,133,132,131,138,136,145,141,146,147,148,149,142,150,140,145,135,140,135,139,143,42,43,39,41,49,46,47,45,48,51,52,53,54,55,130,137,144,133,132,131,138,136,145,141,146,147,148,149,142,150,140,145,54,145,137,136,136,143,148,143,42,43,47,45,48,54,137,146,147,148,46,145,153,143,46,44,56,155,156,157,155,156,157,157,158,158,158,159,160,161,161,162,163,0,0,164,0,165,166,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,163,168,161,168,169,160,170,0,0,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,0,0,0,0,0,0,0,0,0,0,0,0,171,0,172,173,0,172,0,0,0,0,0,0,0,0,0,160,174,174,161,163,163,174,160,0,0,175,176,175,176,163,177,178,178,179,0,0,0,0,0,0,0,0,0,0,0,0,180,181,182,182,177,182,183,182,183,182,182,183,160,163,169,169,184,184,185,167,167,167,0,165,0,0,0,0,181,0,0,180,180,171,171,0,167,167,167,167,171,166,0,167,167,167,167,0,174,163,163,0,0,186,187,0,185,188,188,188,188,188,188,188,188,188,188,0,170,0,169,161,168,171,189,166,166,190,191,163,175,175,163,0,0,0,0,0,0,186,184,184,0,0,192,181,184,184,0,166,166,0,187,193,193,194,179,0,195,189,190,160,0,175,175,169,160,160,186,0,0,164,171,164,178,0,163,194,166,166,196,197,180,180,180,180,180,180,198,198,0,0,181,195,199,195,189,160,160,160,160,162,169,160,0,0,0,197,0,187,193,200,0,0,0,0,0,0,0,0,0,0,0,0,0,167,167,167,167,167,167,167,167,167,167,163,161,168,176,196,162,201,202,202,0,0,0,0,0,0,0,0,0,0,0,178,184,0,0,0,164,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,160,169,160,160,160,175,203,176,203,160,0,172,173,0,0,0,0,0,0,0,0,0,185,188,188,188,188,188,188,188,188,204,204,204,188,188,188,188,205,180,180,180,0,165,0,0,206,173,0,189,164,0,0,0,0,0,160,176,160,160,160,160,160,168,0,173,0,0,0,0,0,0,0,0,0,172,172,0,0,195,189,197,198,193,193,175,160,160,185,207,188,188,207,188,188,188,188,188,188,0,206,188,188,188,188,175,160,174,163,0,160,169,199,192,0,0,0,0,0,181,171,168,200,205,201,202,208,180,184,168,205,209,210,211,212,213,214,200,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,172,234,179,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,195,253,254,201,255,256,199,171,190,169,257,160,258,259,163,204,181,260,182,180,164,196,162,261,193,177,170,187,262,263,203,264,167,161,265,266,267,207,184,191,166,192,268,188,175,186,176,269,189,168,183,208,270,165,178,194,271,272,273,274,206,185,202,173,275,276,277,278,198,197,174,240,240,240,169,160,163,203,161,175,176,174,160,160,264,162,263,240,238,278,244,215,215,217,217,256,255,238,277,278,244,168,265,260,238,278,238,278,229,228,229,230,228,267,239,241,275,169,160,163,203,161,175,176,174,169,160,163,203,161,175,176,174,169,160,163,203,161,175,176,174,169,160,163,203,161,175,176,174,169,160,163,203,161,175,176,174,169,160,163,203,161,175,176,174,169,160,163,203,161,175,176,174,261,240,205,209,210,211,212,213,214,200,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,172,234,179,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,195,253,254,201,255,256,199,171,190,169,257,160,258,259,163,204,181,260,182,180,164,196,162,261,193,177,170,187,262,263,203,264,167,161,265,266,267,207,184,191,166,192,268,188,175,186,176,269,189,168,183,208,270,165,178,194,271,272,273,274,206,185,202,173,275,276,277,278,198,197,174,205,209,210,211,212,213,214,200,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,172,234,179,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,195,253,254,201,255,256,199,171,190,169,257,160,258,259,163,204,181,260,182,180,164,196,162,261,193,177,170,187,262,263,203,264,167,161,265,266,267,207,184,191,166,192,268,188,175,186,176,269,189,168,183,208,270,165,178,194,271,272,273,274,206,185,202,173,275,276,277,278,198,197,174,234,276,245,274,266,262,228,228,200,216,172,234,179,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,195,253,254,201,171,190,169,257,160,258,259,163,204,181,260,182,180,164,196,162,261,193,177,170,187,262,263,203,264,167,161,265,266,267,207,184,191,166,192,268,188,175,186,176,269,168,183,208,270,165,178,194,271,272,273,274,206,185,202,173,275,276,277,278,198,197,174,200,216,172,234,179,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,195,253,254,201,171,190,169,257,160,258,259,163,204,181,260,182,180,164,196,162,261,193,177,170,187,262,263,203,264,167,161,265,266,267,207,184,191,166,192,268,188,175,186,176,269,168,183,208,270,165,178,194,271,272,273,274,206,185,202,173,275,276,277,278,198,197,174,169,160,258,259,163,204,203,161,175,176,174,162,243,251,240,191,257,182,169,160,163,203,161,175,176,174,163,220,262,266,169,160,163,203,161,175,176,174,228,228,228,228,263,275,212,214,214,214,214,214,214,213,214,214,214,214,214,214,214,214,212,214,214,214,217,262,179,235,238,239,240,243,248,251,190,257,160,258,259,182,164,196,193,177,187,262,263,161,265,266,207,184,191,192,168,208,270,165,178,194,272,274,206,185,278,267,191,237,270,273,247,251,243,267,255,256,256,167,215,217,260,260,169,160,163,203,161,175,176,174,238,230,230,205,209,210,211,212,213,214,200,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,172,234,179,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,195,253,254,201,255,256,199,171,190,169,257,160,258,259,163,204,181,260,182,180,164,196,162,261,193,177,170,187,262,263,203,264,167,161,265,266,267,207,184,191,166,192,268,188,175,186,176,269,189,168,183,208,270,165,178,194,271,272,273,274,206,185,202,173,275,276,277,278,198,197,174,258,258,229,229,231,231,229,229,229,229,229,231,231,229,229,231,231,229,229,231,231,211,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,232,252,255,256,196,229,169,160,163,203,161,175,176,174,229,230,242,250,245,246,249,212,200,179,235,238,240,244,251,195,253,254,201,171,190,169,257,160,258,259,163,204,181,260,182,180,164,196,162,261,193,177,170,187,262,263,203,264,167,161,265,266,267,207,184,191,166,192,268,188,175,186,176,269,168,183,208,270,165,178,194,271,272,273,206,185,202,173,275,278,198,174,200,179,235,244,251,195,253,254,171,190,169,257,160,258,259,163,204,182,180,164,196,162,261,193,177,170,187,262,263,203,264,167,161,265,207,184,191,166,192,268,188,175,186,176,269,183,208,270,165,178,194,271,272,273,206,185,202,173,275,198,174,229,169,160,163,203,161,175,176,174,191,213,214,264,228,231,259,264,212,213,214,200,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,172,234,179,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,195,195,253,253,254,254,201,255,256,199,199,171,190,169,169,169,169,169,257,160,160,160,160,160,258,259,163,163,163,163,163,204,181,260,182,180,164,196,162,261,193,177,170,187,262,263,203,203,203,203,203,264,167,161,161,161,161,161,265,266,267,207,184,191,166,192,268,188,175,175,175,175,175,186,176,176,176,176,176,269,189,168,183,208,270,165,178,194,271,272,273,274,206,185,202,173,275,276,277,278,198,197,174,174,174,174,174,257,238,261,267,268,269,273,247,205,209,210,211,212,213,214,200,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,172,234,179,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,195,253,254,201,255,256,199,171,190,169,169,257,160,258,259,163,204,181,260,182,180,164,196,162,261,261,193,177,170,187,262,263,203,264,167,161,265,266,267,207,184,191,166,192,268,188,175,186,176,269,189,168,168,183,208,270,165,178,194,271,272,273,274,206,185,202,173,275,276,277,278,198,197,174,169,160,163,203,161,175,176,174,169,160,163,203,161,175,176,174,169,160,163,203,161,175,176,174,212,169,160,163,203,161,175,176,174,265,262,168,212,225,226,220,213,179,235,244,251,171,190,169,257,160,258,259,163,204,182,180,164,196,162,261,193,177,170,187,262,263,203,264,167,161,265,207,184,191,166,192,268,188,175,186,176,269,183,208,270,165,178,194,271,272,273,206,185,202,173,275,198,174,213,216,216,220,213,233,173,179,235,244,251,171,190,169,257,160,258,259,163,204,182,180,164,196,162,261,193,177,170,187,262,263,203,264,167,161,265,207,184,191,166,192,268,188,175,186,176,269,183,208,270,165,178,194,271,272,273,206,185,202,173,275,198,174,269,270,0,0,0,169,160,163,203,161,175,176,174,228,229,230,169,160,163,203,161,175,176,174,169,160,163,203,161,175,176,174,205,209,210,211,212,213,214,200,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,172,234,179,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,195,253,254,201,255,256,199,171,190,169,257,160,258,259,163,204,181,260,182,180,164,196,162,261,193,177,170,187,262,263,203,264,167,161,265,266,267,207,184,191,166,192,268,188,175,186,176,269,189,168,183,208,270,165,178,194,271,272,273,274,206,185,202,173,275,276,277,278,198,197,174,205,209,210,211,212,213,214,200,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,172,234,179,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,195,253,254,201,255,256,199,171,190,169,257,160,258,259,163,204,181,260,182,180,164,196,162,261,193,177,170,187,262,263,203,264,167,161,265,266,267,207,184,191,166,192,268,188,175,186,176,269,189,168,183,208,270,165,178,194,271,272,273,274,206,185,202,173,275,276,277,278,198,197,174,205,209,210,211,212,213,214,200,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,172,234,179,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,195,253,254,201,255,256,199,171,190,169,257,160,258,259,163,204,181,260,182,180,164,196,162,261,193,177,170,187,262,263,203,264,167,161,265,266,267,207,184,191,166,192,268,188,175,186,176,269,189,168,183,208,270,165,178,194,271,272,273,274,206,185,202,173,275,276,277,278,198,197,174,169,160,163,203,161,175,176,174,267,169,160,163,203,161,175,176,174,265,266,265,267,193,213,259,209,210,238,239,240,242,243,247,248,249,250,251,272,242,247,249,276,213,214,259,235,240,240,240,216,272,263,258,258,258,270,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,240,258,258,277,238,278,270,240,245,246,249,229,229,229,229,247,260,179,235,238,240,244,251,169,257,160,258,259,163,260,196,162,261,262,263,203,264,161,265,266,267,191,268,175,176,269,168,208,270,271,272,273,206,185,173,275,278,174,265,191,166,212,169,160,163,203,161,175,176,174,234,268,274,233,214,196,236,277,169,160,258,259,163,204,203,161,175,176,174,191,270,214,212,262,228,229,230,257,252,269,247,239,228,229,230,168,271,265,169,160,163,203,161,175,176,174,212,213,228,236,241,274,251,169,160,163,203,161,175,176,174,229,229,230,231,231,229,229,229,229,229,229,229,231,231,229,229,230,231,231,229,229,230,231,231,229,229,229,229,231,231,229,268,259,188,234,215,266,199,209,210,196,271,214,267,237,273,244,214,235,262,169,160,163,203,161,175,176,174,169,160,163,203,161,175,176,174,233,252,169,160,163,203,161,175,176,174,246,252,277,200,216,172,234,179,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,195,253,254,201,171,190,169,257,160,258,259,163,204,181,260,182,180,164,196,162,261,193,177,170,187,262,263,203,264,167,161,265,266,267,207,184,191,166,192,268,188,175,186,176,269,168,183,208,270,165,178,194,271,272,273,274,206,185,202,173,275,276,277,278,198,197,174,195,253,254,199,169,160,163,203,161,175,176,174,262,205,209,210,211,212,213,214,200,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,172,234,179,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,195,253,254,201,255,256,199,171,190,169,257,160,258,259,163,204,181,260,182,180,164,196,162,261,193,177,170,187,262,263,203,264,167,161,265,266,267,207,184,191,166,192,268,188,175,186,176,269,189,168,183,208,270,165,178,194,271,272,273,274,206,185,202,173,275,276,277,278,198,197,174,205,209,210,211,212,213,214,200,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,172,234,179,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,195,253,254,201,255,256,199,171,190,169,257,160,258,259,163,204,181,260,182,180,164,196,162,261,193,177,170,187,262,263,203,264,167,161,265,266,267,207,184,191,166,192,268,188,175,186,176,269,189,168,183,208,270,165,178,194,271,272,273,274,206,185,202,173,275,276,277,278,198,197,174,205,209,210,211,212,213,214,200,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,172,234,179,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,195,253,254,201,255,256,199,171,190,169,257,160,258,259,163,204,181,260,182,180,164,196,162,261,193,177,170,187,262,263,203,264,167,161,265,266,267,207,184,191,166,192,268,188,175,186,176,269,189,168,183,208,270,165,178,194,271,272,273,274,206,185,202,173,275,276,277,278,198,197,174,275,205,209,210,211,212,213,214,200,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,172,234,179,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,195,253,254,201,255,256,199,171,190,169,257,160,258,259,163,204,181,260,182,180,164,196,162,261,193,177,170,187,262,263,203,264,167,161,265,266,267,207,184,191,166,192,268,188,175,186,176,269,189,168,183,208,270,165,178,194,271,272,273,274,206,185,202,173,275,276,277,278,198,197,174,169,160,163,203,161,175,176,174,215,205,209,210,211,212,213,214,200,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,172,234,179,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,195,253,254,201,255,256,199,171,190,169,257,160,258,259,163,204,181,260,182,180,164,196,162,261,193,177,170,187,262,263,203,264,167,161,265,266,267,207,184,191,166,192,268,188,175,186,176,269,189,168,183,208,270,165,178,194,271,272,273,274,206,185,202,173,275,276,277,278,198,197,174,269,196,258,258,0,260,247,0,236,237,275,269,270,233,261,265,233,228,229,230,208,208,208,279,280,281,282,283,284,285,285,284,286,286,287,287,286,287,284,288,289,290,289,291,292,293,294,295,0,0,0,0,0,296,297,298,0,296,297,298,296,297,298,298,298,298,299,299,297,296,297,298,300,300,300,300,298,298,296,298,296,297,298,298,298,0,0,296,297,298,296,297,298,296,297,298,298,0,0,298,296,0,0,297,296,300,300,300,300,300,298,296,297,298,296,297,298,296,297,298,296,297,298,296,297,298,298,296,0,152,152,139,139,141,0,139,141,0,0,0,0,0,0,139,151,153,143,145,154,151,151,151,151,151,151,151,151,143,143,143,153,155,156,157,155,156,157,157,158,158,158,159,0,146,0,0,147,0,148,148,148,148,148,0,0,0,142,142,142,142,142,0,0,301,302,303,304,305,306,0,305,302,0,0,0,0,0,0,0,0,0,303,306,0,0,0,307,308,309,310,311,312,301,302,303,304,305,306,313,0,307,308,309,310,311,312,301,302,303,304,305,306,313,307,308,309,310,311,312,301,302,303,304,305,306,313,0,308,309,308,309,301,302,303,304,305,306,308,309,301,302,303,304,305,306,307,307,308,309,310,311,312,301,302,303,304,305,306,313,309,308,309,301,302,303,304,305,306,301,302,303,304,305,306,307,308,309,301,301,302,302,303,303,304,304,305,305,306,306,313,307,308,309,310,311,312,301,302,303,304,305,306,313,307,308,309,310,311,312,301,302,303,304,305,306,313,307,308,309,310,311,312,301,302,303,304,305,306,313,307,308,309,310,311,312,301,302,303,304,305,306,313,301,302,303,309,310,311,312,313,309,308,308,309,308,309,308,309,308,309,309,308,309,313,301,302,303,307,310,311,312,313,307,309,309,309,309,0,307,308,308,308,308,308,309,308,309,301,302,303,304,305,306,301,302,303,304,305,306,307,308,309,310,311,312,301,302,303,304,305,306,313,307,308,309,310,311,312,301,302,303,304,305,306,313,307,308,309,310,311,312,301,302,303,304,305,306,313,309,309,308,307,308,309,310,311,312,301,302,303,304,305,306,313,0,307,308,309,310,311,312,301,302,303,304,305,306,313,307,307,307,314,315,316,317,0,0,0,0,318,319,320,321,318,319,320,321,318,319,320,321,318,319,320,321,318,320,318,320,318,319,320,321,319,321,318,319,320,321,318,319,320,321,318,319,320,321,318,319,320,321,319,321,318,319,320,321,318,319,320,321,318,319,320,321,319,320,321,318,319,320,321,319,321,318,318,320,318,318,318,320,318,319,320,321,318,319,320,321,318,319,320,321,319,321,320,318,319,320,321,318,319,320,321,0,0,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,0,0,34,323,324,325,326,327,328,329,0,330,0,331,329,0,331,329,330,332,332,332,0,330,333,0,0,0,333,0,330,0,0,0,0,0,330,0,0,330,330,334,334,0,0,0,0,0,0,334,334,334,334,0,0,334,334,334,334,335,336,333,330,329,331,329,329,329,331,329,329,331,329,329,329,331,329,333,0,0,333,0,336,0,330,330,0,0,337,0,329,331,329,329,329,331,329,0,0,329,331,329,329,329,331,329,0,0,332,330,330,329,333,338,330,339,340,333,341,342,343,344,331,329,323,324,325,326,327,328,334,330,338,345,346,334,332,323,324,325,326,327,328,332,323,324,325,326,327,328,332,323,324,325,326,327,328,332,334,334,347,334,344,344,334,334,334,334,334,334,341,334,334,334,334,334,334,334,334,334,334,341,344,341,334,334,334,334,341,341,341,341,331,332,323,324,325,326,327,328,335,340,344,334,334,339,340,333,341,342,343,344,331,329,323,324,325,326,327,328,334,330,338,345,346,339,340,333,341,342,343,344,331,329,323,324,325,326,327,328,334,330,338,345,346,336,340,341,344,334,334,0,342,342,331,330,330,340,332,331,329,332,323,324,325,326,327,328,332,323,324,325,326,327,328,332,323,324,325,326,327,328,341,342,343,344,331,329,323,324,325,326,327,328,334,330,338,345,346,341,342,343,344,331,329,323,324,325,326,327,328,334,330,338,345,346,0,339,334,341,332,337,332,344,335,335,344,334,334,345,344,342,344,344,337,336,340,344,344,334,339,340,333,341,342,343,344,331,329,323,324,325,326,327,328,334,330,338,345,346,344,344,344,344,343,344,331,329,323,324,325,326,327,328,334,330,338,345,343,344,331,329,323,324,325,326,327,328,334,330,338,345,0,344,330,341,334,341,0,334,334,333,333,341,343,344,331,329,323,324,325,326,327,328,334,330,338,345,346,339,340,333,333,333,341,342,343,344,331,329,329,323,323,324,324,325,325,326,326,327,327,328,328,334,330,338,338,345,346,332,323,324,325,326,327,328,334,330,344,343,342,330,344,344,343,332,323,324,325,326,327,328,332,323,324,325,326,327,328,344,344,331,329,323,324,325,326,327,328,334,330,341,336,340,344,344,334,335,340,344,344,334,341,334,0,341,331,331,344,331,329,323,324,325,326,327,328,334,330,336,344,334,0,341,341,0,336,341,341,341,341,344,323,324,325,326,327,328,341,341,344,323,324,325,326,327,328,336,340,344,334,335,340,344,334,339,340,333,341,342,343,344,331,329,323,324,325,326,327,328,334,330,338,345,346,334,334,334,334,342,334,339,340,333,341,342,343,344,331,329,323,324,325,326,327,328,334,330,338,345,346,339,340,333,341,342,343,344,331,329,323,324,325,326,327,328,334,330,338,345,346,344,348,339,346,334,334,334,334,334,334,344,337,334,334,334,334,334,334,344,332,323,324,325,326,327,328,334,0,341,341,342,0,0,0,332,323,324,325,326,327,328,332,323,324,325,326,327,328,332,323,324,325,326,327,328,332,0,341,343,344,331,329,323,324,325,326,327,328,334,330,338,345,339,340,342,344,334,334,334,334,334,334,334,334,334,334,339,346,343,0,337,343,336,344,344,335,340,344,344,334,337,337,349,349,345,334,334,334,334,334,334,344,344,344,341,344,334,0,0,344,334,337,341,333,341,335,340,334,334,332,323,324,325,326,327,328,334,334,332,323,324,325,326,327,328,334,334,334,340,332,323,324,325,326,327,328,334,334,334,332,323,324,325,326,327,328,334,334,334,341,342,343,344,331,329,323,324,325,326,327,328,334,330,338,345,346,332,323,324,325,326,327,328,334,334,334,332,323,324,325,326,327,328,334,334,334,333,341,342,345,337,339,340,333,341,342,343,344,331,329,323,324,325,326,327,328,334,330,338,345,346,339,340,333,341,342,343,344,331,329,323,324,325,326,327,328,334,330,338,345,346,341,339,340,333,341,342,343,344,331,329,323,324,325,326,327,328,334,330,338,345,346,339,340,333,341,342,343,344,331,329,323,324,325,326,327,328,334,330,338,345,346,336,344,335,344,334,339,340,333,341,342,343,344,331,329,323,324,325,326,327,328,334,330,338,345,346,336,340,336,344,341,350,334,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,0,0,0,0,0,0,0,0,0,369,370,371,372,373,374,375,376,369,370,371,372,373,374,375,376,369,370,371,372,373,374,375,376,369,371,373,374,369,371,373,374,377,369,370,371,372,373,374,375,376,369,370,371,372,373,374,375,376,369,370,371,372,373,374,375,376,369,370,371,372,373,374,375,376,369,370,371,372,373,374,375,376,369,370,371,372,373,374,375,376,369,370,371,372,373,374,375,376,369,370,371,372,373,374,375,376,369,370,371,372,373,374,375,376,369,370,371,372,369,371,373,374,369,370,371,372,373,374,375,376,369,370,371,372,373,374,375,376,369,370,371,372,373,374,375,376,369,370,371,372,373,374,375,376,369,370,371,372,373,374,375,376,378,333,0,379,380,333,0,381,380,378,380,378,0,0,0,379,333,0,0,333,381,380,333,0,0,381,381,333,0,0,382,378,383,384,380,385,386,379,381,382,378,383,384,380,385,386,379,381,382,378,383,384,380,385,386,379,381,378,380,379,381,378,380,379,381,382,378,383,384,380,385,386,379,381,378,380,379,381,379,382,382,378,383,383,384,384,380,385,385,386,386,379,381,381,382,383,385,382,382,378,383,384,380,385,386,379,381,381,381,382,383,385,384,386,378,380,379,381,378,380,379,381,382,378,383,384,380,385,386,379,381,382,378,383,384,380,385,386,379,381,382,378,383,384,380,385,386,379,381,382,384,386,378,380,379,381,383,385,383,384,385,378,380,379,381,382,383,384,385,386,381,382,378,383,384,380,385,386,379,381,382,378,383,384,380,385,386,379,381,382,378,383,384,380,385,386,379,381,382,378,383,384,380,385,386,379,381,382,378,383,384,380,385,386,379,381,362,363,364,365,366,367,387,388,389,390,391,392,393,394,0,0,394,0,395,394,394,0,395,394,0,0,395,396,397,398,395,394,398,396,397,398,395,394,396,397,398,395,394,396,397,398,396,396,396,397,398,395,394,396,397,398,395,394,341,396,397,398,396,397,398,395,394,396,395,394,396,395,394,396,396,397,398,396,397,398,395,395,394,396,397,398,395,394,396,395,394,397,398,397,398,398,397,398,396,396,395,394,396,396,397,398,397,398,396,397,398,396,396,396,397,398,398,396,397,398,395,394,396,397,398,395,394,396,397,398,395,394,397,398,396,341,396,397,398,396,395,394,398,396,397,398,341,396,397,398,396,396,397,398,395,394,395,396,397,398,395,394,396,397,398,395,394,396,397,398,395,394,397,396,397,398,395,394,396,397,398,395,394,396,396,399,400,0,401,402,0,0,401,401,401,401,403,401,0,403,401,403,401,0,403,401,403,401,0,0,0,0,0,403,401,401,0,0,0,0,0,0,0,401,403,401,0,402,403,0,0,0,402,403,403,401,403,401,403,401,0,402,403,402,403,0,0,0,0,0,0,0,0,0,0,0,0,0,403,401,403,401,403,401,403,401,403,401,0,403,401,0,0,402,0,0,0,0,0,0,0,402,0,0,0,402,0,402,402,0,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,0,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,0,405,405,405,405,405,405,0,405,405,405,0,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,0,0,407,0,407,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,0,0,0,408,0,0,408,408,0,0,0,0,409,0,408,0,0,0,409,0,59,0,59,0,408,0,409,0,0,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,410,411,412,413,414,415,416,408,417,418,419,420,421,422,423,409,424,425,426,427,428,429,430,431,420,420,428,425,424,413,71,71,72,428,428,72,72,72,410,411,412,413,414,415,416,408,417,418,419,420,421,422,423,409,424,425,426,427,428,429,430,431,410,411,412,413,414,415,416,408,417,418,419,420,421,422,423,409,424,425,426,427,428,429,430,431,410,408,417,419,73,72,419,414,414,412,414,415,416,408,417,418,419,420,421,422,423,409,424,425,426,427,428,429,430,431,412,414,415,416,408,417,418,419,420,421,422,423,409,424,425,426,427,428,429,430,431,410,416,418,72,410,424,424,412,415,416,417,418,419,420,428,414,420,430,412,423,423,410,411,412,413,414,415,416,408,417,418,419,420,421,422,423,409,424,425,426,427,428,429,430,431,427,413,413,422,429,419,74,412,413,414,415,416,408,417,418,419,420,421,422,423,409,424,425,426,427,428,429,430,431,426,410,411,412,413,414,414,414,415,416,408,417,417,418,419,420,421,422,423,409,424,424,425,426,427,428,429,430,431,431,420,424,72,429,431,431,0,0,0,72,72,410,411,412,413,414,415,416,408,417,418,419,420,421,422,423,409,424,425,426,427,428,429,430,431,410,411,412,413,414,415,416,408,417,418,419,420,421,422,423,409,424,425,426,427,428,429,430,431,410,411,412,413,414,415,416,408,417,418,419,420,421,422,423,409,424,425,426,427,428,429,430,431,420,72,413,422,422,413,410,418,431,424,422,428,430,424,429,426,413,408,417,419,410,413,416,418,420,421,422,424,425,426,427,431,428,413,414,414,414,414,75,416,418,72,419,411,410,419,424,419,419,422,422,430,422,422,422,422,431,76,413,414,414,412,424,413,413,413,34,424,413,431,72,413,423,427,432,420,421,421,432,421,413,419,413,421,422,421,72,412,414,415,416,408,417,418,419,420,421,422,423,409,424,425,426,427,428,429,430,431,59,408,408,408,417,417,417,419,419,419,428,428,428,77,59,408,408,408,417,417,417,419,419,419,428,428,428,59,408,408,408,417,417,417,419,419,419,428,428,428,77,421,77,72,410,411,412,413,414,415,416,408,417,418,419,420,421,422,423,409,424,425,426,427,428,429,430,431,431,429,410,411,412,413,414,415,416,408,417,418,419,420,421,422,423,409,424,425,426,427,428,429,430,431,410,411,412,413,414,415,416,408,417,418,419,420,421,422,423,409,424,425,426,427,428,429,430,431,410,411,412,413,414,415,416,408,417,418,419,420,421,422,423,409,424,425,426,427,428,429,430,431,72,410,411,412,413,414,415,416,408,417,418,419,420,421,422,423,409,424,425,426,427,428,429,430,431,72,431,427,426,418,78,433,434,435,436,436,434,437,435,436,434,437,435,436,438,0,438,0,438,0,0,439,439,0,439,438,440,439,440,438,440,439,438,440,439,414,440,440,438,440,439,439,438,440,439,438,440,439,438,440,439,438,440,439,413,414,440,440,414,440,438,440,439,438,440,439,438,440,439,438,440,439,438,440,439,441,442,443,443,442,444,445,0,408,0,408,408,0,0,408,0,0,0,408,0,0,416,418,416,418,433,434,435,436,436,434,437,435,436,434,437,435,436,0,409,446,447,0,409,446,0,409,0,0,0,0,0,0,0,0,0,0,0,0,0,448,449,446,450,428,424,448,449,446,450,448,449,446,450,446,446,450,446,450,423,448,449,446,450,427,446,450,426,448,449,446,450,448,449,446,450,448,449,446,450,448,449,446,450,422,428,426,447,447,448,449,446,423,427,432,432,421,422,447,448,449,446,450,448,449,446,450,448,449,446,450,448,449,446,450,448,449,446,450,448,449,446,450,451,452,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,453,454,455,456,457,458,459,460,461,462,463,464,453,454,455,456,457,458,459,460,461,462,463,464,453,454,455,456,457,458,459,460,461,462,463,464,453,454,455,456,457,458,459,460,461,462,463,464,453,454,455,456,457,458,459,460,461,462,463,464,453,454,455,456,457,458,459,460,461,462,463,464,453,454,455,456,457,458,459,460,461,462,463,464,453,454,455,456,457,458,459,460,461,462,463,464,453,454,455,456,457,458,459,460,461,462,463,464,453,454,455,456,457,458,459,460,461,462,463,464,453,454,455,456,457,458,459,460,461,462,463,464,453,454,455,456,457,458,459,460,461,462,463,464,453,454,455,456,457,458,459,460,461,462,463,464,453,454,455,456,457,458,459,460,461,462,463,464,453,454,455,456,457,458,459,460,461,462,463,464,0,0,0,0,465,466,467,465,465,466,467,465,466,467,466,465,465,466,465,465,466,467,465,466,467,466,465,465,466,467,467,466,465,465,466,467,465,466,467,465,466,467,465,465,467,430,466,466,467,467,465,465,466,467,465,466,467,465,466,467,465,466,467,465,466,467,467,466,0,431,0,0,0,0,0,0,0,468,469,0,0,468,469,0,0,0,0,0,470,471,472,473,468,469,470,471,472,473,468,469,470,471,472,473,468,469,474,470,471,472,473,470,471,472,473,468,469,470,471,472,473,468,469,470,471,472,473,470,471,472,473,468,469,470,471,472,473,468,469,470,471,472,473,470,471,472,473,468,469,470,470,470,471,471,471,472,472,472,473,473,473,468,468,468,469,469,469,474,471,473,470,472,470,471,472,473,470,471,472,473,472,473,470,471,472,473,468,469,470,471,472,473,468,469,470,471,472,473,468,469,470,471,472,473,468,469,470,471,472,473,468,469,471,473,468,469,470,471,472,473,468,469,470,472,468,469,470,471,472,473,468,469,470,471,472,473,468,469,470,471,472,473,468,469,470,471,472,473,468,469,470,471,472,473,468,469,0,472,473,470,471,470,471,475,476,477,478,0,479,0,479,0,479,480,481,479,480,481,479,480,481,480,480,479,480,481,479,479,480,480,481,481,479,480,481,479,480,481,479,480,481,479,480,481,480,479,480,481,479,480,481,479,480,481,479,480,481,479,480,481,479,480,481,482,483,16,484,16,16,485,16,16,16,16,16,0,486,16,16,16,485,0,16,484,16,487,17,16,16,486,16,16,16,16,16,486,486,486,16,16,16,486,0,488,0,16,486,16,0,16,17,16,16,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,486,0,16,16,16,16,486,486,16,489,16,16,16,16,16,485,16,16,16,16,16,16,16,16,16,16,0,486,16,16,16,16,484,16,16,20,16,21,488,16,16,488,16,16,20,16,486,0,485,0,486,485,0,486,485,486,17,16,16,16,16,16,488,16,16,487,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,20,16,16,16,16,16,16,21,16,16,489,16,22,16,16,16,16,16,16,16,16,486,488,488,22,485,486,489,488,16,20,16,16,484,486,0,16,16,16,16,16,16,0,17,16,488,16,16,16,485,486,0,486,0,486,16,16,16,16,488,16,0,16,16,16,489,16,16,16,16,16,16,16,16,0,488,16,16,16,16,488,489,486,490,485,491,17,492,487,22,20,21,16,484,484,484,484,484,484,484,484,484,484,488,489,486,490,485,491,17,492,487,22,20,21,16,484,488,489,486,490,485,491,17,492,487,22,20,21,16,484,488,489,486,490,485,491,17,492,487,22,20,21,16,484,488,489,486,490,485,491,17,492,487,22,20,21,16,484,490,16,484,484,484,484,484,492,484,488,489,486,490,485,491,17,492,487,22,20,21,16,484,490,484,488,489,486,490,485,491,17,492,487,22,20,21,16,484,489,490,491,17,22,20,16,484,484,488,489,486,490,485,491,17,492,487,22,20,21,16,484,484,484,484,484,492,488,489,486,490,485,491,17,492,487,22,20,21,16,484,484,484,484,484,484,490,491,17,22,20,16,484,490,491,17,22,20,16,484,492,484,484,484,488,489,486,490,485,491,17,492,487,22,20,21,16,484,488,489,486,490,485,491,17,492,487,22,20,21,16,484,488,489,486,490,485,491,17,492,487,22,20,21,16,484,484,484,492,484,488,491,488,489,486,490,485,491,492,487,20,21,484,487,484,490,16,484,492,484,491,484,484,491,484,484,484,488,489,486,490,485,491,17,492,487,22,20,21,16,484,488,486,484,488,489,486,490,485,491,17,492,487,22,20,21,16,484,488,489,486,490,485,491,17,492,487,22,20,21,16,484,488,489,486,490,485,491,17,492,487,22,20,21,16,484,488,489,486,490,485,491,17,492,487,22,20,21,16,484,484,488,489,486,490,485,491,17,492,487,22,20,21,16,484,491,493,494,495,496,497,498,495,494,499,500,501,502,503,502,503,504,505,505,505,28,29,30,29,506,507,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,519,518,524,517,520,520,521,519,518,525,519,521,524,525,524,518,517,526,0,0,0,0,0,527,527,527,527,528,529,530,527,526,529,528,529,530,527,526,528,529,530,527,526,530,527,526,530,527,526,528,527,528,528,529,530,527,526,527,526,527,526,528,529,530,527,526,526,528,529,530,527,526,526,526,528,529,530,527,526,528,529,530,527,526,528,529,530,527,526,529,529,527,526,528,528,528,528,528,528,529,528,528,530,530,527,526,526,528,529,530,527,526,528,529,530,527,526,528,529,530,527,526,528,529,530,527,526,528,529,530,527,526,529,528,531,0,0,532,533,532,532,533,532,533,532,533,532,533,532,533,532,533,532,533,532,533,532,532,533,532,533,532,532,532,533,532,533,532,533,532,533,533,532,533,532,533,533,532,533,532,533,532,533,532,532,533,532,533,532,533,532,533,532,533,533,0,0,0,534,534,535,535,535,535,535,535,0,0,536,535,0,535,535,535,535,535,535,535,0,0,0,536,0,535,536,535,536,535,536,535,536,535,536,535,535,536,535,535,535,536,536,535,536,536,535,535,535,536,535,536,535,536,537,538,538,539,540,540,540,540,540,536,535,536,536,535,536,535,536,535,536,535,536,535,536,538,537,537,541,541,541,541,541,541,541,541,541,0,537,537,537,537,542,0,0,0,0,536,0,0,0,0,0,0,0,0,536,543,544,545,546,547,548,549,550,551,552,553,544,544,544,543,544,549,543,544,545,546,547,548,549,550,551,552,553,543,544,545,546,547,548,549,550,551,552,553,544,544,547,549,550,551,552,553,547,549,550,551,552,553,550,552,553,546,543,544,548,551,544,543,544,545,546,547,548,549,550,551,552,553,543,544,548,550,552,553,549,550,552,553,549,550,552,553,551,0,544,544,549,550,551,551,552,553,543,543,544,545,546,547,548,549,550,551,552,553,543,544,544,544,544,544,544,549,550,552,553,544,544,544,544,544,544,544,549,550,552,553,543,544,543,543,543,544,545,546,547,548,549,550,551,552,553,543,544,545,546,547,548,549,550,551,552,553,543,544,545,546,547,548,549,550,551,552,553,543,544,544,544,544,544,551,549,550,550,549,552,553,543,544,546,548,543,543,550,552,553,550,543,544,544,544,543,549,551,543,543,546,546,543,550,544,544,544,544,544,547,543,544,543,543,544,543,543,543,543,543,543,543,543,543,543,543,544,544,543,543,543,543,543,544,543,549,550,544,547,549,550,551,552,553,551,544,543,544,545,546,547,548,549,550,551,552,553,543,544,545,546,547,548,549,550,551,552,553,543,544,545,546,547,548,549,550,551,552,553,543,544,545,546,547,548,549,550,551,552,553,543,544,545,546,547,548,549,550,551,552,553,544,0,550,544,545,543,543,544,544,544,543,543,543,544,543,544,544,544,542,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,555,554,0,0,0,0,554,554,554,554,554,554,554,554,554,0,0,0,0,556,554,554,555,555,555,555,555,554,554,555,554,554,555,554,554,554,0,0,554,554,554,554,554,0,0,0,554,554,554,0,554,554,0,554,555,554,554,554,0,0,0,0,0,0,554,0,554,0,0,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,0,0,554,554,554,554,554,554,554,554,554,554,554,554,554,554,555,554,554,554,554,554,554,554,554,0,0,555,0,0,0,0,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,0,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,0,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,0,554,0,0,554,0,554,0,0,0,554,0,554,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,554,554,554,554,554,554,554,554,554,0,554,554,0,554,554,0,0,0,0,0,0,0,554,554,554,554,554,554,555,555,555,555,554,554,555,554,554,554,554,554,554,554,554,554,0,554,0,554,554,554,554,554,554,555,555,555,555,555,555,555,555,554,554,554,555,555,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,555,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,557,554,0,0,0,0,554,555,555,555,554,554,554,554,0,0,554,554,0,0,0,0,0,0,558,558,0,0,0,0,0,0,0,0,0,0,0,0,0,0,558,0,558,0,0,0,0,0,0,0,558,558,0,0,558,558,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,558,558,558,558,558,558,558,558,558,0,0,558,0,0,0,0,0,0,558,0,0,0,0,0,0,0,0,0,0,0,0,558,0,559,559,559,0,0,559,0,559,559,0,559,559,560,560,560,559,559,559,554,0,0,0,0,0,0,0,559,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,558,558,558,0,0,0,0,0,0,0,0,0,0,0,558,558,558,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,558,558,558,558,558,558,558,0,0,0,558,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,554,554,0,554,0,554,554,554,0,0,0,0,0,554,554,554,554,554,554,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,554,0,554,554,554,554,0,0,0,554,555,554,554,554,554,555,554,554,554,554,554,554,554,554,554,0,0,554,0,554,0,554,554,0,554,0,554,554,0,554,554,554,554,554,0,0,554,554,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,554,554,554,0,554,0,0,554,554,555,554,554,554,0,554,554,554,554,554,0,554,0,0,0,554,0,0,554,554,0,554,554,554,554,554,554,554,554,554,554,554,554,555,554,554,554,554,554,554,554,561,562,561,562,561,562,561,561,562,561,562,561,562,561,562,561,562,561,562,561,562,561,562,561,562,561,562,561,562,0,0,0,0,561,561,562,561,562,561,562,561,562,561,562,561,562,561,562,561,561,562,561,562,561,562,561,562,561,562,561,562,561,562,561,562,561,562,561,562,561,561,562,561,562,561,562,561,562,561,562,561,562,561,562,561,562,561,562,561,562,561,562,561,562,561,562,0,0,0,0,0,0,0,0,0,0,0,0,0,561,562,561,562,561,562,561,562,561,562,0,561,562,561,562,0,0,0,0,561,562,561,562,561,562,561,562,561,561,562,561,562,561,562,561,562,561,562,561,562,561,562,561,562,561,562,561,562,0,554,554,554,554,554,554,554,0,554,554,554,554,554,554,563,563,563,0,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,563,0,563,563,563,563,563,563,563,563,563,0,0,563,563,563,563,563,563,563,563,563,563,563,563,0,554,554,0,554,554,554,554,554,554,554,554,554,554,554,554,0,555,554,0,0,0,554,555,554,554,554,554,554,554,554,554,554,554,554,554,554,555,555,555,555,555,554,557,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,0,554,554,554,554,554,554,554,554,0,0,0,0,554,554,554,554,554,554,554,0,554,554,554,554,554,554,554,554,0,0,0,554,0,554,554,0,0,554,0,0,0,0,554,554,555,555,555,554,554,554,554,554,554,554,554,554,0,554,554,554,554,0,554,0,554,0,554,0,554,0,554,554,554,554,554,0,0,554,554,554,554,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,554,554,554,554,0,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,0,0,554,554,554,554,554,554,0,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,0,0,564,564,564,0,0,0,564,564,0,564,564,0,564,564,0,0,0,564,564,564,564,564,564,0,564,564,564,564,564,564,564,564,564,564,564,0,564,564,564,564,0,564,564,564,564,564,564,564,564,564,564,564,564,564,0,564,564,564,564,564,564,564,564,564,564,564,0,564,564,564,564,564,0,0,0,0,0,0,0,0,554,554,554,554,554,554,554,554,554,554,554,554,554,554,0,0,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,0,554,554,554,554,0,0,0,0,554,554,554,554,554,554,0,0,0,0,0,0,0,0,0,0,0,0,554,554,554,554,554,0,0,0,0,0,554,554,0,554,554,0,0,0,0,0,0,0,0,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,0,0,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,0,0,0,0,0,554,0,0,0,0,0,0,0,0,554,0,0,0,0,0,0,0,554,554,554,0,0,0,0,0,0,0,0,0,0,554,554,554,554,554,554,554,554,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,554,554,554,554,0,0,0,0,0,0,0,0,554,0,0,0,0,0,0,554,554,554,554,554,554,0,0,554,554,0,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,0,0,0,0,0,0,0,554,554,554,554,554,554,554,554,554,0,556,0,554,554,554,554,554,554,554,554,0,554,554,554,554,0,0,0,0,554,554,0,554,554,554,554,554,554,554,554,554,0,0,0,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,0,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,554,0,554,554,554,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,565,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,556,644,554,645,646,647,648,649,650,651,587,588,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,559,560,735,736,737,738,739,740,741,564,742,743,744,745,746,747,748,749,750,751,555,752,753,754,755,756,757,758,759,760,761,558,566,567,568,569,565,762,763,764,765,570,571,572,573,574,575,585,766,767,576,586,577,578,579,580,581,582,583,584,557,563,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,561,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,562,565,741,721,709,676,771,706,732,776,782,783,783,785,785,785,770,697,697,645,707,720,740,740,740,740,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,740,740,740,740,740,740,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,740,740,740,740,740,740,740,740,699,706,802,802,667,565,585,586,699,712,713,803,610,610,610,610,610,610,707,723,723,723,732,723,732,694,723,732,767,584,762,679,683,724,679,683,725,724,688,712,713,688,712,713,712,713,723,732,711,711,711,695,711,717,696,730,694,701,776,782,783,798,783,696,711,730,725,725,800,800,723,723,800,800,587,588,652,732,733,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,556,644,554,645,646,647,648,649,650,651,587,588,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,559,560,735,736,737,738,739,740,741,564,742,743,744,745,746,747,748,749,750,751,555,752,753,754,755,756,757,758,759,760,761,558,566,567,568,569,565,762,763,764,765,570,571,572,573,574,575,585,766,767,576,586,577,578,579,580,581,582,583,584,557,563,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,561,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,562,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,556,644,554,645,646,647,648,649,650,651,587,588,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,559,560,735,736,737,738,739,740,741,564,742,743,744,745,746,747,748,749,750,751,555,752,753,754,755,756,757,758,759,760,761,558,566,567,568,569,565,762,763,764,765,570,571,572,573,574,575,585,766,767,576,586,577,578,579,580,581,582,583,584,557,563,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,561,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,562,787,788,645,647,579,581,698,698,711,711,641,642,707,802,704,735,770,681,682,683,685,686,684,686,687,686,686,714,726,727,731,772,773,774,702,716,716,735,735,579,581,583,645,645,696,730,732,758,759,760,752,585,578,641,642,645,707,785,707,785,707,785,644,645,646,647,648,649,650,651,587,588,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,559,560,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,566,567,568,569,565,762,763,764,765,570,571,572,573,574,575,585,766,767,576,586,577,578,579,580,581,582,583,584,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,644,645,646,647,648,649,650,651,587,588,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,559,560,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,566,567,568,569,565,762,763,764,765,570,571,572,573,574,575,585,766,767,576,586,577,578,579,580,581,582,583,584,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,795,747,694,645,651,723,725,732,784,730,744,744,745,675,678,679,683,679,683,679,683,785,702,794,804,645,645,795,806,753,708,656,658,663,741,645,645,795,806,807,794,795,802,675,799,799,799,799,809,723,768,742,746,707,707,650,708,711,755,756,610,690,740,566,567,568,569,565,762,763,764,765,570,571,572,573,574,575,585,766,767,576,586,577,578,579,580,581,582,583,584,706,694,750,768,714,726,727,731,693,695,711,717,730,732,784,694,699,706,644,741,645,565,644,588,653,657,690,579,580,581,680,681,682,683,684,685,686,687,688,689,690,691,752,755,675,567,568,569,765,585,767,586,578,579,580,581,582,583,584,784,706,736,646,647,648,649,650,651,587,588,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,680,681,682,683,684,685,686,687,688,689,690,691,694,708,576,577,578,579,580,581,582,583,584,804,805,806,807,808,809,810,811,785,723,732,793,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,556,644,554,645,646,647,648,649,650,651,587,588,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,559,560,735,736,737,738,739,740,741,564,742,743,744,745,746,747,748,749,750,751,555,752,753,754,755,756,757,758,759,760,761,558,566,567,568,569,565,762,763,764,765,570,571,572,573,574,575,585,766,767,576,586,577,578,579,580,581,582,583,584,557,563,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,561,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,562,675,746,658,666,584,688,584,584,762,566,585,586,684,610,684,728,738,646,647,648,649,650,651,587,588,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,559,560,735,736,739,740,741,752,753,754,755,756,757,758,759,760,761,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,645,655,648,587,654,659,662,663,668,673,579,581,583,584,723,688,683,684,761,579,581,579,581,767,584,708,576,577,578,579,580,581,582,583,584,645,694,695,696,706,703,708,576,577,578,579,580,581,582,583,584,709,738,706,707,707,771,691,703,703,686,682,682,682,682,663,686,682,687,682,686,682,675,682,701,724,734,574,586,577,579,580,583,584,644,644,645,646,647,648,649,650,651,587,588,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,559,560,735,736,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,566,567,568,569,565,762,763,764,765,570,571,572,573,574,575,585,766,767,576,586,577,578,579,580,581,582,583,584,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,653,581,645,707,726,727,714,731,707,650,711,728,640,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,556,644,554,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,645,646,646,646,647,647,647,648,648,648,649,649,649,650,650,650,651,651,651,587,587,587,588,588,588,652,652,652,653,653,653,654,654,654,655,655,655,656,656,656,657,657,657,658,658,658,659,659,659,660,660,660,661,661,661,662,662,662,663,663,663,664,664,664,665,665,665,666,666,666,667,667,667,668,668,668,669,669,669,670,670,670,671,671,671,672,672,672,673,673,673,674,674,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,708,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,559,560,735,736,737,738,739,740,740,740,740,740,740,740,741,564,742,743,744,745,746,747,748,749,750,751,555,752,753,754,755,756,757,758,759,760,761,558,566,567,568,569,565,762,763,764,765,570,571,572,573,574,575,585,766,767,576,586,577,578,579,580,581,582,583,584,557,563,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,561,792,793,794,795,796,797,798,799,800,801,802,803,804,804,804,805,805,805,806,806,806,807,807,807,808,808,808,809,809,809,810,810,810,811,811,811,562,673,711,707,645,675,678,740,740,741,740,645,713,772,773,774,679,683,645,707,785,645,701,776,782,783,798,783,696,711,730,725,725,679,683,689,579,581,637,678,610,793,793,793,793,743,748,587,588,652,656,658,669,694,697,711,719,724,732,733,750,775,792,793,797,800,803,804,807,710,724,734,734,734,734,734,754,758,759,784,793,610,751,796,574,675,678,577,734,781,734,761,754,610,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,556,644,554,645,646,647,648,649,650,651,587,588,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,559,560,735,736,737,738,739,740,741,564,742,743,744,745,746,747,748,749,750,751,555,752,753,754,755,756,757,758,759,760,761,558,566,567,568,569,565,762,763,764,765,570,571,572,573,574,575,585,766,767,576,586,577,578,579,580,581,582,583,584,557,563,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,561,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,562,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,556,644,554,645,646,647,648,649,650,651,587,588,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,559,560,735,736,737,738,739,740,741,564,742,743,744,745,746,747,748,749,750,751,555,752,753,754,755,756,757,758,759,760,761,558,566,567,568,569,565,762,763,764,765,570,571,572,573,574,575,585,766,767,576,586,577,578,579,580,581,582,583,584,557,563,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,561,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,562,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,556,644,554,645,646,647,648,649,650,651,587,588,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,559,560,735,736,737,738,739,740,741,564,742,743,744,745,746,747,748,749,750,751,555,752,753,754,755,756,757,758,759,760,761,558,566,567,568,569,565,762,763,764,765,570,571,572,573,574,575,585,766,767,576,586,577,578,579,580,581,582,583,584,557,563,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,561,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,562,665,707,645,712,678,712,713,689,661,660,683,684,689,690,678,572,645,678,725,644,573,571,762,679,683,679,683,699,712,691,691,713,712,691,691,786,788,800,709,738,753,758,759,760,707,707,762,679,683,679,683,679,683,748,658,666,703,757,645,675,696,732,645,732,645,638,624,763,764,765,763,764,765,790,573,724,706,706,706,710,724,705,675,681,682,715,705,694,710,724,689,650,694,792,803,804,573,724,706,706,706,710,724,675,681,682,694,710,724,655,658,666,757,610,610,610,610,610,610,795,795,653,657,573,575,581,797,806,807,793,794,795,715,766,679,683,689,579,581,645,737,694,792,803,804,706,771,677,688,704,751,754,566,585,793,795,802,803,795,802,793,675,802,714,726,727,731,772,773,774,795,745,794,795,802,746,694,646,647,648,649,650,651,587,588,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,739,740,752,753,754,755,756,757,758,759,760,761,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,644,740,651,568,640,771,751,728,794,795,645,794,797,803,802,797,795,801,748,686,691,571,752,754,755,585,578,610,684,577,682,678,682,682,682,572,678,686,686,682,686,678,637,687,687,575,682,686,796,682,640,573,574,693,711,681,681,681,554,564,555,558,557,563,561,562,720,781,806,808,794,797,802,803,587,652,662,668,723,732,672,777,778,789,777,778,789,789,645,701,649,588,652,664,668,796,799,799,799,799,706,610,688,638,678,688,701,776,750,648,649,707,785,785,736,749,797,757,689,803,640,706,645,671,672,582,808,810,809,810,801,679,683,741,678,769,796,580,699,747,676,624,691,578,701,776,782,783,798,783,696,711,730,725,725,746,565,645,785,610,610,681,683,684,681,683,684,663,655,671,672,700,700,645,573,655,567,567,567,786,788,647,653,660,665,694,732,579,581,583,584,804,694,694,694,579,581,584,579,581,584,797,804,806,807,797,647,653,660,665,581,723,732,694,695,717,730,732,574,747,645,670,671,672,645,645,566,646,647,648,649,650,651,587,588,652,653,654,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,680,681,682,683,684,685,686,687,688,689,690,691,708,576,577,578,579,580,581,582,583,584,804,805,806,807,808,809,810,811,742,646,647,648,649,650,651,587,588,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,680,681,682,683,684,685,686,687,688,689,690,691,708,576,577,578,579,580,581,582,583,584,804,805,806,807,808,809,810,811,675,740,740,740,733,721,750,798,804,637,690,610,570,571,572,573,574,575,578,579,580,581,583,584,720,733,647,651,653,660,665,667,674,685,571,808,810,766,707,738,736,741,795,804,806,743,749,805,806,807,808,809,810,811,647,653,660,665,707,785,691,637,678,671,672,735,707,647,653,660,665,667,670,671,672,680,681,682,683,684,685,686,687,688,689,690,691,729,756,576,577,578,579,580,581,582,583,584,794,795,797,800,801,804,808,809,810,811,644,645,646,647,648,649,650,651,587,588,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,559,560,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,566,567,568,569,565,762,763,764,765,570,571,572,573,574,575,585,766,767,576,586,577,578,579,580,581,582,583,584,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,644,748,787,788,800,583,800,800,800,800,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,556,644,554,645,646,647,648,649,650,651,587,588,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,559,560,735,736,737,738,739,740,741,564,742,743,744,745,746,747,748,749,750,751,555,752,753,754,755,756,757,758,759,760,761,558,566,567,568,569,565,762,763,764,765,570,571,572,573,574,575,585,766,767,576,586,577,578,579,580,581,582,583,584,557,563,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,561,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,562,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,556,644,554,645,646,647,648,649,650,651,587,588,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,559,560,735,736,737,738,739,740,741,564,742,743,744,745,746,747,748,749,750,751,555,752,753,754,755,756,757,758,759,760,761,558,566,567,568,569,565,762,763,764,765,570,571,572,573,574,575,585,766,767,576,586,577,578,579,580,581,582,583,584,557,563,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,561,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,562,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,556,644,554,645,646,647,648,649,650,651,587,588,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,559,560,735,736,737,738,739,740,741,564,742,743,744,745,746,747,748,749,750,751,555,752,753,754,755,756,757,758,759,760,761,558,566,567,568,569,565,762,763,764,765,570,571,572,573,574,575,585,766,767,576,586,577,578,579,580,581,582,583,584,557,563,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,561,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,562,707,707,645,646,647,648,649,650,651,587,588,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,680,681,682,683,684,685,686,687,688,689,690,691,708,743,749,754,784,804,805,806,807,808,809,810,811,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,556,644,554,645,646,647,648,649,650,651,587,588,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,559,560,735,736,737,738,739,740,741,564,742,743,744,745,746,747,748,749,750,751,555,752,753,754,755,756,757,758,759,760,761,558,566,567,568,569,565,762,763,764,765,570,571,572,573,574,575,585,766,767,576,586,577,578,579,580,581,582,583,584,557,563,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,561,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,562,678,645,691,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,556,644,554,645,646,647,648,649,650,651,587,588,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,559,560,735,736,737,738,739,740,741,564,742,743,744,745,746,747,748,749,750,751,555,752,753,754,755,756,757,758,759,760,761,558,566,567,568,569,565,762,763,764,765,570,571,572,573,574,575,585,766,767,576,586,577,578,579,580,581,582,583,584,557,563,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,561,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,562,754,793,793,793,579,580,720,728,573,588,764,796,743,744,748,750,645,730,732,696,725,730,693,624,678,682,582,694,737,587,588,652,656,658,669,694,697,699,711,719,724,732,733,750,775,792,793,797,800,803,804,807,710,724,723,724,732,646,647,648,649,650,651,587,588,652,653,654,656,657,659,660,661,662,664,665,667,668,669,670,673,674,688,804,805,806,807,808,809,810,811,734,747,647,587,588,652,653,656,658,659,660,665,668,697,718,719,724,729,732,733,739,769,775,779,780,797,803,807,722,722,0,0,772,773,774,775,647,653,660,665,0,645,750,0,680,681,682,683,684,685,686,687,688,689,690,691,711,645,645,645,645,645,645,645,645,645,647,587,588,652,653,656,658,659,660,665,668,697,718,719,724,729,732,733,739,769,775,779,780,786,797,803,807,722,722,772,773,774,775,647,653,660,665,750,732,0,812,813,0,0,814,0,535,535,535,535,535,535,0,815,0,0,816,0,0,0,0,0,0,0,814,535,0,535,0,817,816,535,0,535,813,0,817,812,813,817,814,535,0,818,812,535,535,0,816,818,818,535,0,0,0,816,0,819,820,821,822,817,823,814,824,825,826,827,828,818,829,812,816,813,826,819,820,821,822,817,823,814,824,825,826,827,828,818,829,812,816,813,819,820,821,822,817,823,814,824,825,826,827,828,818,829,812,816,813,827,828,0,821,825,814,824,827,828,818,829,816,814,824,827,828,818,829,816,814,824,825,826,826,822,822,819,820,821,822,817,823,814,824,825,826,827,828,818,829,812,816,813,821,822,814,824,818,814,824,823,814,824,825,826,827,828,818,829,812,816,813,829,819,820,821,822,817,823,814,824,825,826,827,828,818,829,812,812,816,813,827,814,814,821,824,820,821,0,826,829,0,829,829,819,820,821,822,817,823,814,824,825,826,827,828,818,829,812,816,813,819,820,821,822,817,823,814,824,825,826,827,828,818,829,812,816,813,819,820,821,822,817,823,814,824,825,826,827,828,818,829,812,816,813,816,0,827,828,0,0,824,819,820,822,823,824,827,814,822,823,821,827,828,821,826,821,821,820,819,820,819,820,820,820,820,823,814,824,827,828,818,829,816,827,828,819,820,821,822,817,823,814,824,825,826,827,828,818,829,812,816,813,819,820,821,822,817,823,814,824,825,826,827,828,818,829,812,816,813,819,820,821,822,817,823,814,824,825,826,827,828,818,829,812,816,813,819,820,821,822,817,823,814,824,825,826,827,828,818,829,812,816,813,819,820,821,822,817,823,814,824,825,826,827,828,818,829,812,816,813,826,821,821,0,826,825,826,825,830,831,832,833,0,0,834,835,834,835,834,835,834,835,834,835,834,835,834,835,834,835,835,834,835,834,835,834,835,834,835,834,835,834,835,836,836,836,0,0,0,836,836,837,838,836,837,838,836,837,838,836,838,836,838,837,838,836,837,838,836,836,836,837,838,836,837,838,837,836,837,838,836,837,838,836,837,838,838,838,838,838,837,837,837,836,838,836,837,838,836,837,838,836,837,838,836,837,838,836,837,838,838,838,839,839,839,0,840,841,839,839,839,839,842,839,0,843,839,841,839,839,840,0,839,839,839,839,0,842,843,839,839,839,839,839,839,839,839,839,841,839,839,839,839,839,839,0,0,839,839,839,0,0,0,0,839,839,844,841,845,846,847,848,839,840,843,842,848,844,844,841,845,846,847,848,839,840,843,842,844,841,845,846,847,848,839,840,843,842,847,845,846,847,848,839,840,843,842,845,846,847,848,839,840,843,842,846,844,848,847,848,839,842,844,841,845,846,847,848,839,840,843,842,844,844,846,846,839,840,843,842,846,839,844,841,841,845,846,847,848,839,840,843,842,844,844,841,845,846,847,847,848,839,840,843,842,845,844,848,846,839,846,839,844,844,844,848,844,841,845,846,847,848,839,840,843,842,844,841,845,846,847,848,839,840,843,842,844,841,845,846,847,848,839,840,843,842,844,844,848,848,848,846,840,844,847,844,844,846,848,844,844,844,844,844,848,844,844,844,844,844,844,844,844,844,844,844,844,844,844,844,844,844,844,844,841,848,845,846,847,848,839,840,843,842,841,848,844,841,845,846,847,848,839,840,843,842,844,841,845,846,847,848,839,840,843,842,844,841,845,846,847,848,839,840,843,842,844,841,845,846,847,848,839,840,843,842,844,841,845,846,847,848,839,840,843,842,848,844,844,847,848,847,847,847,847,847,847,847,847,847,847,847,847,847,847,847,847,847,847,847,847,847,847,844,844,844,844,849,850,851,851,851,851,852,853,2,16,16,16,0,0,16,0,16,16,16,16,16,16,16,0,408,16,16,17,16,16,16,0,16,16,0,16,16,3,408,16,16,16,0,16,16,0,408,16,17,0,16,0,16,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,409,0,16,16,16,16,16,18,0,16,3,16,16,16,16,16,16,16,16,16,16,16,16,16,16,19,16,16,16,16,16,16,20,16,408,21,16,16,16,16,20,16,0,19,19,0,19,17,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,20,3,16,16,16,16,0,0,0,16,16,409,21,0,59,16,16,0,59,16,0,22,16,18,16,408,16,16,16,16,16,16,0,0,0,22,16,409,20,16,0,16,0,0,59,0,0,16,16,0,0,0,0,16,16,16,16,0,0,0,0,0,0,0,0,0,0,17,16,0,16,16,16,0,0,0,0,16,16,0,16,16,16,0,0,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,16,16,16,16,0,0,0,0,0,0,0,0,0,9,10,428,424,71,71,72,72,72,72,0,73,72,414,9,416,418,72,10,423,23,427,23,74,426,10,72,431,0,0,0,72,10,10,10,11,9,72,72,413,422,428,430,10,426,414,75,11,416,418,72,9,9,9,10,76,414,11,34,72,423,427,432,432,9,421,422,72,59,77,59,59,77,77,72,10,72,9,10,72,10,78,13,14,15,24,25,26,27,26,26,24,25,28,29,30,29,433,434,435,436,436,434,437,435,436,434,437,435,436,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,854,855,854,855,0,0,0,0,856,854,857,858,855,858,856,854,857,858,855,856,854,857,858,855,856,856,856,854,857,858,855,856,854,857,858,855,856,854,854,854,857,858,855,855,855,854,856,854,857,858,855,856,854,857,858,855,856,854,857,858,855,857,856,858,859,856,856,859,858,856,857,860,858,856,854,857,858,855,856,854,857,858,855,856,854,857,858,855,856,854,857,858,855,856,854,857,858,855,861,862,863,864],"f":[null,[[["size",6,["u32","scaled"]],["u32",15],["size",6,["u32"]],["scaled",6]]],null,[[["into",8,["persistenttilesource"]],["u32",15],["option",4],["point",6,["u32"]],["persistenttilesource",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["f32",15],["points",3],["scale",3,["f32","scaled","points"]],["scaled",3]]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["redrawrequester",3]],[[],["windowhandle",3]],[[]],[[]],[[["windowhandle",3]],[["result",4,["closeresponse","error"]],["closeresponse",4],["error",4]]],[[],["bool",15]],[[],["windowbuilder",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["duration",3]]],[[["instant",3]]],null,[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[["error",3]],["error",4]],[[["error",4]],["error",4]],[[]],[[]],[[]],[[]],[[],["windowbuilder",3]],[[],[["option",4,["point"]],["point",3,["i32","pixels"]]]],[[],[["size",3,["u32","points"]],["u32",15],["points",3]]],[[],["theme",4]],[[]],[[]],[[["redrawrequester",3],["windowhandle",3],["target",3]],[["result",4,["error"]],["error",4]]],[[],[["point",3,["i32","pixels"]],["i32",15],["pixels",3]]],[[],[["pixels",3],["size",3,["u32","pixels"]],["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["runtime",3]],[[]],[[["windowbuilder",3]]],[[],["usize",15]],[[],[["point",3,["i32","pixels"]],["i32",15],["pixels",3]]],null,[[["inputevent",3],["windowhandle",3],["redrawstatus",3],["target",3]],[["result",4,["error"]],["error",4]]],[[["windowhandle",3],["redrawstatus",3],["target",3],["char",15]],[["result",4,["error"]],["error",4]]],[[],["redrawrequester",3]],[[["windowhandle",3],["redrawstatus",3],["target",3]],[["result",4,["error"]],["error",4]]],[[]],[[]],[[],["bool",15]],[[]],[[["windowbuilder",3]]],[[["bool",15]]],[[["u32",15],["pixels",3],["size",3,["u32","pixels"]]]],[[["bool",15]]],[[["bool",15]]],[[]],[[]],[[["point",3,["i32","pixels"]],["i32",15],["pixels",3]]],[[["str",15]]],[[],["bool",15]],[[],[["option",4,["error"]],["error",8]]],[[]],[[],[["option",4,["u16"]],["u16",15]]],[[["duration",3]]],[[]],[[]],[[],["string",3]],[[],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["windowhandle",3],["redrawstatus",3],["target",3]],[["result",4,["error"]],["error",4]]],[[],["bool",15]],[[],["string",3]],[[["bool",15]],["windowbuilder",3]],[[["bool",15]],["windowbuilder",3]],[[["icon",3]],["windowbuilder",3]],[[["theme",4]],["windowbuilder",3]],[[["bool",15]],["windowbuilder",3]],[[["point",3,["i32","pixels"]],["i32",15],["pixels",3]],["windowbuilder",3]],[[["bool",15]],["windowbuilder",3]],[[["size",3,["u32","points"]],["u32",15],["points",3]],["windowbuilder",3]],[[],["windowbuilder",3]],[[["bool",15]],["windowbuilder",3]],[[["bool",15]],["windowbuilder",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["eventstatus",4]],[[],["inputevent",3]],[[],["event",4]],[[]],[[]],[[]],[[],["eventstatus",4]],null,[[]],[[]],[[]],[[["eventstatus",4]],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["eventstatus",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["f32",15],["points",3],["scale",3,["f32","scaled","points"]],["scaled",3]]],[[],["bool",15]],[[["windowhandle",3]],[["result",4,["closeresponse","error"]],["closeresponse",4],["error",4]]],[[],["bool",15]],null,null,[[],["windowbuilder",3]],[[],[["option",4,["point"]],["point",3,["i32","pixels"]]]],[[],[["size",3,["u32","points"]],["u32",15],["points",3]]],[[],["theme",4]],[[]],[[["redrawrequester",3],["windowhandle",3],["target",3]],[["result",4,["error"]],["error",4]]],[[],["bool",15]],[[],["usize",15]],[[["inputevent",3],["windowhandle",3],["redrawstatus",3],["target",3]],[["result",4,["error"]],["error",4]]],[[["windowhandle",3],["redrawstatus",3],["target",3],["char",15]],[["result",4,["error"]],["error",4]]],[[["windowhandle",3],["redrawstatus",3],["target",3]],[["result",4,["error"]],["error",4]]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4,["u16"]],["u16",15]]],[[],["bool",15]],[[["windowhandle",3],["redrawstatus",3],["target",3]],[["result",4,["error"]],["error",4]]],[[],["bool",15]],[[],["string",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["f32",15]],[[],["f32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["color",3]],[[]],[[["f32",15]],["color",3]],[[],["color",3]],[[]],[[]],[[]],[[["color",3]],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],null,[[]],[[["srgb",3],["rgb",3,["srgb"]]],["color",3]],[[["rgba",3]],["color",3]],[[["alpha",3,["rgb"]],["rgb",3,["srgb"]]],["color",3]],[[]],[[["error",4]],["error",4]],[[["imageerror",4]],["error",4]],[[]],[[],["f32",15]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["f32",15]],["color",3]],null,[[["color",3]],["bool",15]],[[["f32",15]],["color",3]],null,[[],["f32",15]],[[["sceneevent",4],["renderer",3],["receiver",3,["sceneevent"]]]],[[]],[[["atomicbool",3],["sceneevent",4],["receiver",3,["sceneevent"]],["renderer",3],["arc",3,["atomicbool"]]]],null,null,[[]],[[],[["option",4,["error"]],["error",8]]],null,null,null,[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["bool",15]],[[["f32",15]],["color",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15]],["bindgroupentry",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15],["sizedrect",3,["u32","pixels"]],["pixels",3],["commandencoder",3]]],[[["device",3],["commandencoder",3]]],[[["device",3],["commandencoder",3]]],[[["device",3],["i32",15],["commandencoder",3],["sizedrect",3,["i32","pixels"]],["pixels",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["size",3]],[[],["point",3]],[[],["vector",3]],[[["figure",3]],["bool",15]],[[["rect",4]],["bool",15]],[[["sizedrect",3]],["bool",15]],[[["extentsrect",3]],["bool",15]],[[["size",3]],["bool",15]],[[["point",3]],["bool",15]],[[["vector",3]],["bool",15]],[[["figure",3]],["bool",15]],[[["rect",4]],["bool",15]],[[["sizedrect",3]],["bool",15]],[[["extentsrect",3]],["bool",15]],[[["size",3]],["bool",15]],[[["point",3]],["bool",15]],[[["vector",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["angle",4]]],[[["figure",3]]],[[]],[[["size",3]]],[[["vector",3]]],[[["vector",3]]],[[["point",3]]],[[["size",3]]],[[["size",3]]],[[["vector",3]]],[[["angle",4]]],[[]],[[["figure",3]]],[[["size",3]]],[[["vector",3]]],[[["point",3]]],[[["size",3]]],[[["vector",3]]],[[["vector",3]]],[[["size",3]]],[[],[["scale",3,["scaled","points"]],["points",3],["scaled",3]]],[[],["bool",15]],[[["figure",3]],["bool",15]],[[["rect",4]],["bool",15]],[[["sizedrect",3]],["bool",15]],[[["extentsrect",3]],["bool",15]],[[["size",3]],["bool",15]],[[["point",3]],["bool",15]],[[["vector",3]],["bool",15]],[[],["bool",15]],[[],["figure",3]],[[],["figure",3]],[[],["extentsrect",3]],[[],["extentsrect",3]],[[],["extentsrect",3]],[[],["extentsrect",3]],[[],["rect",4]],[[],["rect",4]],[[],["rect",4]],[[],["rect",4]],[[],["sizedrect",3]],[[],["sizedrect",3]],[[],["sizedrect",3]],[[],["sizedrect",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["rect",4]],[[],["sizedrect",3]],[[],["extentsrect",3]],[[],["size",3]],[[],["point",3]],[[],["vector",3]],[[],["figure",3]],[[],["rect",4]],[[],["sizedrect",3]],[[],["extentsrect",3]],[[],["size",3]],[[],["point",3]],[[],["vector",3]],[[]],[[],["figure",3]],[[],["rect",4]],[[],["sizedrect",3]],[[],["extentsrect",3]],[[],["size",3]],[[],["point",3]],[[],["vector",3]],[[],["point",3]],[[],["angle",4]],[[],["points",3]],[[],["pixels",3]],[[],["scaled",3]],[[],["displayscale",3]],[[],["figure",3]],[[],["rect",4]],[[],["sizedrect",3]],[[],["extentsrect",3]],[[],["scale",3]],[[],["size",3]],[[],["point",3]],[[],["vector",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["points",3]],["ordering",4]],[[["pixels",3]],["ordering",4]],[[["scaled",3]],["ordering",4]],[[["figure",3]],["ordering",4]],[[["scale",3]],["ordering",4]],[[["point",3]],["bool",15]],[[],["angle",4]],[[],["points",3]],[[],["pixels",3]],[[],["scaled",3]],[[],["figure",3]],[[],["rect",4]],[[],["sizedrect",3]],[[],["extentsrect",3]],[[],["size",3]],[[],["point",3]],[[],["vector",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[],[["result",4,["angle"]],["angle",4]]],[[],[["result",4,["points"]],["points",3]]],[[],[["pixels",3],["result",4,["pixels"]]]],[[],[["scaled",3],["result",4,["scaled"]]]],[[],[["result",4,["figure"]],["figure",3]]],[[],[["rect",4],["result",4,["rect"]]]],[[],[["sizedrect",3],["result",4,["sizedrect"]]]],[[],[["result",4,["extentsrect"]],["extentsrect",3]]],[[],[["result",4,["scale"]],["scale",3]]],[[],[["size",3],["result",4,["size"]]]],[[],[["result",4,["point"]],["point",3]]],[[],[["vector",3],["result",4,["vector"]]]],[[]],[[["scale",3]]],[[["figure",3]]],[[["scale",3]]],[[["scale",3]]],[[["scale",3]]],[[["scale",3]]],[[]],[[]],[[["scale",3]]],[[["scale",3]]],[[]],[[]],[[["figure",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["points",3],["pixels",3],["scale",3,["points","pixels"]]]],[[["points",3]],["bool",15]],[[["pixels",3]],["bool",15]],[[["scaled",3]],["bool",15]],[[["figure",3]],["bool",15]],[[["rect",4]],["bool",15]],[[["sizedrect",3]],["bool",15]],[[["extentsrect",3]],["bool",15]],[[["scale",3]],["bool",15]],[[["vector",3]],["bool",15]],[[["size",3]],["bool",15]],[[["size",3]],["bool",15]],[[["vector",3]],["bool",15]],[[["point",3]],["bool",15]],[[["vector",3]],["bool",15]],[[["size",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["point",3]],["rect",4]],[[]],[[],["figure",3]],[[],["rect",4]],[[],["sizedrect",3]],[[],["extentsrect",3]],[[],["size",3]],[[],["point",3]],[[],["vector",3]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["figure"]],["figure",3]]],[[],["figure",3]],[[]],[[]],[[["size",3]],["rect",4]],[[["sizedrect",3]],["rect",4]],[[["extentsrect",3]],["rect",4]],[[["size",3]],["sizedrect",3]],[[]],[[]],[[],["scale",3]],[[]],[[]],[[["vector",3]],["size",3]],[[]],[[],["size",3]],[[],["point",3]],[[]],[[["vector",3]],["point",3]],[[["point",3]],["vector",3]],[[],["vector",3]],[[]],[[["size",3]],["vector",3]],[[["figure",3]],["size",3]],[[["figure",3]],["point",3]],[[["figure",3]],["vector",3]],[[],["size",3]],[[],["size",3]],[[],["point",3]],[[],["vector",3]],[[],["point",3]],[[],["vector",3]],[[]],[[]],[[],["figure",3]],[[],["figure",3]],[[],["figure",3]],[[],["figure",3]],[[],["figure",3]],null,[[]],[[],["rect",4]],[[],["sizedrect",3]],[[],["extentsrect",3]],[[],[["extentsrect",3],["option",4,["extentsrect"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["scale",3]],[[],["bool",15]],[[],["bool",15]],[[["figure",3]],["figure",3]],[[["size",3]],["size",3]],[[["point",3]],["point",3]],[[["vector",3]],["vector",3]],[[["figure",3]],["figure",3]],[[["size",3]],["size",3]],[[["point",3]],["point",3]],[[["vector",3]],["vector",3]],[[["scale",3]]],[[]],[[["figure",3]]],[[["scale",3]]],[[["scale",3]]],[[["scale",3]]],[[["scale",3]]],[[]],[[["scale",3]]],[[]],[[["scale",3]]],[[]],[[["scale",3]]],[[["figure",3]]],[[]],[[["scale",3]],["bool",15]],[[]],[[]],[[]],[[]],[[["points",3],["scale",3,["points","pixels"]],["scale",3,["scaled","points"]],["pixels",3],["scaled",3]],["displayscale",3]],[[],["figure",3]],[[["point",3],["size",3]],["sizedrect",3]],[[["point",3]],["extentsrect",3]],[[],["scale",3]],[[],["size",3]],[[],["point",3]],[[],["vector",3]],[[]],[[],["displayscale",3]],[[],["figure",3]],[[]],[[]],[[]],[[]],[[],["scale",3]],[[],["point",3]],[[],["point",3]],[[],["point",3]],[[],["point",3]],null,null,[[["points",3]],[["option",4,["ordering"]],["ordering",4]]],[[["pixels",3]],[["option",4,["ordering"]],["ordering",4]]],[[["scaled",3]],[["option",4,["ordering"]],["ordering",4]]],[[["figure",3]],[["option",4,["ordering"]],["ordering",4]]],[[["scale",3]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[["figure",3]],["bool",15]],[[["rect",4]],["bool",15]],[[["sizedrect",3]],["bool",15]],[[["extentsrect",3]],["bool",15]],[[["size",3]],["bool",15]],[[["point",3]],["bool",15]],[[["vector",3]],["bool",15]],[[["figure",3]],["bool",15]],[[["rect",4]],["bool",15]],[[["sizedrect",3]],["bool",15]],[[["extentsrect",3]],["bool",15]],[[["size",3]],["bool",15]],[[["point",3]],["bool",15]],[[["vector",3]],["bool",15]],[[]],[[["figure",3]]],[[["figure",3]]],[[]],[[]],[[],["figure",3]],[[],["rect",4]],[[],["sizedrect",3]],[[],["extentsrect",3]],[[],["size",3]],[[],["point",3]],[[],["vector",3]],[[],["rect",4]],[[],["sizedrect",3]],[[],["extentsrect",3]],[[],["rect",4]],[[],["sizedrect",3]],[[],["extentsrect",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["scale",3,["scaled","points"]],["points",3],["scaled",3]]],[[["points",3],["pixels",3],["scale",3,["points","pixels"]]]],[[],["vector",3]],[[],["vector",3]],[[],["vector",3]],[[],["size",3]],null,[[["point",3],["size",3]],["rect",4]],[[["angle",4]]],[[["figure",3]]],[[]],[[["vector",3]]],[[["size",3]]],[[["vector",3]]],[[["point",3]]],[[["size",3]]],[[["vector",3]]],[[["size",3]]],[[["angle",4]]],[[["figure",3]]],[[]],[[["vector",3]]],[[["size",3]]],[[["size",3]]],[[["vector",3]]],[[["point",3]]],[[["vector",3]]],[[["size",3]]],[[],[["option",4,["f32"]],["f32",15]]],[[],[["option",4,["f64"]],["f64",15]]],[[],[["i128",15],["option",4,["i128"]]]],[[],[["option",4,["i16"]],["i16",15]]],[[],[["i32",15],["option",4,["i32"]]]],[[],[["i64",15],["option",4,["i64"]]]],[[],[["i8",15],["option",4,["i8"]]]],[[],[["option",4,["isize"]],["isize",15]]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[],["point",3]],[[],["point",3]],[[],["point",3]],[[],["point",3]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[],["size",3]],[[],["size",3]],[[],["size",3]],[[],["size",3]],[[],[["u128",15],["option",4,["u128"]]]],[[],[["option",4,["u16"]],["u16",15]]],[[],[["option",4,["u32"]],["u32",15]]],[[],[["option",4,["u64"]],["u64",15]]],[[],[["option",4,["u8"]],["u8",15]]],[[],[["usize",15],["option",4,["usize"]]]],[[],["vector",3]],[[],["vector",3]],[[],["vector",3]],[[],["vector",3]],[[],[["scale",3,["scaled","pixels"]],["scaled",3],["pixels",3]]],[[["point",3]],["point",3]],[[["vector",3]],["vector",3]],[[]],[[],["rect",4]],[[],["sizedrect",3]],[[],["extentsrect",3]],[[],[["option",4,["rect"]],["rect",4]]],[[],[["option",4,["sizedrect"]],["sizedrect",3]]],[[],[["extentsrect",3],["option",4,["extentsrect"]]]],[[],[["size",3],["option",4,["size"]]]],[[],[["option",4,["point"]],["point",3]]],[[],[["option",4,["vector"]],["vector",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["figure",3],["u32",15]],["bool",15]],[[["rect",4],["u32",15]],["bool",15]],[[["sizedrect",3],["u32",15]],["bool",15]],[[["extentsrect",3],["u32",15]],["bool",15]],[[["u32",15],["size",3]],["bool",15]],[[["u32",15],["point",3]],["bool",15]],[[["u32",15],["vector",3]],["bool",15]],[[["figure",3],["u32",15]],["bool",15]],[[["rect",4],["u32",15]],["bool",15]],[[["sizedrect",3],["u32",15]],["bool",15]],[[["extentsrect",3],["u32",15]],["bool",15]],[[["u32",15],["size",3]],["bool",15]],[[["u32",15],["point",3]],["bool",15]],[[["u32",15],["vector",3]],["bool",15]],[[],[["extentsrect",3],["option",4,["extentsrect"]]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["figure",3]],[[],["figure",3]],[[],["figure",3]],[[],["figure",3]],[[],["figure",3]],null,[[],["figure",3]],[[],["figure",3]],null,null,[[],["figure",3]],[[],["figure",3]],null,null,[[]],[[],["figure",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],null,[[],["bool",15]],null,[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["absdiff",3]],[[],["relative",3]],[[],["ulps",3]],[[]],[[]],[[],["u32",15]],[[]],[[]],[[]],[[],["absdiff",3]],[[],["relative",3]],[[],["ulps",3]],null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["relative",3]],null,[[["u32",15]],["ulps",3]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["bool",15]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u32",15]],["bool",15]],null,[[["u32",15]],["bool",15]],null,[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,[[]],null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["option",4]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["usize",15]],["option",4]],[[],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[],["fpcategory",4]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[],["option",4]],[[]],[[]],[[]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i128",15]],["option",4]],[[["i16",15]],["option",4]],[[["i32",15]],["option",4]],[[["i64",15]],["option",4]],[[["i8",15]],["option",4]],[[["isize",15]],["option",4]],[[]],[[["str",15],["u32",15]],["result",4]],[[["u128",15]],["option",4]],[[["u16",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u8",15]],["option",4]],[[["usize",15]],["option",4]],[[]],null,[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["usize",15]]],[[["u32",15]]],[[]],[[]],[[["i32",15]]],null,[[]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["f32"]],["f32",15]]],[[],[["option",4,["f64"]],["f64",15]]],[[],[["i128",15],["option",4,["i128"]]]],[[],[["option",4,["i16"]],["i16",15]]],[[],[["i32",15],["option",4,["i32"]]]],[[],[["i64",15],["option",4,["i64"]]]],[[],[["i8",15],["option",4,["i8"]]]],[[],[["option",4,["isize"]],["isize",15]]],[[]],[[]],[[],["string",3]],[[],[["u128",15],["option",4,["u128"]]]],[[],[["option",4,["u16"]],["u16",15]]],[[],[["option",4,["u32"]],["u32",15]]],[[],[["option",4,["u64"]],["u64",15]]],[[],[["option",4,["u8"]],["u8",15]]],[[],[["usize",15],["option",4,["usize"]]]],[[],["u32",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[["u32",15]]],[[["u32",15]]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],null,[[]],[[]],null,null,null,null,[[]],[[],["option",4]],[[],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["i128",15]],["option",4]],[[["i16",15]],["option",4]],[[["i32",15]],["option",4]],[[["i64",15]],["option",4]],[[["i8",15]],["option",4]],[[["isize",15]],["option",4]],[[["u128",15]],["option",4]],[[["u16",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u8",15]],["option",4]],[[["usize",15]],["option",4]],[[],[["option",4,["f32"]],["f32",15]]],[[],[["option",4,["f64"]],["f64",15]]],[[],[["i128",15],["option",4,["i128"]]]],[[],[["option",4,["i16"]],["i16",15]]],[[],[["i32",15],["option",4,["i32"]]]],[[],[["i64",15],["option",4,["i64"]]]],[[],[["i8",15],["option",4,["i8"]]]],[[],[["option",4,["isize"]],["isize",15]]],[[],[["u128",15],["option",4,["u128"]]]],[[],[["option",4,["u16"]],["u16",15]]],[[],[["option",4,["u32"]],["u32",15]]],[[],[["option",4,["u64"]],["u64",15]]],[[],[["option",4,["u8"]],["u8",15]]],[[],[["usize",15],["option",4,["usize"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["fpcategory",4]],[[],["fpcategory",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]]],[[["i32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[],["u32",15]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[],["u32",15]],[[["u32",15]]],[[["u32",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["u32",15]],["option",4]],[[["u32",15]],["option",4]],[[],["option",4]],null,null,[[]],null,null,null,[[]],[[]],null,null,null,[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[["u32",15]]],[[["u32",15]]],[[]],null,null,[[["usize",15]],["option",4]],[[["usize",15]]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["pipelinedescription",3]],null,null,null,null,[[],["option",4]],null,[[["pipeline",3],["device",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["shaderstages",3]],[[]],null,null,null,[[["passop",4],["option",4,["textureview"]],["textureview",3],["commandencoder",3]]],[[["u32",15]],["bindgroupentry",3]],[[["u32",15]],["bindgroupentry",3]],[[["u32",15]],["bindgroupentry",3]],[[["u32",15]],["bindgroupentry",3]],[[["u32",15]],["bindgroupentry",3]],null,[[["bindinggrouplayout",3]],["bindinggroup",3]],null,[[["shaderstages",3]],["shaderstages",3]],[[["shaderstages",3]]],[[["shaderstages",3]],["shaderstages",3]],[[["shaderstages",3]]],[[],["u32",15]],[[["shaderstages",3]],["shaderstages",3]],[[["shaderstages",3]]],[[["u32",15],["sizedrect",3,["u32","pixels"]],["pixels",3],["commandencoder",3]]],[[["u32",15],["sizedrect",3,["u32","pixels"]],["pixels",3],["commandencoder",3]]],[[["u32",15],["sizedrect",3,["u32","pixels"]],["pixels",3],["commandencoder",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["renderer",3]],["vertexbuffer",3]],[[["device",3],["commandencoder",3]]],[[["device",3],["commandencoder",3]]],[[["device",3],["rgba8",3],["commandencoder",3]]],[[["device",3],["texture",3],["commandencoder",3]]],[[],["rgba8",3]],[[],["bgra8",3]],[[],["rgba",3]],[[],["error",4]],[[],["blending",3]],[[],["blendfactor",4]],[[],["blendop",4]],[[],["screentransformation",3]],[[],["vertexformat",4]],[[],["shaderstages",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rgba8",3]],["ordering",4]],[[["shaderstages",3]],["ordering",4]],[[],["textureview",3]],[[],["textureview",3]],[[],["textureview",3]],[[],["shaderstages",3]],[[["textureformat",4],["u32",15],["pixels",3],["size",3,["u32","pixels"]]]],[[["textureformat",4],["u32",15],["pixels",3],["size",3,["u32","pixels"]]]],[[],["blending",3]],[[["shaderstages",3]],["bool",15]],[[["uniformbuffer",3]]],null,[[["bindinggrouplayout",3]],["bindinggroup",3]],[[["u32",15]],["bindinggrouplayout",3]],[[],["vertexbuffer",3]],[[["bufferusages",3]],["buffer",3]],[[],["commandencoder",3]],[[],["commandencoder",3]],[[["textureformat",4],["u32",15],["pixels",3],["size",3,["u32","pixels"]]],["framebuffer",3]],[[],["indexbuffer",3]],[[["textureformat",4],["pipelinelayout",3],["blending",3],["vertexlayout",3],["multisamplestate",3],["shader",3]],["pipeline",3]],[[],["pipelinelayout",3]],[[["filtermode",4]],["sampler",3]],[[],["shader",3]],[[["str",15]],["shader",3]],[[["textureformat",4],["textureusages",3],["u32",15],["pixels",3],["size",3,["u32","pixels"]]],["texture",3]],[[],["uniformbuffer",3]],[[["u32",15],["pixels",3],["size",3,["u32","pixels"]]],["depthbuffer",3]],[[],[["result",4,["renderframe","surfaceerror"]],["renderframe",3],["surfaceerror",4]]],[[],["rgba8",3]],[[],["bgra8",3]],[[],["rgba",3]],[[],["blending",3]],[[],["vertexlayout",3]],null,null,[[],["pipelinedescription",3]],[[],["device",3]],null,[[],["device",3]],[[["shaderstages",3]],["shaderstages",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bindinggroup",3],["renderpass",3]]],[[["bindinggroup",3],["renderpass",3]]],[[["vertexbuffer",3]]],[[["u32",15],["range",3,["u32"]],["vertexbuffer",3]]],[[["range",3,["u32"]],["u32",15]]],[[]],[[["bindinggroup",3]]],null,[[],["shaderstages",3]],[[],["commandencoder",3]],null,[[],["commandencoder",3]],[[["rgba8",3]],["bool",15]],[[["bgra8",3]],["bool",15]],[[["rgba",3]],["bool",15]],[[["blending",3]],["bool",15]],[[["blendfactor",4]],["bool",15]],[[["blendop",4]],["bool",15]],[[["shaderstages",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],null,[[["device",3],["commandencoder",3]]],[[["device",3],["commandencoder",3]]],[[["device",3],["texture",3],["commandencoder",3]]],[[["device",3],["commandencoder",3]]],[[["renderer",3]],["vertexbuffer",3]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["surface",3],["adapter",3]]],[[["surface",3],["instance",3],["u32",15]]],null,null,[[],["frame",3]],[[["textureformat",4],["u32",15],["pixels",3],["size",3,["u32","pixels"]]],["framebuffer",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bgra8",3]],["rgba8",3]],[[]],[[["u32",15]],["rgba8",3]],[[["color",3]],["rgba8",3]],[[["rgba",3]],["rgba8",3]],[[["u32",15]],["bgra8",3]],[[]],[[["rgba8",3]],["bgra8",3]],[[["rgba8",3]],["rgba",3]],[[["color",3]],["rgba",3]],[[]],[[]],[[]],[[["requestdeviceerror",3]],["error",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["framebuffer",3]],["texture",3]],[[]],[[]],[[]],[[],["vertexlayout",3]],[[]],[[]],[[["u32",15]],[["shaderstages",3],["option",4,["shaderstages"]]]],[[["u32",15]],["shaderstages",3]],[[["u32",15]],["shaderstages",3]],[[],["shaderstages",3]],null,null,null,[[],["u64",15]],[[]],[[],["u32",15]],[[],["screentransformation",3]],[[["shaderstages",3]]],[[["shaderstages",3]],["shaderstages",3]],[[["shaderstages",3]],["boolbool",15]],[[],["bool",15]],null,[[["rgba8",3]],["bool",15]],[[["bgra8",3]],["bool",15]],[[["rgba",3]],["bool",15]],[[["blending",3]],["bool",15]],[[["shaderstages",3]],["bool",15]],[[["bindgroup",3],["u32",15]],["bindinggroup",3]],[[["usize",15],["u32",15],["bindgrouplayout",3]],["bindinggrouplayout",3]],[[["u8",15]],["rgba8",3]],[[["u8",15]],["bgra8",3]],[[["f32",15]],["rgba",3]],[[["commandencoder",3]],["frame",3]],[[["blendfactor",4],["blendop",4]],["blending",3]],[[],["shaderstages",3]],[[["adapter",3]]],[[["adapter",3],["u32",15]]],[[],["screentransformation",3]],[[["rgba8",3]],[["option",4,["ordering"]],["ordering",4]]],[[["shaderstages",3]],[["option",4,["ordering"]],["ordering",4]]],[[["passop",4],["option",4,["textureview"]],["textureview",3]],["renderpass",3]],[[["textureformat",4],["blending",3]]],null,null,[[],["option",4]],[[["frame",3]]],null,null,null,null,[[["framebuffer",3]]],[[["shaderstages",3]]],[[],["u32",15]],[[["filtermode",4]],["sampler",3]],[[["shaderstages",3],["bool",15]]],[[["bindinggroup",3]]],[[["indexbuffer",3]]],[[]],[[["vertexbuffer",3]]],null,null,null,[[["pipeline",3],["device",3]]],[[],["usize",15]],[[],[["pixels",3],["size",3,["u32","pixels"]],["u32",15]]],null,null,null,null,null,[[],["bufferslice",3]],[[],["bufferslice",3]],[[],[["option",4,["error"]],["error",8]]],null,[[["shaderstages",3]],["shaderstages",3]],[[["shaderstages",3]]],[[]],[[]],null,[[["shaderstages",3]],["shaderstages",3]],[[["textureformat",4],["textureusages",3],["u32",15],["bool",15],["pixels",3],["size",3,["u32","pixels"]]],["texture",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["bindingtype",4]],[[],["vertexbufferlayout",3]],[[["shaderstages",3]]],[[["device",3],["i32",15],["commandencoder",3],["sizedrect",3,["i32","pixels"]],["pixels",3]]],[[["i32",15],["device",3],["sizedrect",3,["i32","pixels"]],["pixels",3],["commandencoder",3]]],[[["device",3],["i32",15],["sizedrect",3,["i32","pixels"]],["pixels",3],["commandencoder",3]]],[[["device",3],["texture",3],["i32",15],["sizedrect",3,["i32","pixels"]],["pixels",3],["commandencoder",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["uniformbuffer",3]],null,[[["shaderstages",3]],["shaderstages",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[["uniformbuffer",3]]],[[],["vertexbuffer",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["u32",15]],[[["u32",15],["pixels",3],["size",3,["u32","pixels"]]],["depthbuffer",3]],[[],["textureview",3]],[[],["textureview",3]],[[],["textureview",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,[[],["backends",3]],[[],["features",3]],[[],["downlevelflags",3]],[[],["textureformatfeatureflags",3]],[[],["colorwrites",3]],[[],["bufferusages",3]],[[],["textureusages",3]],[[],["pipelinestatisticstypes",3]],[[],["features",3]],[[],["features",3]],null,null,null,null,null,null,null,[[],["bindingresource",4]],[[],["bufferbinding",3]],[[]],[[],[["texture",3],["imagecopytexture",3,["texture"]]]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[["passop",4],["option",4,["textureview"]],["textureview",3],["commandencoder",3]],["renderpass",3]],[[["computepassdescriptor",3]],["computepass",3]],[[["queryset",3],["u32",15]]],[[["queryset",3],["u32",15]]],[[["renderpassdescriptor",3]],["renderpass",3]],null,null,null,null,[[["backends",3]],["backends",3]],[[["features",3]],["features",3]],[[["downlevelflags",3]],["downlevelflags",3]],[[["textureformatfeatureflags",3]],["textureformatfeatureflags",3]],[[["colorwrites",3]],["colorwrites",3]],[[["bufferusages",3]],["bufferusages",3]],[[["textureusages",3]],["textureusages",3]],[[["pipelinestatisticstypes",3]],["pipelinestatisticstypes",3]],[[["backends",3]]],[[["features",3]]],[[["downlevelflags",3]]],[[["textureformatfeatureflags",3]]],[[["colorwrites",3]]],[[["bufferusages",3]]],[[["textureusages",3]]],[[["pipelinestatisticstypes",3]]],[[["backends",3]],["backends",3]],[[["features",3]],["features",3]],[[["downlevelflags",3]],["downlevelflags",3]],[[["textureformatfeatureflags",3]],["textureformatfeatureflags",3]],[[["colorwrites",3]],["colorwrites",3]],[[["bufferusages",3]],["bufferusages",3]],[[["textureusages",3]],["textureusages",3]],[[["pipelinestatisticstypes",3]],["pipelinestatisticstypes",3]],[[["backends",3]]],[[["features",3]]],[[["downlevelflags",3]]],[[["textureformatfeatureflags",3]]],[[["colorwrites",3]]],[[["bufferusages",3]]],[[["textureusages",3]]],[[["pipelinestatisticstypes",3]]],[[],["u32",15]],[[],["u64",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u8",15]],[[["backends",3]],["backends",3]],[[["features",3]],["features",3]],[[["downlevelflags",3]],["downlevelflags",3]],[[["textureformatfeatureflags",3]],["textureformatfeatureflags",3]],[[["colorwrites",3]],["colorwrites",3]],[[["bufferusages",3]],["bufferusages",3]],[[["textureusages",3]],["textureusages",3]],[[["pipelinestatisticstypes",3]],["pipelinestatisticstypes",3]],[[["backends",3]]],[[["features",3]]],[[["downlevelflags",3]]],[[["textureformatfeatureflags",3]]],[[["colorwrites",3]]],[[["bufferusages",3]]],[[["textureusages",3]]],[[["pipelinestatisticstypes",3]]],null,nullnull,null,null,null,null,null,[[["u64",15],["buffer",3],["option",4,["nonzerou64"]],["nonzerou64",3]]],[[["texture",3],["imagesubresourcerange",3]]],[[],["maintain",4]],[[],["bufferslice",3]],[[],["bindingresource",4]],[[],["bufferbinding",3]],[[],["loadop",4]],[[],["operations",3]],[[],["renderpasscolorattachment",3]],[[],["renderpassdepthstencilattachment",3]],[[],["textureviewdescriptor",3]],[[],["pipelinelayoutdescriptor",3]],[[],["samplerdescriptor",3]],[[],["bindgroupentry",3]],[[],["bindgroupdescriptor",3]],[[],["renderpassdescriptor",3]],[[],["vertexbufferlayout",3]],[[],["vertexstate",3]],[[],["fragmentstate",3]],[[],["renderpipelinedescriptor",3]],[[],["computepassdescriptor",3]],[[],["computepipelinedescriptor",3]],[[],["bindgrouplayoutdescriptor",3]],[[],["renderbundleencoderdescriptor",3]],[[],["surfaceerror",4]],[[],["requestdeviceerror",3]],[[],["bufferasyncerror",3]],[[],["mapmode",4]],[[],["backend",4]],[[],["powerpreference",4]],[[],["backends",3]],[[],["requestadapteroptions",3]],[[],["features",3]],[[],["limits",3]],[[],["downlevelcapabilities",3]],[[],["downlevelflags",3]],[[],["shadermodel",4]],[[],["devicetype",4]],[[],["adapterinfo",3]],[[],["textureviewdimension",4]],[[],["blendfactor",4]],[[],["blendoperation",4]],[[],["blendcomponent",3]],[[],["blendstate",3]],[[],["colortargetstate",3]],[[],["primitivetopology",4]],[[],["frontface",4]],[[],["face",4]],[[],["polygonmode",4]],[[],["primitivestate",3]],[[],["multisamplestate",3]],[[],["textureformatfeatureflags",3]],[[],["textureformatfeatures",3]],[[],["textureformat",4]],[[],["colorwrites",3]],[[],["stencilstate",3]],[[],["depthbiasstate",3]],[[],["depthstencilstate",3]],[[],["indexformat",4]],[[],["stenciloperation",4]],[[],["stencilfacestate",3]],[[],["comparefunction",4]],[[],["vertexstepmode",4]],[[],["vertexattribute",3]],[[],["vertexformat",4]],[[],["bufferusages",3]],[[],["presentmode",4]],[[],["textureusages",3]],[[],["surfaceconfiguration",3]],[[],["color",3]],[[],["texturedimension",4]],[[],["origin3d",3]],[[],["extent3d",3]],[[],["textureaspect",4]],[[],["addressmode",4]],[[],["filtermode",4]],[[],["pushconstantrange",3]],[[],["commandbufferdescriptor",3]],[[],["renderbundledepthstencil",3]],[[],["imagedatalayout",3]],[[],["bufferbindingtype",4]],[[],["texturesampletype",4]],[[],["storagetextureaccess",4]],[[],["bindingtype",4]],[[],["bindgrouplayoutentry",3]],[[],["imagecopybuffer",3]],[[],["imagecopytexture",3]],[[],["imagesubresourcerange",3]],[[],["samplerbordercolor",4]],[[],["querytype",4]],[[],["pipelinestatisticstypes",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["backends",3]],["ordering",4]],[[["features",3]],["ordering",4]],[[["limits",3]],["ordering",4]],[[["downlevelcapabilities",3]],["ordering",4]],[[["downlevelflags",3]],["ordering",4]],[[["shadermodel",4]],["ordering",4]],[[["textureformatfeatureflags",3]],["ordering",4]],[[["colorwrites",3]],["ordering",4]],[[["bufferusages",3]],["ordering",4]],[[["textureusages",3]],["ordering",4]],[[["pipelinestatisticstypes",3]],["ordering",4]],null,null,null,null,null,null,[[],["texturedimension",4]],[[],["backends",3]],[[],["features",3]],[[],["downlevelflags",3]],[[],["textureformatfeatureflags",3]],[[],["colorwrites",3]],[[],["bufferusages",3]],[[],["textureusages",3]],[[],["pipelinestatisticstypes",3]],[[],["downlevelflags",3]],[[["device",3],["surfaceconfiguration",3]]],null,null,[[["backends",3]],["bool",15]],[[["features",3]],["bool",15]],[[["downlevelflags",3]],["bool",15]],[[["textureformatfeatureflags",3]],["bool",15]],[[["colorwrites",3]],["bool",15]],[[["bufferusages",3]],["bool",15]],[[["textureusages",3]],["bool",15]],[[["pipelinestatisticstypes",3]],["bool",15]],[[["u64",15],["buffer",3]]],[[["buffer",3],["imagecopytexture",3,["texture"]],["imagecopybuffer",3,["buffer"]],["texture",3],["extent3d",3]]],[[["buffer",3],["imagecopytexture",3,["texture"]],["imagecopybuffer",3,["buffer"]],["texture",3],["extent3d",3]]],[[["extent3d",3],["texture",3],["imagecopytexture",3,["texture"]]]],null,null,[[["exposedadapter",3]],["adapter",3]],[[["bindgroupdescriptor",3]],["bindgroup",3]],[[["bindgrouplayoutdescriptor",3]],["bindgrouplayout",3]],[[["bufferdescriptor",3]],["buffer",3]],[[["bufferinitdescriptor",3]],["buffer",3]],[[["commandencoderdescriptor",3]],["commandencoder",3]],[[["computepipelinedescriptor",3]],["computepipeline",3]],[[["devicedescriptor",3],["opendevice",3],["option",4,["path"]],["path",3]],[["requestdeviceerror",3],["result",4,["requestdeviceerror"]]]],[[["pipelinelayoutdescriptor",3]],["pipelinelayout",3]],[[["querysetdescriptor",3]],["queryset",3]],[[["renderbundleencoderdescriptor",3]],["renderbundleencoder",3]],[[["renderpipelinedescriptor",3]],["renderpipeline",3]],[[["samplerdescriptor",3]],["sampler",3]],[[["shadermoduledescriptor",3]],["shadermodule",3]],[[["shadermoduledescriptorspirv",3]],["shadermodule",3]],[[["shadermoduledescriptor",3]],["shadermodule",3]],[[],["surface",3]],[[["texturedescriptor",3]],["texture",3]],[[["texturedescriptor",3]],["texture",3]],[[["texturedescriptor",3],["queue",3]],["texture",3]],[[["textureviewdescriptor",3]],["textureview",3]],null,[[],["loadop",4]],[[],["operations",3]],[[],["textureviewdescriptor",3]],[[],["pipelinelayoutdescriptor",3]],[[],["samplerdescriptor",3]],[[],["renderpassdescriptor",3]],[[],["computepassdescriptor",3]],[[],["renderbundleencoderdescriptor",3]],[[],["powerpreference",4]],[[],["requestadapteroptions",3]],[[],["features",3]],[[],["limits",3]],[[],["downlevelcapabilities",3]],[[],["textureviewdimension",4]],[[],["blendoperation",4]],[[],["blendcomponent",3]],[[],["primitivetopology",4]],[[],["frontface",4]],[[],["polygonmode",4]],[[],["primitivestate",3]],[[],["multisamplestate",3]],[[],["colorwrites",3]],[[],["stencilstate",3]],[[],["depthbiasstate",3]],[[],["indexformat",4]],[[],["stenciloperation",4]],[[],["stencilfacestate",3]],[[],["vertexstepmode",4]],[[],["color",3]],[[],["origin3d",3]],[[],["extent3d",3]],[[],["textureaspect",4]],[[],["addressmode",4]],[[],["filtermode",4]],[[],["commandbufferdescriptor",3]],[[],["imagedatalayout",3]],[[],["bufferbindingtype",4]],[[],["texturesampletype",4]],[[],["imagesubresourcerange",3]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["textureformatinfo",3]],[[]],[[]],null,null,[[["backends",3]],["backends",3]],[[["features",3]],["features",3]],[[["downlevelflags",3]],["downlevelflags",3]],[[["textureformatfeatureflags",3]],["textureformatfeatureflags",3]],[[["colorwrites",3]],["colorwrites",3]],[[["bufferusages",3]],["bufferusages",3]],[[["textureusages",3]],["textureusages",3]],[[["pipelinestatisticstypes",3]],["pipelinestatisticstypes",3]],null,[[["u32",15]]],[[["u64",15],["bufferlimits",3]],[[],["limits",3]],[[["range",3,["u32"]],["u32",15]]],[[["range",3,["u32"]],["u32",15]]],[[["range",3,["u32"]],["u32",15]]],[[["range",3,["u32"]],["u32",15]]],[[["vertexbuffer",3]]],[[["u32",15],["range",3,["u32"]],["vertexbuffer",3]]],[[["i32",15],["u32",15],["range",3,["u32"]]]],[[["i32",15],["u32",15],["range",3,["u32"]]]],[[["range",3,["u32"]],["u32",15]]],[[["i32",15],["u32",15],["range",3,["u32"]]]],[[["i32",15],["u32",15],["range",3,["u32"]]]],[[["u64",15],["buffer",3]]],[[["u64",15],["buffer",3]]],[[["u64",15],["buffer",3]]],[[["u64",15],["buffer",3]]],[[["u64",15],["buffer",3]]],[[["u64",15],["buffer",3]]],[[["u64",15],["buffer",3]]],[[["u64",15],["buffer",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["bindinggroup",3]]],[[],["backends",3]],[[],["features",3]],[[],["downlevelflags",3]],[[],["textureformatfeatureflags",3]],[[],["colorwrites",3]],[[],["bufferusages",3]],[[],["textureusages",3]],[[],["pipelinestatisticstypes",3]],[[]],[[]],null,null,null,null,null,[[["backends",3]]],[[["maintain",4]],["bool",15]],[[["loadop",4]],["bool",15]],[[["operations",3]],["bool",15]],[[["textureviewdescriptor",3]],["bool",15]],[[["samplerdescriptor",3]],["bool",15]],[[["vertexbufferlayout",3]],["bool",15]],[[["renderbundleencoderdescriptor",3]],["bool",15]],[[["surfaceerror",4]],["bool",15]],[[["requestdeviceerror",3]],["bool",15]],[[["bufferasyncerror",3]],["bool",15]],[[["mapmode",4]],["bool",15]],[[["backend",4]],["bool",15]],[[["powerpreference",4]],["bool",15]],[[["backends",3]],["bool",15]],[[["requestadapteroptions",3]],["bool",15]],[[["features",3]],["bool",15]],[[["limits",3]],["bool",15]],[[["downlevelcapabilities",3]],["bool",15]],[[["downlevelflags",3]],["bool",15]],[[["shadermodel",4]],["bool",15]],[[["devicetype",4]],["bool",15]],[[["adapterinfo",3]],["bool",15]],[[["textureviewdimension",4]],["bool",15]],[[["blendfactor",4]],["bool",15]],[[["blendoperation",4]],["bool",15]],[[["blendcomponent",3]],["bool",15]],[[["blendstate",3]],["bool",15]],[[["colortargetstate",3]],["bool",15]],[[["primitivetopology",4]],["bool",15]],[[["frontface",4]],["bool",15]],[[["face",4]],["bool",15]],[[["polygonmode",4]],["bool",15]],[[["primitivestate",3]],["bool",15]],[[["multisamplestate",3]],["bool",15]],[[["textureformatfeatureflags",3]],["bool",15]],[[["textureformatfeatures",3]],["bool",15]],[[["textureformat",4]],["bool",15]],[[["colorwrites",3]],["bool",15]],[[["stencilstate",3]],["bool",15]],[[["depthbiasstate",3]],["bool",15]],[[["depthstencilstate",3]],["bool",15]],[[["indexformat",4]],["bool",15]],[[["stenciloperation",4]],["bool",15]],[[["stencilfacestate",3]],["bool",15]],[[["comparefunction",4]],["bool",15]],[[["vertexstepmode",4]],["bool",15]],[[["vertexattribute",3]],["bool",15]],[[["vertexformat",4]],["bool",15]],[[["bufferusages",3]],["bool",15]],[[["presentmode",4]],["bool",15]],[[["textureusages",3]],["bool",15]],[[["surfaceconfiguration",3]],["bool",15]],[[["color",3]],["bool",15]],[[["texturedimension",4]],["bool",15]],[[["origin3d",3]],["bool",15]],[[["extent3d",3]],["bool",15]],[[["textureaspect",4]],["bool",15]],[[["addressmode",4]],["bool",15]],[[["filtermode",4]],["bool",15]],[[["pushconstantrange",3]],["bool",15]],[[["commandbufferdescriptor",3]],["bool",15]],[[["renderbundledepthstencil",3]],["bool",15]],[[["bufferbindingtype",4]],["bool",15]],[[["texturesampletype",4]],["bool",15]],[[["storagetextureaccess",4]],["bool",15]],[[["bindingtype",4]],["bool",15]],[[["bindgrouplayoutentry",3]],["bool",15]],[[["imagesubresourcerange",3]],["bool",15]],[[["samplerbordercolor",4]],["bool",15]],[[["pipelinestatisticstypes",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["features",3]],[[],["features",3]],null,[[],["commandbuffer",3]],[[["renderbundledescriptor",3]],["renderbundle",3]],null,null,[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["backend",4]],["backends",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["textureformat",4]],["colortargetstate",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rgba",3]],["color",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]],[["option",4,["backends"]],["backends",3]]],[[["u64",15]],[["option",4,["features"]],["features",3]]],[[["u32",15]],[["downlevelflags",3],["option",4,["downlevelflags"]]]],[[["u32",15]],[["textureformatfeatureflags",3],["option",4,["textureformatfeatureflags"]]]],[[["u32",15]],[["option",4,["colorwrites"]],["colorwrites",3]]],[[["u32",15]],[["option",4,["bufferusages"]],["bufferusages",3]]],[[["u32",15]],[["option",4,["textureusages"]],["textureusages",3]]],[[["u8",15]],[["option",4,["pipelinestatisticstypes"]],["pipelinestatisticstypes",3]]],[[["u32",15]],["backends",3]],[[["u64",15]],["features",3]],[[["u32",15]],["downlevelflags",3]],[[["u32",15]],["textureformatfeatureflags",3]],[[["u32",15]],["colorwrites",3]],[[["u32",15]],["bufferusages",3]],[[["u32",15]],["textureusages",3]],[[["u8",15]],["pipelinestatisticstypes",3]],[[["u32",15]],["backends",3]],[[["u64",15]],["features",3]],[[["u32",15]],["downlevelflags",3]],[[["u32",15]],["textureformatfeatureflags",3]],[[["u32",15]],["colorwrites",3]],[[["u32",15]],["bufferusages",3]],[[["u32",15]],["textureusages",3]],[[["u8",15]],["pipelinestatisticstypes",3]],[[],["instance",3]],[[],["backends",3]],[[],["features",3]],[[],["downlevelflags",3]],[[],["textureformatfeatureflags",3]],[[],["colorwrites",3]],[[],["bufferusages",3]],[[],["textureusages",3]],[[],["pipelinestatisticstypes",3]],null,null,null,[[],["globalreport",3]],[[["u32",15]],["bindgrouplayout",3]],[[["u32",15]],["bindgrouplayout",3]],[[],[["surfacetexture",3],["result",4,["surfacetexture","surfaceerror"]],["surfaceerror",4]]],[[],["downlevelcapabilities",3]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["adapterinfo",3]],[[],["bufferview",3]],[[],["bufferviewmut",3]],[[["adapter",3]],[["textureformat",4],["option",4,["textureformat"]]]],[[["textureformat",4]],["textureformatfeatures",3]],[[],["f32",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[["backends",3]]],[[["features",3]]],[[["downlevelflags",3]]],[[["textureformatfeatureflags",3]]],[[["colorwrites",3]]],[[["bufferusages",3]]],[[["textureusages",3]]],[[["pipelinestatisticstypes",3]]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[["backends",3]],["backends",3]],[[["features",3]],["features",3]],[[["downlevelflags",3]],["downlevelflags",3]],[[["textureformatfeatureflags",3]],["textureformatfeatureflags",3]],[[["colorwrites",3]],["colorwrites",3]],[[["bufferusages",3]],["bufferusages",3]],[[["textureusages",3]],["textureusages",3]],[[["pipelinestatisticstypes",3]],["pipelinestatisticstypes",3]],[[["backends",3]],["bool",15]],[[["features",3]],["bool",15]],[[["downlevelflags",3]],["bool",15]],[[["textureformatfeatureflags",3]],["bool",15]],[[["colorwrites",3]],["bool",15]],[[["bufferusages",3]],["bool",15]],[[["textureusages",3]],["bool",15]],[[["pipelinestatisticstypes",3]],["boolbool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["surface",3]],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["limits",3]],[[],["limits",3]],null,null,null,null,null,[[["mapmode",4]]],[[],["commandbufferdescriptor",3]],null,null,null,null,[[],["u32",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15],["bool",15]],["extent3d",3]],null,null,null,null,[[["u64",15],["u32",15],["buffer",3]]],[[["u64",15],["u32",15],["buffer",3]]],[[["u64",15],["u32",15],["buffer",3]]],[[["u64",15],["u32",15],["buffer",3]]],null,null,[[["loadop",4]],["bool",15]],[[["operations",3]],["bool",15]],[[["textureviewdescriptor",3]],["bool",15]],[[["samplerdescriptor",3]],["bool",15]],[[["vertexbufferlayout",3]],["bool",15]],[[["renderbundleencoderdescriptor",3]],["bool",15]],[[["backends",3]],["bool",15]],[[["requestadapteroptions",3]],["bool",15]],[[["features",3]],["bool",15]],[[["limits",3]],["bool",15]],[[["downlevelcapabilities",3]],["bool",15]],[[["downlevelflags",3]],["bool",15]],[[["adapterinfo",3]],["bool",15]],[[["blendcomponent",3]],["bool",15]],[[["blendstate",3]],["bool",15]],[[["colortargetstate",3]],["bool",15]],[[["primitivestate",3]],["bool",15]],[[["multisamplestate",3]],["bool",15]],[[["textureformatfeatureflags",3]],["bool",15]],[[["textureformatfeatures",3]],["bool",15]],[[["colorwrites",3]],["bool",15]],[[["stencilstate",3]],["bool",15]],[[["depthbiasstate",3]],["bool",15]],[[["depthstencilstate",3]],["bool",15]],[[["stencilfacestate",3]],["bool",15]],[[["vertexattribute",3]],["bool",15]],[[["bufferusages",3]],["bool",15]],[[["textureusages",3]],["bool",15]],[[["surfaceconfiguration",3]],["bool",15]],[[["color",3]],["bool",15]],[[["origin3d",3]],["bool",15]],[[["extent3d",3]],["bool",15]],[[["pushconstantrange",3]],["bool",15]],[[["commandbufferdescriptor",3]],["bool",15]],[[["renderbundledepthstencil",3]],["bool",15]],[[["bufferbindingtype",4]],["bool",15]],[[["texturesampletype",4]],["bool",15]],[[["bindingtype",4]],["bool",15]],[[["bindgrouplayoutentry",3]],["bool",15]],[[["imagesubresourcerange",3]],["bool",15]],[[["pipelinestatisticstypes",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["backends",3]],["instance",3]],[[],["backends",3]],[[],["features",3]],[[],["downlevelflags",3]],[[],["textureformatfeatureflags",3]],[[],["colorwrites",3]],[[],["bufferusages",3]],[[],["textureusages",3]],[[],["pipelinestatisticstypes",3]],null,null,null,[[]],[[]],null,null,null,[[["backends",3]],[["option",4,["ordering"]],["ordering",4]]],[[["features",3]],[["option",4,["ordering"]],["ordering",4]]],[[["limits",3]],[["option",4,["ordering"]],["ordering",4]]],[[["downlevelcapabilities",3]],[["option",4,["ordering"]],["ordering",4]]],[[["downlevelflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["shadermodel",4]],[["option",4,["ordering"]],["ordering",4]]],[[["textureformatfeatureflags",3]],[["option",4,["ordering"]],["ordering",4]]],[[["colorwrites",3]],[["option",4,["ordering"]],["ordering",4]]],[[["bufferusages",3]],[["option",4,["ordering"]],["ordering",4]]],[[["textureusages",3]],[["option",4,["ordering"]],["ordering",4]]],[[["pipelinestatisticstypes",3]],[["option",4,["ordering"]],["ordering",4]]],null,[[["textureformat",4]],["extent3d",3]],[[["maintain",4]]],[[["bool",15]]],null,[[]],[[]],[[]],null,[[]],null,null,null,[[["str",15]]],[[["str",15]]],[[["str",15]]],null,null,null,[[["backends",3]]],[[["features",3]]],[[["downlevelflags",3]]],[[["textureformatfeatureflags",3]]],[[["colorwrites",3]]],[[["bufferusages",3]]],[[["textureusages",3]]],[[["pipelinestatisticstypes",3]]],[[["requestadapteroptions",3]]],[[["devicedescriptor",3],["option",4,["path"]],["path",3]]],[[["u64",15],["buffer",3],["u32",15],["queryset",3],["range",3,["u32"]]]],null,null,null,null,[[["backends",3],["bool",15]]],[[["features",3],["bool",15]]],[[["downlevelflags",3],["bool",15]]],[[["textureformatfeatureflags",3],["bool",15]]],[[["colorwrites",3],["bool",15]]],[[["bool",15],["bufferusages",3]]],[[["textureusages",3],["bool",15]]],[[["pipelinestatisticstypes",3],["bool",15]]],[[["u32",15],["bindgroup",3]]],[[["u32",15],["bindgroup",3]]],[[["u32",15],["bindgroup",3]]],[[["u32",15],["bindgroup",3]]],[[["u32",15],["bindgroup",3]]],[[["bindinggroup",3]]],[[["color",3]]],[[["indexbuffer",3]]],[[]],[[["vertexbuffer",3]]],[[["indexformat",4],["bufferslice",3]]],[[["indexformat",4],["bufferslice",3]]],[[["indexformat",4],["bufferslice",3]]],[[["indexformat",4],["bufferslice",3]]],[[["renderpipeline",3]]],[[["renderpipeline",3]]],[[["computepipeline",3]]],[[["renderpipeline",3]]],[[["renderpipeline",3]]],[[["shaderstages",3],["u32",15]]],[[["shaderstages",3],["u32",15]]],[[["u32",15]]],[[["shaderstages",3],["u32",15]]],[[["shaderstages",3],["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15],["bufferslice",3]]],[[["u32",15],["bufferslice",3]]],[[["u32",15],["bufferslice",3]]],[[["u32",15],["bufferslice",3]]],[[["f32",15]]],null,null,[[],["u64",15]],null,[[],["bufferslice",3]],null,[[],[["option",4,["error"]],["error",8]]],null,null,null,null,[[]],null,null,null,null,[[]],null,null,[[["backends",3]],["backends",3]],[[["features",3]],["features",3]],[[["downlevelflags",3]],["downlevelflags",3]],[[["textureformatfeatureflags",3]],["textureformatfeatureflags",3]],[[["colorwrites",3]],["colorwrites",3]],[[["bufferusages",3]],["bufferusages",3]],[[["textureusages",3]],["textureusages",3]],[[["pipelinestatisticstypes",3]],["pipelinestatisticstypes",3]],[[["backends",3]]],[[["features",3]]],[[["downlevelflags",3]]],[[["textureformatfeatureflags",3]]],[[["colorwrites",3]]],[[["bufferusages",3]]],[[["textureusages",3]]],[[["pipelinestatisticstypes",3]]],[[]],null,[[["backends",3]],["backends",3]],[[["features",3]],["features",3]],[[["downlevelflags",3]],["downlevelflags",3]],[[["textureformatfeatureflags",3]],["textureformatfeatureflags",3]],[[["colorwrites",3]],["colorwrites",3]],[[["bufferusages",3]],["bufferusages",3]],[[["textureusages",3]],["textureusages",3]],[[["pipelinestatisticstypes",3]],["pipelinestatisticstypes",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["backends",3]]],[[["features",3]]],[[["downlevelflags",3]]],[[["textureformatfeatureflags",3]]],[[["colorwrites",3]]],[[["bufferusages",3]]],[[["textureusages",3]]],[[["pipelinestatisticstypes",3]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["backends",3]],["backends",3]],[[["features",3]],["features",3]],[[["downlevelflags",3]],["downlevelflags",3]],[[["textureformatfeatureflags",3]],["textureformatfeatureflags",3]],[[["colorwrites",3]],["colorwrites",3]],[[["bufferusages",3]],["bufferusages",3]],[[["textureusages",3]],["textureusages",3]],[[["pipelinestatisticstypes",3]],["pipelinestatisticstypes",3]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,[[],["bool",15]],[[["limits",3]],["limits",3]],[[["limits",3]],["limits",3]],null,null,null,null,null,null,null,null,null,[[["u64",15],["buffer",3]]],null,null,[[["imagecopytexture",3,["texture"]],["imagedatalayout",3],["texture",3],["extent3d",3]]],[[["queryset",3],["u32",15]]],[[["queryset",3],["u32",15]]],[[["queryset",3],["u32",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[],[["option",4,["backends"]],["backends",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bufferinitdescriptor",3]],[[]],null,[[["bufferinitdescriptor",3]],["buffer",3]],[[["texturedescriptor",3],["queue",3]],["texture",3]],[[]],[[]],[[]],[[]],[[["range",3,["u32"]],["u32",15]]],[[["i32",15],["u32",15],["range",3,["u32"]]]],[[["u64",15],["buffer",3]]],[[["u64",15],["buffer",3]]],[[["bufferinitdescriptor",3]],["bool",15]],[[],["bool",15]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[],["u64",15]],[[]],[[["backends",3],["instance",3]],[["option",4,["adapter"]],["adapter",3]]],[[["instance",3],["surface",3],["backends",3],["option",4,["surface"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["shadersource",4]],[[],["cow",4]],[[["bufferinitdescriptor",3]],["bool",15]],[[["u64",15]],["stagingbelt",3]],[[["str",15]],["backends",3]],[[],[["powerpreference",4],["option",4,["powerpreference"]]]],[[["bufferslice",3],["device",3],["queue",3]]],[[]],[[["u32",15],["bindgroup",3]]],[[["indexformat",4],["bufferslice",3]]],[[["renderpipeline",3]]],[[["shaderstages",3],["u32",15]]],[[["u32",15],["bufferslice",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,[[["u64",15],["buffer",3],["nonzerou64",3],["device",3],["commandencoder",3]],["bufferviewmut",3]],null,[[["renderer",3]],["vertexbuffer",3]],[[["renderer",3]],["vertexbuffer",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["passop",4],["option",4,["textureview"]],["textureview",3],["commandencoder",3]]],[[],["textureview",3]],null,null,[[["bindinggroup",3],["renderpass",3]]],[[["vertexbuffer",3]]],[[["u32",15],["range",3,["u32"]],["vertexbuffer",3]]],[[["range",3,["u32"]],["u32",15]]],[[["bindinggroup",3]]],[[["bindinggroup",3]]],[[["indexbuffer",3]]],[[]],[[["vertexbuffer",3]]],null,null,null,[[],["textureview",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[],[["usize",15],["option",4,["usize"]]]],[[],[["usize",15],["option",4,["usize"]]]],[[],["sender",3]],[[],["receiver",3]],[[],["senderror",3]],[[],["trysenderror",4]],[[],["sendtimeouterror",4]],[[],["recverror",4]],[[],["tryrecverror",4]],[[],["recvtimeouterror",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["selector",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["drain",3]],[[]],[[]],[[["senderror",3]],["bool",15]],[[["trysenderror",4]],["bool",15]],[[["sendtimeouterror",4]],["bool",15]],[[["recverror",4]],["bool",15]],[[["tryrecverror",4]],["bool",15]],[[["recvtimeouterror",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["recvfut",3]],[[],["sendfut",3]],[[],["sendsink",3]],[[],["recvstream",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["senderror",3]],["bool",15]],[[["trysenderror",4]],["bool",15]],[[["sendtimeouterror",4]],["bool",15]],[[],["selector",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["receiver",3]],["selector",3]],[[],[["result",4,["recverror"]],["recverror",4]]],[[],["recvfut",3]],[[["instant",3]],[["recvtimeouterror",4],["result",4,["recvtimeouterror"]]]],[[["duration",3]],[["recvtimeouterror",4],["result",4,["recvtimeouterror"]]]],null,[[["sender",3]],["selector",3]],[[],[["senderror",3],["result",4,["senderror"]]]],[[],["sendfut",3]],[[["instant",3]],[["result",4,["sendtimeouterror"]],["sendtimeouterror",4]]],[[["duration",3]],[["result",4,["sendtimeouterror"]],["sendtimeouterror",4]]],[[],["sendsink",3]],[[],["recvstream",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["tryiter",3]],[[],[["tryrecverror",4],["result",4,["tryrecverror"]]]],[[],[["result",4,["trysenderror"]],["trysenderror",4]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[["instant",3]],[["result",4,["selecterror"]],["selecterror",4]]],[[["duration",3]],[["result",4,["selecterror"]],["selecterror",4]]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["usize",15],["option",4,["usize"]]]],[[],[["usize",15],["option",4,["usize"]]]],[[],[["usize",15],["option",4,["usize"]]]],[[],[["usize",15],["option",4,["usize"]]]],[[],["sendsink",3]],[[],["recvstream",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["recvfut",3],["context",3],["pin",3,["recvfut"]]],["poll",4]],[[["pin",3,["sendfut"]],["sendfut",3],["context",3]],["poll",4]],[[["sendsink",3],["pin",3,["sendsink"]],["context",3]],[["result",4],["poll",4,["result"]]]],[[["sendsink",3],["pin",3,["sendsink"]],["context",3]],[["result",4],["poll",4,["result"]]]],[[["pin",3,["recvstream"]],["recvstream",3],["context",3]],[["poll",4,["option"]],["option",4]]],[[["sendsink",3],["pin",3,["sendsink"]],["context",3]],[["result",4],["poll",4,["result"]]]],[[["sendsink",3],["pin",3,["sendsink"]]],["result",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4]],[[["context",3],["pin",3]],[["poll",4,["option"]],["option",4,["result"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,[[]],[[]],[[]],[[],["selecterror",4]],[[]],[[]],[[["selecterror",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["option",4]],null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["f32",15]],["dynamicimage",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rgb",3]]],[[["bgr",3]]],[[["luma",3]]],[[["rgba",3]]],[[["bgra",3]]],[[["lumaa",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["imagebuffer"]],["imagebuffer",3]]],[[],[["option",4,["imagebuffer"]],["imagebuffer",3]]],[[]],[[]],[[],["flatsamples",3]],[[],["flatsamples",3]],[[],[["flatsamples",3],["option",4,["flatsamples"]]]],[[],[["option",4,["flatsamples"]],["flatsamples",3]]],[[],[["option",4,["imagebuffer"]],["imagebuffer",3]]],[[],[["option",4,["imagebuffer"]],["imagebuffer",3]]],[[],[["option",4,["imagebuffer"]],["imagebuffer",3]]],[[],[["option",4,["imagebuffer"]],["imagebuffer",3]]],[[],["flatsamples",3]],[[],[["imagebuffer",3],["option",4,["imagebuffer"]]]],[[],[["option",4,["imagebuffer"]],["imagebuffer",3]]],[[],[["option",4,["imagebuffer"]],["imagebuffer",3]]],[[],[["imagebuffer",3],["option",4,["imagebuffer"]]]],[[],[["option",4,["imagebuffer"]],["imagebuffer",3]]],[[],[["option",4,["imagebuffer"]],["imagebuffer",3]]],[[],[["option",4,["imagebuffer"]],["imagebuffer",3]]],[[],[["option",4,["imagebuffer"]],["imagebuffer",3]]],[[],[["imagebuffer",3],["option",4,["imagebuffer"]]]],[[],[["imagebuffer",3],["option",4,["imagebuffer"]]]],[[]],[[]],[[],["flatsamples",3]],[[],[["option",4,["imagebuffer"]],["imagebuffer",3]]],[[],[["option",4,["imagebuffer"]],["imagebuffer",3]]],[[],[["option",4,["imagebuffer"]],["imagebuffer",3]]],[[],[["imagebuffer",3],["option",4,["imagebuffer"]]]],[[]],[[],[["error",4],["result",4,["view","error"]],["view",3]]],[[],[["viewmut",3],["result",4,["viewmut","error"]],["error",4]]],[[],[["error",4],["result",4,["view","error"]],["view",3]]],[[],["u16",15]],[[]],[[["rgb",3]]],[[["bgr",3]]],[[["luma",3]]],[[["rgba",3]]],[[["bgra",3]]],[[["lumaa",3]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["rgba",3,["u8"]],["u32",15],["u8",15]]],[[["f32",15]],["dynamicimage",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["dynamicimage",4]],null,[[],["imagebuffer",3]],[[],["imagebuffer",3]],[[],["u8",15]],[[],["bool",15]],[[],["bool",15]],[[["u32",15]]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["flatsamples",3]],[[],["frame",3]],[[],["delay",3]],[[],["imagebuffer",3]],[[],["colortype",4]],[[],["extendedcolortype",4]],[[],["rgb",3]],[[],["bgr",3]],[[],["luma",3]],[[],["rgba",3]],[[],["bgra",3]],[[],["lumaa",3]],[[],["dynamicimage",4]],[[],["imageformat",4]],[[],["imageoutputformat",4]],[[],["progress",3]],[[],["pixels",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],[["imageerror",4],["result",4,["vec","imageerror"]],["vec",3,["frame","global"]]]],[[],["colortype",4]],null,[[],["str",15]],[[],["colortype",4]],[[],["colortype",4]],[[],[["imagebuffer",3,["vec"]],["vec",3,["global"]]]],[[["u32",15]],[["imageerror",4],["result",4,["imageerror"]]]],[[["rect",3],["u32",15]],["bool",15]],[[["rect",3],["u32",15]],["bool",15]],[[["u32",15]],["dynamicimage",4]],[[["u32",15]],["dynamicimage",4]],[[],["u64",15]],[[],["imagebuffer",3]],[[],["delay",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["enumeratepixels",3]],[[],["enumeratepixelsmut",3]],[[],["enumeraterows",3]],[[],["enumeraterowsmut",3]],[[["delay",3]],["bool",15]],[[["imagebuffer",3]],["bool",15]],[[["colortype",4]],["bool",15]],[[["extendedcolortype",4]],["bool",15]],[[["rgb",3]],["bool",15]],[[["bgr",3]],["bool",15]],[[["luma",3]],["bool",15]],[[["rgba",3]],["bool",15]],[[["bgra",3]],["bool",15]],[[["lumaa",3]],["bool",15]],[[["dynamicimage",4]],["bool",15]],[[["imageformat",4]],["bool",15]],[[["imageoutputformat",4]],["bool",15]],[[["progress",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["option",4,["u8"]],["u8",15]],[["imagebuffer",3,["rgba","vec"]],["rgba",3,["u8"]],["vec",3,["u8","global"]]]],[[]],[[]],[[],["dynamicimage",4]],[[["usize",15]],["bool",15]],null,[[],["dynamicimage",4]],[[],["dynamicimage",4]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[["error",3]],["imageerror",4]],[[["error",4]],["imageerror",4]],[[]],[[]],[[]],[[]],[[]],[[["colortype",4]],["extendedcolortype",4]],[[]],[[],["rgb",3]],[[]],[[]],[[],["bgr",3]],[[]],[[],["luma",3]],[[]],[[],["rgba",3]],[[],["bgra",3]],[[]],[[]],[[],["lumaa",3]],[[]],[[]],[[["imageformat",4]],["imageoutputformat",4]],[[]],[[]],[[]],[[]],[[],["rgb",3]],[[],["bgr",3]],[[],["luma",3]],[[],["rgba",3]],[[],["bgra",3]],[[],["lumaa",3]],[[],[["imageerror",4],["result",4,["dynamicimage","imageerror"]],["dynamicimage",4]]],[[],[["option",4,["imageformat"]],["imageformat",4]]],[[["u32",15]],[["imagebuffer",3,["vec"]],["vec",3,["global"]]]],[[["u32",15]],["delay",3]],[[["rgba",3,["u8"]],["vec",3,["u8","global"]],["u32",15],["imagebuffer",3,["rgba","vec"]],["delay",3]],["frame",3]],[[],[["imageformat",4],["result",4,["imageformat","imageerror"]],["imageerror",4]]],[[["u32",15]],[["imagebuffer",3,["vec"]],["vec",3,["global"]]]],[[["u32",15]],[["imagebuffer",3],["option",4,["imagebuffer"]]]],[[["duration",3]],["delay",3]],[[]],[[],["rgb",3]],[[],["bgr",3]],[[],["luma",3]],[[],["rgba",3]],[[],["bgra",3]],[[],["lumaa",3]],[[]],[[],["rgb",3]],[[],["bgr",3]],[[],["luma",3]],[[],["rgba",3]],[[],["bgra",3]],[[],["lumaa",3]],[[["vec",3,["global"]],["u32",15],["global",3]],[["imagebuffer",3,["vec"]],["option",4,["imagebuffer"]]]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[["u8",15],["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]],[["rgba",3,["u8"]],["u8",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]],["rgba",3]],[[["u8",15],["u32",15]],["option",4]],[[],["dynamicimage",4]],[[],[["imageformat",4],["result",4,["imageformat","imageerror"]],["imageerror",4]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[["i32",15]],["dynamicimage",4]],[[],[["result",4,["imageerror"]],["imageerror",4]]],[[],["option",4]],[[],["option",4]],null,[[["u32",15]],["bool",15]],[[["u8",15],["u32",15]],["bool",15]],[[["u8",15],["u32",15]],["usize",15]],[[["u8",15],["u32",15]],[["usize",15],["option",4,["usize"]]]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]],[["usize",15],["option",4,["usize"]]]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["imagebuffer",3,["bgr","vec"]],["bgr",3,["u8"]],["vec",3,["u8","global"]]]],[[],[["imagebuffer",3,["bgr","vec"]],["bgr",3,["u8"]],["vec",3,["u8","global"]]]],[[],[["bgra",3,["u8"]],["imagebuffer",3,["bgra","vec"]],["vec",3,["u8","global"]]]],[[],[["bgra",3,["u8"]],["imagebuffer",3,["bgra","vec"]],["vec",3,["u8","global"]]]],[[],[["imagebuffer",3,["rgba","vec"]],["rgba",3,["u8"]],["vec",3,["u8","global"]]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["flatsamples",3]],[[],["frames",3]],[[]],[[]],[[],[["imagebuffer",3,["luma","vec"]],["luma",3,["u8"]],["vec",3,["u8","global"]]]],[[],[["imagebuffer",3,["luma","vec"]],["luma",3,["u16"]],["vec",3,["u16","global"]]]],[[],[["imagebuffer",3,["luma","vec"]],["luma",3,["u8"]],["vec",3,["u8","global"]]]],[[],[["lumaa",3,["u8"]],["imagebuffer",3,["lumaa","vec"]],["vec",3,["u8","global"]]]],[[],[["imagebuffer",3,["lumaa","vec"]],["vec",3,["u16","global"]],["lumaa",3,["u16"]]]],[[],[["lumaa",3,["u8"]],["imagebuffer",3,["lumaa","vec"]],["vec",3,["u8","global"]]]],[[]],[[],[["result",4,["imageerror"]],["imageerror",4]]],[[],[["imagebuffer",3,["rgb","vec"]],["rgb",3,["u8"]],["vec",3,["u8","global"]]]],[[],[["imagebuffer",3,["rgb","vec"]],["rgb",3,["u16"]],["vec",3,["u16","global"]]]],[[],[["imagebuffer",3,["rgb","vec"]],["rgb",3,["u8"]],["vec",3,["u8","global"]]]],[[],[["imagebuffer",3,["rgba","vec"]],["rgba",3,["u8"]],["vec",3,["u8","global"]]]],[[],[["imagebuffer",3,["rgba","vec"]],["rgba",3,["u16"]],["vec",3,["u16","global"]]]],[[],[["imagebuffer",3,["rgba","vec"]],["rgba",3,["u8"]],["vec",3,["u8","global"]]]],[[],[["vec",3,["global"]],["global",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["normalform",4]],["bool",15]],null,[[],["u32",15]],[[["imageformat",4]],[["imageerror",4],["result",4,["dynamicimage","imageerror"]],["dynamicimage",4]]],[[],[["imageerror",4],["result",4,["dynamicimage","imageerror"]],["dynamicimage",4]]],[[["imageformat",4]],[["imageerror",4],["result",4,["dynamicimage","imageerror"]],["dynamicimage",4]]],[[]],[[],["rgb",3]],[[],["bgr",3]],[[],["luma",3]],[[],["rgba",3]],[[],["bgra",3]],[[],["lumaa",3]],[[]],[[["rgb",3]],["rgb",3]],[[["bgr",3]],["bgr",3]],[[["luma",3]],["luma",3]],[[["rgba",3]],["rgba",3]],[[["bgra",3]],["bgra",3]],[[["lumaa",3]],["lumaa",3]],[[]],[[],["rgb",3]],[[],["bgr",3]],[[],["luma",3]],[[],["rgba",3]],[[],["bgra",3]],[[],["lumaa",3]],[[]],null,[[],[["usize",15],["option",4,["usize"]]]],[[["delay",3]],["bool",15]],[[["imagebuffer",3]],["bool",15]],[[["colortype",4]],["bool",15]],[[["extendedcolortype",4]],["bool",15]],[[["rgb",3]],["bool",15]],[[["bgr",3]],["bool",15]],[[["luma",3]],["bool",15]],[[["rgba",3]],["bool",15]],[[["bgra",3]],["bool",15]],[[["lumaa",3]],["bool",15]],[[["dynamicimage",4]],["bool",15]],[[["imageformat",4]],["bool",15]],[[["imageoutputformat",4]],["bool",15]],[[["progress",3]],["bool",15]],[[["global",3],["box",3,["iterator","global"]],["iterator",8]],["frames",3]],[[["u32",15]],["subimage",3]],[[["imagebuffer",3,["rgba","vec"]],["rgba",3,["u8"]],["vec",3,["u8","global"]]],["frame",3]],[[["u32",15]],[["imagebuffer",3,["vec"]],["vec",3,["global"]]]],[[["u32",15]],["dynamicimage",4]],[[["u32",15]],["dynamicimage",4]],[[["u32",15]],["dynamicimage",4]],[[["u32",15]],["dynamicimage",4]],[[["u32",15]],["dynamicimage",4]],[[["u32",15]],["dynamicimage",4]],[[["u32",15]],["dynamicimage",4]],[[["u32",15]],["dynamicimage",4]],[[["u32",15]],["dynamicimage",4]],[[["u32",15]],["dynamicimage",4]],[[],[["option",4,["result"]],["result",4,["frame","imageerror"]]]],[[],["option",4]],[[]],[[],[["imageerror",4],["result",4,["dynamicimage","imageerror"]],["dynamicimage",4]]],[[],["extendedcolortype",4]],[[["delay",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["pixels",3]],[[],["pixels",3]],[[],["pixelsmut",3]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["rgba",3,["u8"]],["u32",15],["u8",15]]],[[],[["imageerror",4],["result",4,["imageerror"]]]],[[],[["imageerror",4],["result",4,["imageerror"]]]],[[["u32",15]],[["imageerror",4],["result",4,["imageerror"]]]],[[["u32",15]],[["imageerror",4],["result",4,["imageerror"]]]],[[],["u64",15]],[[["filtertype",4],["u32",15]],["dynamicimage",4]],[[["filtertype",4],["u32",15]],["dynamicimage",4]],[[["filtertype",4],["u32",15]],["dynamicimage",4]],[[],["dynamicimage",4]],[[],["dynamicimage",4]],[[],["dynamicimage",4]],[[],["rows",3]],[[],["rowsmut",3]],[[],["samplelayout",3]],null,[[],[["imageerror",4],["result",4,["imageerror"]]]],[[],[["imageerror",4],["result",4,["imageerror"]]]],[[["u32",15],["colortype",4]],[["imageerror",4],["result",4,["imageerror"]]]],[[["imageformat",4],["u32",15],["colortype",4]],[["imageerror",4],["result",4,["imageerror"]]]],[[["imageformat",4]],[["imageerror",4],["result",4,["imageerror"]]]],[[["imageformat",4]],[["imageerror",4],["result",4,["imageerror"]]]],[[],["u64",15]],[[["u8",15],["u32",15]]],[[],[["option",4,["error"]],["error",8]]],[[]],[[["u32",15]],["subimage",3]],[[["u32",15]],["subimage",3]],[[["u32",15]],["dynamicimage",4]],[[["u32",15]],["dynamicimage",4]],[[],["bgr",3]],[[],["bgr",3]],[[],["bgr",3]],[[],["bgr",3]],[[],["bgr",3]],[[],["bgr",3]],[[],["bgr",3]],[[],[["imagebuffer",3,["bgr","vec"]],["bgr",3,["u8"]],["vec",3,["u8","global"]]]],[[],[["imagebuffer",3,["bgr","vec"]],["bgr",3,["u8"]],["vec",3,["u8","global"]]]],[[],["bgra",3]],[[],["bgra",3]],[[],["bgra",3]],[[],["bgra",3]],[[],["bgra",3]],[[],["bgra",3]],[[],["bgra",3]],[[],[["bgra",3,["u8"]],["imagebuffer",3,["bgra","vec"]],["vec",3,["u8","global"]]]],[[],[["bgra",3,["u8"]],["imagebuffer",3,["bgra","vec"]],["vec",3,["u8","global"]]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[],[["vec",3,["global"]],["imagebuffer",3,["vec"]]]],[[],["luma",3]],[[],["luma",3]],[[],["luma",3]],[[],["luma",3]],[[],["luma",3]],[[],["luma",3]],[[],["luma",3]],[[],[["imagebuffer",3,["luma","vec"]],["luma",3,["u8"]],["vec",3,["u8","global"]]]],[[],[["imagebuffer",3,["luma","vec"]],["luma",3,["u16"]],["vec",3,["u16","global"]]]],[[],[["imagebuffer",3,["luma","vec"]],["luma",3,["u8"]],["vec",3,["u8","global"]]]],[[],["lumaa",3]],[[],["lumaa",3]],[[],["lumaa",3]],[[],["lumaa",3]],[[],["lumaa",3]],[[],["lumaa",3]],[[],["lumaa",3]],[[],[["lumaa",3,["u8"]],["imagebuffer",3,["lumaa","vec"]],["vec",3,["u8","global"]]]],[[],[["imagebuffer",3,["lumaa","vec"]],["vec",3,["u16","global"]],["lumaa",3,["u16"]]]],[[],[["lumaa",3,["u8"]],["imagebuffer",3,["lumaa","vec"]],["vec",3,["u8","global"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["rgb",3]],[[],["rgb",3]],[[],["rgb",3]],[[],["rgb",3]],[[],["rgb",3]],[[],["rgb",3]],[[],["rgb",3]],[[],[["imagebuffer",3,["rgb","vec"]],["rgb",3,["u8"]],["vec",3,["u8","global"]]]],[[],[["imagebuffer",3,["rgb","vec"]],["rgb",3,["u16"]],["vec",3,["u16","global"]]]],[[],[["imagebuffer",3,["rgb","vec"]],["rgb",3,["u8"]],["vec",3,["u8","global"]]]],[[],["rgba",3]],[[],["rgba",3]],[[],["rgba",3]],[[],["rgba",3]],[[],["rgba",3]],[[],["rgba",3]],[[],["rgba",3]],[[],[["imagebuffer",3,["rgba","vec"]],["rgba",3,["u8"]],["vec",3,["u8","global"]]]],[[],[["imagebuffer",3,["rgba","vec"]],["rgba",3,["u16"]],["vec",3,["u16","global"]]]],[[],[["imagebuffer",3,["rgba","vec"]],["rgba",3,["u8"]],["vec",3,["u8","global"]]]],[[],["string",3]],[[],[["vec",3,["global"]],["flatsamples",3,["vec"]]]],[[],["u32",15]],[[],["u64",15]],[[],["u64",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["imagebuffer"]],["imagebuffer",3]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["f32",15],["i32",15]],["dynamicimage",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["u32",15]],["subimage",3]],[[["u32",15]],["subimage",3]],[[],["u32",15]],[[],["u32",15]],[[["u32",15]],["flatsamples",3]],[[["u32",15],["colortype",4]],[["imageerror",4],["result",4,["imageerror"]]]],[[],[["imageerror",4],["result",4,["imageerror"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pixels",3]],[[],["rows",3]],[[],["enumeratepixels",3]],[[],["enumeraterows",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["option",4]],[[],["option",4]],[[],[["option",4,["pixels"]],["pixels",3]]],[[],[["pixelsmut",3],["option",4,["pixelsmut"]]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],[["option",4,["pixels"]],["pixels",3]]],[[],[["pixelsmut",3],["option",4,["pixelsmut"]]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["unsupportederrorkind",4]],[[],["parametererrorkind",4]],[[],["limiterrorkind",4]],[[],["imageformathint",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["unsupportederrorkind",4]],["bool",15]],[[["parametererrorkind",4]],["bool",15]],[[["limiterrorkind",4]],["bool",15]],[[["imageformathint",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[],["imageformathint",4]],[[],["imageformathint",4]],[[],["imageformathint",4]],[[]],[[["imageformathint",4]],["unsupportederror",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["imageformat",4]],["imageformathint",4]],[[["path",3]],["imageformathint",4]],[[["unsupportederrorkind",4],["imageformathint",4]],["unsupportederror",3]],[[["imageformathint",4]],["encodingerror",3]],[[["imageformathint",4]],["decodingerror",3]],[[["parametererrorkind",4]],["parametererror",3]],[[["limiterrorkind",4]],["limiterror",3]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["unsupportederrorkind",4]],[[],["parametererrorkind",4]],[[],["limiterrorkind",4]],[[["unsupportederrorkind",4]],["bool",15]],[[["parametererrorkind",4]],["bool",15]],[[["limiterrorkind",4]],["bool",15]],[[["imageformathint",4]],["bool",15]],[[["imageformathint",4]],["encodingerror",3]],[[["imageformathint",4]],["decodingerror",3]],[[],[["option",4,["error"]],["error",8]]],[[],[["option",4,["error"]],["error",8]]],[[],[["option",4,["error"]],["error",8]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["samplelayout",3]],[[],["view",3]],[[],["viewmut",3]],[[],["error",4]],[[],["normalform",4]],[[]],[[]],[[]],[[]],[[]],null,[[["u8",15],["u32",15]],["samplelayout",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["samplelayout",3]],["bool",15]],[[["error",4]],["bool",15]],[[["normalform",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[["usize",15]],["bool",15]],[[],["flatsamples",3]],[[],["flatsamples",3]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[["u8",15],["u32",15]],["option",4]],[[["u8",15],["u32",15]],["option",4]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u8",15],["u32",15]],["option",4]],[[["u8",15],["u32",15]],["option",4]],[[],["bool",15]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[["u8",15],["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u8",15],["u32",15]],["usize",15]],[[["u8",15],["u32",15]],[["usize",15],["option",4,["usize"]]]],[[["usize",15]],[["usize",15],["option",4,["usize"]]]],[[],["view",3]],[[],["viewmut",3]],[[],["viewmut",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["flatsamples",3]],[[],["flatsamples",3]],[[["normalform",4]],["bool",15]],null,[[],[["usize",15],["option",4,["usize"]]]],[[],["usize",15]],[[],["usize",15]],[[["samplelayout",3]],["bool",15]],[[["error",4]],["bool",15]],[[["normalform",4]],[["option",4,["ordering"]],["ordering",4]]],[[["u32",15]]],[[["u8",15],["u32",15]],["samplelayout",3]],[[]],[[]],null,[[["u8",15],["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["result",4,["viewmut"]],["viewmut",3]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["f32",15]],[["imagebuffer",3,["vec"]],["vec",3,["global"]]]],[[]],[[]],[[]],[[]],[[["i32",15]],[["vec",3,["global"]],["imagebuffer",3,["vec"]]]],[[],["bilevel",3]],[[],["filtertype",4]],[[]],[[]],null,[[["f32",15]],[["vec",3,["global"]],["imagebuffer",3,["vec"]]]],[[["u32",15]],["subimage",3]],[[["u32",15]],["subimage",3]],[[["imagebuffer",3]]],[[]],[[]],[[["filtertype",4]],["bool",15]],[[],[["vec",3,["global"]],["imagebuffer",3,["vec"]]]],[[],[["imagebuffer",3,["vec"]],["vec",3,["global"]]]],[[["imagebuffer",3]],[["imageerror",4],["result",4,["imageerror"]]]],[[]],[[],[["imagebuffer",3,["vec"]],["vec",3,["global"]]]],[[["imagebuffer",3]],[["imageerror",4],["result",4,["imageerror"]]]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[],[["luma",3],["imagebuffer",3,["luma","vec"]],["vec",3,["global"]]]],[[],["bool",15]],[[],["bool",15]],[[]],[[["i32",15]],[["vec",3,["global"]],["imagebuffer",3,["vec"]]]],[[["imagebuffer",3]],[["imagebuffer",3,["luma","vec"]],["luma",3,["u8"]],["vec",3,["u8","global"]]]],[[],["usize",15]],[[["luma",3]],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[]],[[["luma",3]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["filtertype",4],["u32",15]],[["imagebuffer",3,["vec"]],["vec",3,["global"]]]],[[],[["imagebuffer",3,["vec"]],["vec",3,["global"]]]],[[["imagebuffer",3]],[["imageerror",4],["result",4,["imageerror"]]]],[[]],[[],[["imagebuffer",3,["vec"]],["vec",3,["global"]]]],[[["imagebuffer",3]],[["imageerror",4],["result",4,["imageerror"]]]],[[],[["imagebuffer",3,["vec"]],["vec",3,["global"]]]],[[["imagebuffer",3]],[["imageerror",4],["result",4,["imageerror"]]]],[[["u32",15]],[["vec",3,["global"]],["imagebuffer",3,["vec"]]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[["f32",15],["i32",15]],[["vec",3,["global"]],["imagebuffer",3,["vec"]]]],[[],["option",4]],[[],["option",4]],[[]],null,null,null,[[["i32",15]],[["vec",3,["global"]],["imagebuffer",3,["vec"]]]],[[["i32",15]]],[[["f32",15]],[["vec",3,["global"]],["imagebuffer",3,["vec"]]]],[[["f32",15]]],[[["imagebuffer",3]]],[[],[["luma",3],["imagebuffer",3,["luma","vec"]],["vec",3,["global"]]]],[[],["bool",15]],[[["i32",15]],[["vec",3,["global"]],["imagebuffer",3,["vec"]]]],[[["i32",15]]],[[["imagebuffer",3]],[["imagebuffer",3,["luma","vec"]],["luma",3,["u8"]],["vec",3,["u8","global"]]]],[[],["usize",15]],[[]],[[["usize",15]],["option",4]],[[]],null,[[]],[[]],[[]],[[]],[[],[["imageerror",4],["result",4,["dynamicimage","imageerror"]],["dynamicimage",4]]],[[]],[[],[["option",4,["imageformat"]],["imageformat",4]]],[[]],[[]],[[]],[[]],[[],[["result",4,["imageerror"]],["imageerror",4]]],[[]],[[],["reader",3]],[[],[["result",4,["reader","error"]],["reader",3,["bufreader"]],["error",3]]],[[["imageformat",4]]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["option",4]],[[["imageformat",4]],["reader",3]],[[],[["error",3],["result",4,["reader","error"]],["reader",3]]],null,[[]],[[]],[[]],[[],["rect",3]],[[]],[[]],[[["rect",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[],["u64",15]],[[]],null,[[]],[[]],[[]],[[["rect",3]],["bool",15]],null,[[]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["option",4]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[["neuquant",3]],["neuquant",3]],[[],["bool",15]],[[["rgba",3]],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[["rgba",3]]],[[]],[[["usize",15],["i32",15]],["neuquant",3]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["option",4]],[[]],null,null,null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["spritesheet",3]]],[[["spritesheet",3]]],null,[[["option",4]],[["option",4,["spriteanimation"]],["spriteanimation",3]]],null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["figure",3]],[[["f32",15],["angle",4,["f32"]],["point",3,["f32"]]],["spriterotation",3]],[[["f32",15],["angle",4,["f32"]]],[["pixels",3],["spriterotation",3,["pixels"]]]],[[],["extentsrect",3]],[[],["rect",4]],[[],["sizedrect",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["path",3]],[[],["pathevent",4]],[[],["path",3]],[[],["shape",3]],[[]],[[],["point",3]],[[["figure",3,["f32"]],["f32",15],["point",3,["f32"]]],["shape",3]],null,[[["sizedrect",3,["u32","pixels"]],["u32",15],["pixels",3]],["target",3]],[[],["unknown",3]],[[],["target",3]],[[],["batch",3]],[[],["fill",3]],[[],["pathevent",4]],[[],["path",3]],[[],["stroke",3]],[[],["shape",3]],[[],["spritemap",3]],[[],["spritesheet",3]],[[],["spritesource",3]],[[],["spritesourcesublocation",3]],[[],["animationmode",4]],[[],["sprite",3]],[[],["spriteanimations",3]],[[],["spriteanimation",3]],[[],["spriteframe",3]],[[],["spriterotation",3]],[[],["font",3]],[[],["preparedspan",3]],[[],["texture",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pathbuilder",3]],null,null,[[["point",3]],["bool",15]],[[["f32",15],["point",3,["f32"]]],["pathbuilder",3]],[[],[["result",4,["spritesource","error"]],["spritesource",3],["error",4]]],[[],[["option",4,["str"]],["str",15]]],[[],["unknown",3]],[[],["batch",3]],[[],["fill",3]],[[],["path",3]],[[],["stroke",3]],[[],["shape",3]],[[],["spritemap",3]],[[],["spriterotation",3]],[[]],[[],["hashmap",3]],[[]],[[],[["unknown",3],["result",4,["unknown"]]]],null,[[],[["unknown",3],["sizedrect",3,["u32","unknown"]],["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],[["duration",3],["option",4,["duration"]]]],[[]],[[["texture",3]],["spritesource",3]],[[],[["option",4,["string"]],["string",3]]],[[["fill",3]],["shape",3]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],null,[[]],[[]],[[]],[[]],[[["scene",3]],["target",3]],[[["scene",3],["arc",3,["scene"]]],["target",3]],[[]],[[]],[[]],[[]],[[]],[[],["path",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["spriteanimations",3]],["sprite",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["dynamicimage",4]],["texture",3]],[[]],[[["spritesheet",3]],["spritemap",3]],[[["duration",3],["option",4,["duration"]]],[["result",4,["spritesource","error"]],["spritesource",3],["error",4]]],[[],["figure",3]],[[],["u64",15]],[[],["u64",15]],null,null,null,null,[[]],[[],[["extentsrect",3],["option",4,["extentsrect"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["texture",3]],["spritesource",3]],[[],["spritesource",3]],null,[[["f32",15],["point",3,["f32"]]],["pathbuilder",3]],[[],["stroke",3]],[[],[["result",4,["texture","error"]],["error",4],["texture",3]]],[[["str",15],["texture",3]],[["result",4,["sprite","error"]],["error",4],["sprite",3]]],null,null,null,[[],["sprite",3]],[[["figure",3,["f32","pixels"]],["f32",15],["pixels",3]],["vmetrics",3]],null,[[],["modifiers",3]],[[["scale",3,["f32"]],["f32",15]]],[[["scale",3,["f32"]],["f32",15]]],[[["scale",3,["f32"]],["f32",15]]],[[["f32",15],["point",3,["f32"]]],["pathbuilder",3]],[[["sender",3,["sceneevent"]],["sceneevent",4],["theme",4]],["scene",3]],[[["color",3]],["fill",3]],[[["color",3]],["stroke",3]],[[["hashmap",3,["spritesource","randomstate"]],["randomstate",3],["spritesource",3]],["spritemap",3]],[[["vec",3,["global"]],["u32",15],["texture",3],["size",3,["u32","unknown"]],["unknown",3],["global",3]],["spritesheet",3]],[[["u32",15],["texture",3],["unknown",3],["sizedrect",3,["u32","unknown"]]],["spritesource",3]],[[["spriteanimations",3]],["sprite",3]],[[["hashmap",3,["option","spriteanimation","randomstate"]],["spriteanimation",3],["randomstate",3],["option",4,["string"]]],["spriteanimations",3]],[[["spriteframe",3],["vec",3,["spriteframe","global"]],["global",3]],["spriteanimation",3]],[[["spritesource",3]],["spriteframe",3]],[[["imagebuffer",3,["rgba","vec"]],["arc",3,["imagebuffer"]]],["texture",3]],[[],[["pixels",3],["spriterotation",3,["pixels"]]]],[[],["instant",3]],null,[[["f32",15],["pixels",3],["vector",3,["f32","pixels"]]],["target",3]],[[["f32",15],["scaled",3],["point",3,["f32","scaled"]]],[["f32",15],["scaled",3],["point",3,["f32","scaled"]]]],[[["point",3,["f32","pixels"]],["f32",15],["pixels",3]],[["point",3,["f32","pixels"]],["f32",15],["pixels",3]]],[[]],null,null,[[],["point",3]],[[],["shape",3]],[[["font",3],["f32",15],["figure",3,["f32","scaled"]],["target",3],["str",15],["scaled",3],["color",3]],["preparedspan",3]],[[["f32",15],["point",3,["f32"]]],["pathbuilder",3]],[[],["shape",3]],[[],[["error",4],["result",4,["option","error"]],["option",4,["duration"]]]],[[["target",3]]],[[["target",3]]],[[["target",3]]],[[["f32",15],["target",3]]],[[["target",3]],[["error",4],["result",4,["error"]]]],[[["f32",15],["target",3]]],[[["f32",15],["target",3]]],[[["f32",15],["target",3]]],[[["target",3]]],[[],[["vec",3,["u8","global"]],["u8",15],["global",3]]],[[]],[[],["displayscale",3]],null,[[],[["option",4,["scene"]],["scene",3]]],[[],["result",4]],[[["option",4]],[["error",4],["result",4,["error"]]]],[[["f32",15],["points",3],["scale",3,["f32","points","pixels"]],["pixels",3]]],[[["u32",15],["pixels",3],["size",3,["u32","pixels"]]]],[[["theme",4]]],[[]],[[["texture",3]],["sprite",3]],[[],[["size",3,["f32","scaled"]],["f32",15],["scaled",3]]],[[],[["size",3,["u32","unknown"]],["unknown",3],["u32",15]]],[[],["size",3]],[[],[["pixels",3],["size",3,["u32","pixels"]],["u32",15]]],null,null,[[],[["option",4,["spritesource"]],["spritesource",3]]],[[],[["option",4,["spritesource"]],["spritesource",3]]],[[],[["option",4,["spritesource"]],["spritesource",3]]],[[],["spritemap",3]],[[],[["global",3],["spritesource",3],["vec",3,["spritesource","global"]]]],[[],[["global",3],["spritesource",3],["vec",3,["spritesource","global"]]]],[[]],[[["stroke",3]],["shape",3]],[[],["theme",4]],null,null,[[],[["size",3,["u32","unknown"]],["unknown",3],["u32",15]]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[],["point",3]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[],["size",3]],[[],["spritemap",3]],[[],["vector",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["texture","error"]],["error",4],["texture",3]]],[[],[["font",3],["option",4,["font"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],[["extentsrect",3],["option",4,["extentsrect"]]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["figure",3]],[[],[["result",4,["icon","badicon"]],["icon",3],["badicon",4]]],[[["duration",3]],["spriteframe",3]],[[["animationmode",4]],["spriteanimation",3]],[[["strokeoptions",3]],["stroke",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["bool",15]],null,[[]],[[]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["bool",15]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["unknown",3],["sizedrect",3,["u32","unknown"]],["u32",15]]],[[],["spritesourcelocation",4]],[[],["renderedsprite",3]],[[]],[[]],null,[[]],[[]],[[]],[[]],null,[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["textureformat",4]],[[]],[[]],[[]],[[],[["size",3,["u32","unknown"]],["unknown",3],["u32",15]]],null,null,[[],[["option",4,["spritesource"]],["spritesource",3]]],[[],[["global",3],["spritesource",3],["vec",3,["spritesource","global"]]]],null,null,[[],["textureformat",4]],[[],["textureformat",4]],[[],["textureformat",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["font",3]],[[],["font",3]],[[],["font",3]],[[],["font",3]],[[],["font",3]],[[],["font",3]],[[],["font",3]],[[],["font",3]],[[],["font",3]],[[],["font",3]],[[],["font",3]],[[],["font",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["roboto",3]]],[[["roboto_italic",3]]],[[["roboto_black",3]]],[[["roboto_black_italic",3]]],[[["roboto_bold",3]]],[[["roboto_bold_italic",3]]],[[["roboto_light",3]]],[[["roboto_light_italic",3]]],[[["roboto_medium",3]]],[[["roboto_medium_italic",3]]],[[["roboto_thin",3]]],[[["roboto_thin_italic",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,null,[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["vmetrics",3]],[[]],null,null,[[]],[[]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],null,[[["vmetrics",3]],["vmetrics",3]],[[]],[[]],[[]],null,null,[[],[["figure",3,["f32","pixels"]],["f32",15],["pixels",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],[["figure",3,["f32","pixels"]],["f32",15],["pixels",3]]],[[],[["point",3,["f32","pixels"]],["f32",15],["pixels",3]]],null,null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],[["figure",3,["f32","pixels"]],["f32",15],["pixels",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["logicalposition",3]],[[],["physicalposition",3]],[[],["logicalsize",3]],[[],["physicalsize",3]],[[],["logicalposition",3]],[[],["physicalposition",3]],[[],["logicalsize",3]],[[],["physicalsize",3]],[[],["size",4]],[[],["position",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["logicalposition",3]],[[],["physicalposition",3]],[[],["logicalsize",3]],[[],["physicalsize",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["logicalposition",3]],["bool",15]],[[["physicalposition",3]],["bool",15]],[[["logicalsize",3]],["bool",15]],[[["physicalsize",3]],["bool",15]],[[["size",4]],["bool",15]],[[["position",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[],["logicalposition",3]],[[]],[[],["logicalposition",3]],[[]],[[],["physicalposition",3]],[[],["physicalposition",3]],[[],["logicalsize",3]],[[]],[[],["logicalsize",3]],[[],["physicalsize",3]],[[]],[[],["physicalsize",3]],[[]],[[["logicalsize",3]],["size",4]],[[["physicalsize",3]],["size",4]],[[["physicalposition",3]],["position",4]],[[]],[[["logicalposition",3]],["position",4]],[[["f64",15]]],[[["f64",15]],["physicalposition",3]],[[["f64",15]],["physicalsize",3]],[[["f64",15]],["logicalposition",3]],[[["f64",15]],["logicalsize",3]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["logicalposition",3]],["bool",15]],[[["physicalposition",3]],["bool",15]],[[["logicalsize",3]],["bool",15]],[[["physicalsize",3]],["bool",15]],[[["size",4]],["bool",15]],[[["position",4]],["bool",15]],[[],["logicalposition",3]],[[],["physicalposition",3]],[[],["logicalsize",3]],[[],["physicalsize",3]],[[],["size",4]],[[],["position",4]],[[["f64",15]],["logicalposition",3]],[[["f64",15]],["logicalsize",3]],[[["f64",15]],["logicalsize",3]],[[["f64",15]],["logicalposition",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["f64",15]],["physicalposition",3]],[[["f64",15]],["physicalsize",3]],[[["f64",15]],["physicalsize",3]],[[["f64",15]],["physicalposition",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["f64",15]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["notsupportederror",3]],[[]],[[]],[[]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["modifiersstate",3]],[[],["bool",15]],[[["modifiersstate",3]],["modifiersstate",3]],[[["modifiersstate",3]]],[[["modifiersstate",3]],["modifiersstate",3]],[[["modifiersstate",3]]],[[],["u32",15]],[[["modifiersstate",3]],["modifiersstate",3]],[[["modifiersstate",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["event",4]],[[],["startcause",4]],[[],["windowevent",4]],[[],["deviceid",3]],[[],["deviceevent",4]],[[],["keyboardinput",3]],[[],["touchphase",4]],[[],["touch",3]],[[],["force",4]],[[],["elementstate",4]],[[],["mousebutton",4]],[[],["mousescrolldelta",4]],[[],["virtualkeycode",4]],[[],["modifiersstate",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["deviceid",3]],["ordering",4]],[[["virtualkeycode",4]],["ordering",4]],[[["modifiersstate",3]],["ordering",4]],[[],["modifiersstate",3]],[[["modifiersstate",3]],["bool",15]],[[],["bool",15]],[[],["modifiersstate",3]],null,[[["modifiersstate",3]],["modifiersstate",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["deviceid",3]],[[],["modifiersstate",3]],[[["event",4]],["bool",15]],[[["startcause",4]],["bool",15]],[[["windowevent",4]],["bool",15]],[[["deviceid",3]],["bool",15]],[[["deviceevent",4]],["bool",15]],[[["keyboardinput",3]],["bool",15]],[[["touchphase",4]],["bool",15]],[[["touch",3]],["bool",15]],[[["force",4]],["bool",15]],[[["elementstate",4]],["bool",15]],[[["mousebutton",4]],["bool",15]],[[["mousescrolldelta",4]],["bool",15]],[[["virtualkeycode",4]],["bool",15]],[[["modifiersstate",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["modifiersstate",3]],["modifiersstate",3]],[[["u32",15]],[["option",4,["modifiersstate"]],["modifiersstate",3]]],[[["u32",15]],["modifiersstate",3]],[[["u32",15]],["modifiersstate",3]],[[],["modifiersstate",3]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["modifiersstate",3]]],[[["modifiersstate",3]],["modifiersstate",3]],[[["modifiersstate",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],null,[[],["bool",15]],[[],[["result",4,["event","event"]],["event",4],["event",4]]],null,[[["event",4]],["bool",15]],[[["startcause",4]],["bool",15]],[[["windowevent",4]],["bool",15]],[[["deviceid",3]],["bool",15]],[[["deviceevent",4]],["bool",15]],[[["keyboardinput",3]],["bool",15]],[[["touch",3]],["bool",15]],[[["force",4]],["bool",15]],[[["mousebutton",4]],["bool",15]],[[["mousescrolldelta",4]],["bool",15]],[[["modifiersstate",3]],["bool",15]],[[],["f64",15]],[[],["modifiersstate",3]],[[["deviceid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["virtualkeycode",4]],[["option",4,["ordering"]],["ordering",4]]],[[["modifiersstate",3]],[["option",4,["ordering"]],["ordering",4]]],null,[[["modifiersstate",3]]],null,[[["modifiersstate",3],["bool",15]]],[[],["bool",15]],null,[[["modifiersstate",3]],["modifiersstate",3]],[[["modifiersstate",3]]],[[["modifiersstate",3]],["modifiersstate",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["event"]],["event",4]]],[[],[["windowevent",4],["option",4,["windowevent"]]]],[[["modifiersstate",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["modifiersstate",3]],["modifiersstate",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["eventloopproxy",3]],[[],["controlflow",4]],[[],["eventloopclosed",3]],[[]],[[]],[[]],[[],["eventloopproxy",3]],[[],["controlflow",4]],[[],["eventloopwindowtarget",3]],[[]],[[]],[[]],[[]],[[]],[[["controlflow",4]],["bool",15]],[[["eventloopclosed",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["controlflow",4]],["bool",15]],[[["eventloopclosed",3]],["bool",15]],[[],["eventloop",3]],[[],["eventloop",3]],[[],["eventloop",3]],[[],["eventloop",3]],[[],[["eventloop",3],["xnotsupported",4],["result",4,["eventloop","xnotsupported"]]]],[[],[["eventloop",3],["xnotsupported",4],["result",4,["eventloop","xnotsupported"]]]],[[],[["monitorhandle",3],["option",4,["monitorhandle"]]]],[[]],[[]],[[],[["eventloopclosed",3],["result",4,["eventloopclosed"]]]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["eventloop",3]],null,null,null,[[]],[[]],[[],["u16",15]],[[]],[[]],[[]],[[]],[[],["videomode",3]],[[],["monitorhandle",3]],[[]],[[]],[[["videomode",3]],["ordering",4]],[[["monitorhandle",3]],["ordering",4]],[[]],[[]],[[["videomode",3]],["bool",15]],[[["monitorhandle",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["monitorhandle",3]],[[],[["option",4,["string"]],["string",3]]],[[],["u32",15]],[[["videomode",3]],["bool",15]],[[["monitorhandle",3]],["bool",15]],[[["videomode",3]],[["option",4,["ordering"]],["ordering",4]]],[[["monitorhandle",3]],[["option",4,["ordering"]],["ordering",4]]],[[],[["i32",15],["physicalposition",3,["i32"]]]],[[],["u16",15]],[[],["f64",15]],[[],[["physicalsize",3,["u32"]],["u32",15]]],[[],[["physicalsize",3,["u32"]],["u32",15]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[]],null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["windowtype",4]],[[],["xnotsupported",4]],[[]],[[]],[[],["windowtype",4]],[[]],[[]],[[["windowtype",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[["openerror",3]],["xnotsupported",4]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["u32",15]],[[]],[[]],[[]],[[],[["result",4,["xnotsupported"]],["xnotsupported",4]]],[[],[["result",4,["xnotsupported"]],["xnotsupported",4]]],[[],[["option",4,["error"]],["error",8]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["string",3]]],[[]],[[["string",3]]],[[["string",3]]],[[["bool",15]]],[[]],[[["i32",15]]],[[]],[[["windowtype",4],["vec",3,["windowtype","global"]],["global",3]]],null,[[],["option",4]],[[],["option",4]],[[],[["i32",15],["option",4,["i32"]]]],[[],[["option",4,["u64"]],["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["xclasshint",3],["xsmartpointer",3,["xclasshint"]]]],[[],[["xsmartpointer",3,["xsizehints"]],["xsizehints",3]]],[[],[["xsmartpointer",3,["xwmhints"]],["xwmhints",3]]],[[],[["monitorhandle",3],["global",3],["vec",3,["monitorhandle","global"]]]],[[],[["monitorhandle",3],["global",3],["vec",3,["monitorhandle","global"]]]],[[],["u16",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15],["propmode",4]],["flusher",3]],[[],[["result",4,["xerror"]],["xerror",3]]],[[],["eventloopproxy",3]],[[],["videomode",3]],[[],["monitorhandle",3]],[[],["xerror",3]],[[],["windowid",3]],[[],["deviceid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["monitorhandle",3]],["ordering",4]],[[["windowid",3]],["ordering",4]],[[["deviceid",3]],["ordering",4]],[[],["eventloopproxy",3]],[[],["monitorhandle",3]],null,[[],["unownedwindow",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["externalerror",4],["result",4,["externalerror"]]]],[[]],[[]],[[],["monitorhandle",3]],[[],["windowid",3]],[[],["deviceid",3]],[[["videomode",3]],["bool",15]],[[["monitorhandle",3]],["bool",15]],[[["windowid",3]],["bool",15]],[[["deviceid",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[],[["result",4,["xerror"]],["xerror",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["fullscreen"]],["fullscreen",4]]],[[],["u64",15]],[[],["u64",15]],[[],[["result",4,["vec","xerror"]],["vec",3,["u64","global"]],["xerror",3]]],[[["u64",15]],["u64",15]],[[["u64",15]],["frameextentsheuristic",3]],[[["u64",15]],[["geometry",3],["xerror",3],["result",4,["geometry","xerror"]]]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[["aarect",3],["option",4,["aarect"]]],["monitorhandle",3]],[[["u64",15]],["motifhints",3]],[[["u64",15]],[["normalhints",3],["xerror",3],["result",4,["normalhints","xerror"]]]],[[],["option",4]],[[["u64",15]],[["getpropertyerror",4],["vec",3,["global"]],["result",4,["vec","getpropertyerror"]]]],[[["u64",15]],[["xsmartpointer",3,["xwmhints"]],["xerror",3],["result",4,["xsmartpointer","xerror"]]]],[[],[["option",4,["f64"]],["f64",15]]],[[]],[[]],[[]],[[]],[[],["windowid",3]],[[]],[[],[["result",4,["physicalposition","notsupportederror"]],["physicalposition",3,["i32"]],["notsupportederror",3]]],[[],[["physicalsize",3,["u32"]],["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["u64",15]],[["option",4,["bool"]],["bool",15]]],[[["u8",15]],["u64",15]],null,[[["xkeyevent",3]],["u64",15]],[[["xkeyevent",3]],["string",3]],null,[[],["monitorhandle",3]],[[],[["option",4,["string"]],["string",3]]],[[],["u32",15]],[[["videomode",3]],["bool",15]],[[["windowid",3]],["bool",15]],[[["deviceid",3]],["bool",15]],[[["platformspecificwindowbuilderattributes",3],["windowattributes",3],["eventloopwindowtarget",3]],[["result",4,["unownedwindow","oserror"]],["unownedwindow",3],["oserror",3]]],[[["option",4]],[["result",4,["xconnection","xnotsupported"]],["xconnection",3],["xnotsupported",4]]],[[["arc",3,["xconnection"]],["xconnection",3]],["eventloop",3]],[[["platformspecificwindowbuilderattributes",3],["windowattributes",3],["eventloopwindowtarget",3]],[["window",3],["oserror",3],["result",4,["window","oserror"]]]],[[],[["result",4,["physicalposition","notsupportederror"]],["physicalposition",3,["i32"]],["notsupportederror",3]]],[[],[["physicalsize",3,["u32"]],["u32",15]]],[[["monitorhandle",3]],[["option",4,["ordering"]],["ordering",4]]],[[["windowid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["deviceid",3]],[["option",4,["ordering"]],["ordering",4]]],[[],[["i32",15],["physicalposition",3,["i32"]]]],[[],["monitorhandle",3]],[[],["monitorhandle",3]],[[],["keymap",3]],[[["u64",15],["i32",15]],[["pointerstate",3],["xerror",3],["result",4,["pointerstate","xerror"]]]],[[],["xlibhandle",3]],[[],["u16",15]],null,[[]],[[["option",4,["userattentiontype"]],["userattentiontype",4]]],[[]],[[]],[[],["f64",15]],[[],["f64",15]],[[["u64",15],["i32",15]],["flusher",3]],[[["u64",15],["u32",15]],[["option",4,["flusher"]],["flusher",3]]],[[["u64",15]],[["result",4,["i32","xerror"]],["i32",15],["xerror",3]]],[[["u64",15],["option",4,["i64"]],["i64",15]],["flusher",3]],[[["u64",15],["option",4,["i64"]],["i64",15]],["flusher",3]],[[],[["eventloopclosed",3],["result",4,["eventloopclosed"]]]],[[["bool",15]]],[[["u64",15]],["result",4]],[[["bool",15]],[["externalerror",4],["result",4,["externalerror"]]]],[[["cursoricon",4]]],[[["u64",15],["option",4,["cursoricon"]],["cursoricon",4]]],[[["position",4]],[["externalerror",4],["result",4,["externalerror"]]]],[[["i32",15]],[["externalerror",4],["result",4,["externalerror"]]]],[[["bool",15]]],[[["bool",15]]],[[["option",4,["fullscreen"]],["fullscreen",4]]],[[["position",4]]],[[["size",4]]],[[["size",4],["option",4,["size"]]]],[[["bool",15]]],[[["size",4],["option",4,["size"]]]],[[["bool",15]]],[[["u64",15],["motifhints",3]],["flusher",3]],[[["u64",15],["normalhints",3]],["flusher",3]],[[["position",4]]],[[["bool",15]]],[[["str",15]]],[[["bool",15]]],[[["option",4,["icon"]],["icon",3]]],[[["u64",15],["xsmartpointer",3,["xwmhints"]],["xwmhints",3]],["flusher",3]],null,[[],[["physicalsize",3,["u32"]],["u32",15]]],[[],[["physicalsize",3,["u32"]],["u32",15]]],[[],[["result",4,["xerror"]],["xerror",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[["u64",15]],[["xerror",3],["result",4,["translatedcoords","xerror"]],["translatedcoords",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["u64",15]]],null,[[]],null,[[],["arc",3]],[[]],null,null,null,null,[[]],[[],["i32",15]],[[],["u64",15]],null,[[],[["arc",3,["xconnection"]],["xconnection",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i32",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i32",15]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i32",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["xcirculaterequestevent",3]],[[],["xscreensavernotifyevent",3]],[[],["xrroutputchangenotifyevent",3]],[[],["xselectionevent",3]],[[],["xrroutputpropertynotifyevent",3]],[[],["xanyevent",3]],[[],["xrrcrtcchangenotifyevent",3]],[[],["xgraphicsexposeevent",3]],[[],["xbuttonevent",3]],[[],["xerrorevent",3]],[[],["xclientmessageevent",3]],[[],["xselectionclearevent",3]],[[],["xfocuschangeevent",3]],[[],["xgenericeventcookie",3]],[[],["xrrnotifyevent",3]],[[],["xconfigureevent",3]],[[],["xconfigurerequestevent",3]],[[],["xnoexposeevent",3]],[[],["xmapevent",3]],[[],["xrrproviderchangenotifyevent",3]],[[],["xselectionrequestevent",3]],[[],["xcolormapevent",3]],[[],["xkeyevent",3]],[[],["xcrossingevent",3]],[[],["xmaprequestevent",3]],[[],["xreparentevent",3]],[[],["xpropertyevent",3]],[[],["xdestroywindowevent",3]],[[],["xmappingevent",3]],[[],["xresizerequestevent",3]],[[],["xunmapevent",3]],[[],["xexposeevent",3]],[[],["xcreatewindowevent",3]],[[],["xcirculateevent",3]],[[],["xrrproviderpropertynotifyevent",3]],[[],["xf86vidmodenotifyevent",3]],[[],["xrrscreenchangenotifyevent",3]],[[],["xrrresourcechangenotifyevent",3]],[[],["xmotionevent",3]],[[],["xvisibilityevent",3]],[[],["xkeymapevent",3]],[[],["xgravityevent",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["xf86vidmodenotifyevent",3]],[[],["xanyevent",3]],[[],["xmappingevent",3]],[[],["xdestroywindowevent",3]],[[],["xkeymapevent",3]],[[],["xcirculaterequestevent",3]],[[],["xunmapevent",3]],[[],["xnoexposeevent",3]],[[],["xrrproviderpropertynotifyevent",3]],[[],["xrrresourcechangenotifyevent",3]],[[],["xbuttonevent",3]],[[],["xconfigureevent",3]],[[],["xerrorevent",3]],[[],["xmapevent",3]],[[],["xmotionevent",3]],[[],["xclientmessageevent",3]],[[],["xmaprequestevent",3]],[[],["xrrcrtcchangenotifyevent",3]],[[],["xconfigurerequestevent",3]],[[],["xgraphicsexposeevent",3]],[[],["xselectionclearevent",3]],[[],["xreparentevent",3]],[[],["xrrscreenchangenotifyevent",3]],[[],["xgenericeventcookie",3]],[[],["xpropertyevent",3]],[[],["xrrnotifyevent",3]],[[],["xrrproviderchangenotifyevent",3]],[[],["xcirculateevent",3]],[[],["xcrossingevent",3]],[[],["xrroutputpropertynotifyevent",3]],[[],["xresizerequestevent",3]],[[],["xfocuschangeevent",3]],[[],["xvisibilityevent",3]],[[],["xexposeevent",3]],[[],["xkeyevent",3]],[[],["xselectionrequestevent",3]],[[],["xcreatewindowevent",3]],[[],["xgravityevent",3]],[[],["xscreensavernotifyevent",3]],[[],["xrroutputchangenotifyevent",3]],[[],["xselectionevent",3]],[[],["xcolormapevent",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["openerror",3]],[[],["xevent",19]],[[],["xanyevent",3]],[[],["xbuttonevent",3]],[[],["xcirculateevent",3]],[[],["xcirculaterequestevent",3]],[[],["xclientmessageevent",3]],[[],["xcolormapevent",3]],[[],["xconfigureevent",3]],[[],["xconfigurerequestevent",3]],[[],["xcreatewindowevent",3]],[[],["xcrossingevent",3]],[[],["xdestroywindowevent",3]],[[],["xerrorevent",3]],[[],["xexposeevent",3]],[[],["xfocuschangeevent",3]],[[],["xgraphicsexposeevent",3]],[[],["xgravityevent",3]],[[],["xkeyevent",3]],[[],["xkeymapevent",3]],[[],["xmapevent",3]],[[],["xmappingevent",3]],[[],["xmaprequestevent",3]],[[],["xmotionevent",3]],[[],["xnoexposeevent",3]],[[],["xpropertyevent",3]],[[],["xreparentevent",3]],[[],["xresizerequestevent",3]],[[],["xselectionclearevent",3]],[[],["xselectionevent",3]],[[],["xselectionrequestevent",3]],[[],["xunmapevent",3]],[[],["xvisibilityevent",3]],[[],["_xkbdesc",3]],[[],["_xkbkeyaliasrec",3]],[[],["_xkbkeynamerec",3]],[[],["_xkbnamesrec",3]],[[],["_xkbstaterec",3]],[[],["xkbanyevent",3]],[[],["xkbnewkeyboardnotifyevent",3]],[[],["_xkbmapnotifyevent",3]],[[],["xkbstatenotifyevent",3]],[[],["_xkbcontrolsnotifyevent",3]],[[],["xkbindicatornotifyevent",3]],[[],["_xkbnamesnotifyevent",3]],[[],["xkbcompatmapnotifyevent",3]],[[],["xkbbellnotifyevent",3]],[[],["xkbactionmessageevent",3]],[[],["xkbaccessxnotifyevent",3]],[[],["_xkbextensiondevicenotifyevent",3]],[[],["xkbevent",3]],[[],["depth",3]],[[],["screen",3]],[[],["screenformat",3]],[[],["visual",3]],[[],["xarc",3]],[[],["xchar2b",3]],[[],["xcharstruct",3]],[[],["xclasshint",3]],[[],["xcolor",3]],[[],["xcomposestatus",3]],[[],["xextcodes",3]],[[],["xfontprop",3]],[[],["xfontsetextents",3]],[[],["xfontstruct",3]],[[],["xgcvalues",3]],[[],["xgenericeventcookie",3]],[[],["xhostaddress",3]],[[],["xiconsize",3]],[[],["ximage",3]],[[],["xkeyboardcontrol",3]],[[],["xkeyboardstate",3]],[[],["xmbtextitem",3]],[[],["xmodifierkeymap",3]],[[],["xomcharsetlist",3]],[[],["xpixmapformatvalues",3]],[[],["xpoint",3]],[[],["xrectangle",3]],[[],["xrmoptiondescrec",3]],[[],["xrmvalue",3]],[[],["xsegment",3]],[[],["xsetwindowattributes",3]],[[],["xsizehints",3]],[[],["xstandardcolormap",3]],[[],["xtextitem",3]],[[],["xtextitem16",3]],[[],["xtextproperty",3]],[[],["xtimecoord",3]],[[],["xvisualinfo",3]],[[],["xwctextitem",3]],[[],["xwindowattributes",3]],[[],["xwindowchanges",3]],[[],["xwmhints",3]],[[],["ximcaretdirection",4]],[[],["ximcaretstyle",4]],[[],["ximpreeditdrawcallbackstruct",3]],[[],["ximpreeditcaretcallbackstruct",3]],[[],["ximtextstring",19]],[[],["ximtext",3]],[[],["aspectratio",3]],[[],["clientmessagedata",3]],[[],["imagefns",3]],[[],["_xcursoranimate",3]],[[],["_xcursorchunkheader",3]],[[],["_xcursorcomment",3]],[[],["_xcursorcomments",3]],[[],["_xcursorcursors",3]],[[],["_xcursorfile",3]],[[],["_xcursorfileheader",3]],[[],["_xcursorfiletoc",3]],[[],["_xcursorimage",3]],[[],["_xcursorimages",3]],[[],["xdevice",3]],[[],["xdevicecontrol",3]],[[],["xdeviceinfo",3]],[[],["xdevicestate",3]],[[],["xdevicetimecoord",3]],[[],["xextensionversion",3]],[[],["xfeedbackcontrol",3]],[[],["xfeedbackstate",3]],[[],["xinputclass",3]],[[],["xinputclassinfo",3]],[[],["xiaddmasterinfo",3]],[[],["xiremovemasterinfo",3]],[[],["xiattachslaveinfo",3]],[[],["xidetachslaveinfo",3]],[[],["xianyhierarchychangeinfo",3]],[[],["ximodifierstate",3]],[[],["xibuttonstate",3]],[[],["xivaluatorstate",3]],[[],["xieventmask",3]],[[],["xianyclassinfo",3]],[[],["xibuttonclassinfo",3]],[[],["xikeyclassinfo",3]],[[],["xivaluatorclassinfo",3]],[[],["xiscrollclassinfo",3]],[[],["xitouchclassinfo",3]],[[],["xideviceinfo",3]],[[],["xigrabmodifiers",3]],[[],["xibarrierreleasepointerinfo",3]],[[],["xievent",3]],[[],["xihierarchyinfo",3]],[[],["xihierarchyevent",3]],[[],["xidevicechangedevent",3]],[[],["xideviceevent",3]],[[],["xirawevent",3]],[[],["xienterevent",3]],[[],["xipropertyevent",3]],[[],["xitouchownershipevent",3]],[[],["xibarrierevent",3]],[[],["_xanimcursor",3]],[[],["_xcircle",3]],[[],["_xconicalgradient",3]],[[],["_xfilters",3]],[[],["_xglyphelt8",3]],[[],["_xglyphelt16",3]],[[],["_xglyphelt32",3]],[[],["_xglyphinfo",3]],[[],["_xindexvalue",3]],[[],["_xlineargradient",3]],[[],["_xlinefixed",3]],[[],["_xpointdouble",3]],[[],["_xpointfixed",3]],[[],["_xradialgradient",3]],[[],["xrendercolor",3]],[[],["xrenderdirectformat",3]],[[],["xrenderpictformat",3]],[[],["_xrenderpictureattributes",3]],[[],["_xspanfix",3]],[[],["_xtrap",3]],[[],["_xtrapezoid",3]],[[],["_xtriangle",3]],[[],["_xtransform",3]],[[],["xrrscreensize",3]],[[],["xrrmodeinfo",3]],[[],["xrrscreenresources",3]],[[],["xrroutputinfo",3]],[[],["xrrpropertyinfo",3]],[[],["xrrcrtcinfo",3]],[[],["xrrcrtcgamma",3]],[[],["xrrcrtctransformattributes",3]],[[],["xrrpanning",3]],[[],["xrrproviderresources",3]],[[],["xrrproviderinfo",3]],[[],["xrrmonitorinfo",3]],[[],["xrrscreenchangenotifyevent",3]],[[],["xrrnotifyevent",3]],[[],["xrroutputchangenotifyevent",3]],[[],["xrrcrtcchangenotifyevent",3]],[[],["xrroutputpropertynotifyevent",3]],[[],["xrrproviderchangenotifyevent",3]],[[],["xrrproviderpropertynotifyevent",3]],[[],["xrrresourcechangenotifyeventnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["clientmessagedata",3]],[[],["xiaddmasterinfo",3]],[[],["xiremovemasterinfo",3]],[[],["xiattachslaveinfo",3]],[[],["xidetachslaveinfo",3]],[[],["xianyhierarchychangeinfo",3]],[[],["ximodifierstate",3]],[[],["xibuttonstate",3]],[[],["xivaluatorstate",3]],[[],["xieventmask",3]],[[],["xianyclassinfo",3]],[[],["xibuttonclassinfo",3]],[[],["xikeyclassinfo",3]],[[],["xivaluatorclassinfo",3]],[[],["xiscrollclassinfo",3]],[[],["xitouchclassinfo",3]],[[],["xideviceinfo",3]],[[],["xigrabmodifiers",3]],[[],["xibarrierreleasepointerinfo",3]],[[],["xievent",3]],[[],["xihierarchyinfo",3]],[[],["xihierarchyevent",3]],[[],["xidevicechangedevent",3]],[[],["xideviceevent",3]],[[],["xirawevent",3]],[[],["xienterevent",3]],[[],["xipropertyevent",3]],[[],["xitouchownershipevent",3]],[[],["xibarrierevent",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],null,null,[[]],[[],["str",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["xanyevent",3]],["bool",15]],[[["xbuttonevent",3]],["bool",15]],[[["xcirculateevent",3]],["bool",15]],[[["xcirculaterequestevent",3]],["bool",15]],[[["xclientmessageevent",3]],["bool",15]],[[["xcolormapevent",3]],["bool",15]],[[["xconfigureevent",3]],["bool",15]],[[["xconfigurerequestevent",3]],["bool",15]],[[["xcreatewindowevent",3]],["bool",15]],[[["xcrossingevent",3]],["bool",15]],[[["xdestroywindowevent",3]],["bool",15]],[[["xerrorevent",3]],["bool",15]],[[["xexposeevent",3]],["bool",15]],[[["xfocuschangeevent",3]],["bool",15]],[[["xgraphicsexposeevent",3]],["bool",15]],[[["xgravityevent",3]],["bool",15]],[[["xkeyevent",3]],["bool",15]],[[["xkeymapevent",3]],["bool",15]],[[["xmapevent",3]],["bool",15]],[[["xmappingevent",3]],["bool",15]],[[["xmaprequestevent",3]],["bool",15]],[[["xmotionevent",3]],["bool",15]],[[["xnoexposeevent",3]],["bool",15]],[[["xpropertyevent",3]],["bool",15]],[[["xreparentevent",3]],["bool",15]],[[["xresizerequestevent",3]],["bool",15]],[[["xselectionclearevent",3]],["bool",15]],[[["xselectionevent",3]],["bool",15]],[[["xselectionrequestevent",3]],["bool",15]],[[["xunmapevent",3]],["bool",15]],[[["xvisibilityevent",3]],["bool",15]],[[["_xkbdesc",3]],["bool",15]],[[["_xkbkeyaliasrec",3]],["bool",15]],[[["_xkbkeynamerec",3]],["bool",15]],[[["_xkbnamesrec",3]],["bool",15]],[[["_xkbstaterec",3]],["bool",15]],[[["xkbanyevent",3]],["bool",15]],[[["xkbnewkeyboardnotifyevent",3]],["bool",15]],[[["_xkbmapnotifyevent",3]],["bool",15]],[[["xkbstatenotifyevent",3]],["bool",15]],[[["_xkbcontrolsnotifyevent",3]],["bool",15]],[[["xkbindicatornotifyevent",3]],["bool",15]],[[["_xkbnamesnotifyevent",3]],["bool",15]],[[["xkbcompatmapnotifyevent",3]],["bool",15]],[[["xkbbellnotifyevent",3]],["bool",15]],[[["xkbactionmessageevent",3]],["bool",15]],[[["xkbaccessxnotifyevent",3]],["bool",15]],[[["_xkbextensiondevicenotifyevent",3]],["bool",15]],[[["xkbevent",3]],["bool",15]],[[["depth",3]],["bool",15]],[[["screen",3]],["bool",15]],[[["screenformat",3]],["bool",15]],[[["visual",3]],["bool",15]],[[["xarc",3]],["bool",15]],[[["xchar2b",3]],["bool",15]],[[["xcharstruct",3]],["bool",15]],[[["xclasshint",3]],["bool",15]],[[["xcolor",3]],["bool",15]],[[["xcomposestatus",3]],["bool",15]],[[["xextcodes",3]],["bool",15]],[[["xfontprop",3]],["bool",15]],[[["xfontsetextents",3]],["bool",15]],[[["xfontstruct",3]],["bool",15]],[[["xgcvalues",3]],["bool",15]],[[["xgenericeventcookie",3]],["bool",15]],[[["xhostaddress",3]],["bool",15]],[[["xiconsize",3]],["bool",15]],[[["ximage",3]],["bool",15]],[[["xkeyboardcontrol",3]],["bool",15]],[[["xkeyboardstate",3]],["bool",15]],[[["xmbtextitem",3]],["bool",15]],[[["xmodifierkeymap",3]],["bool",15]],[[["xomcharsetlist",3]],["bool",15]],[[["xpixmapformatvalues",3]],["bool",15]],[[["xpoint",3]],["bool",15]],[[["xrectangle",3]],["bool",15]],[[["xrmoptiondescrec",3]],["bool",15]],[[["xrmvalue",3]],["bool",15]],[[["xsegment",3]],["bool",15]],[[["xsetwindowattributes",3]],["bool",15]],[[["xsizehints",3]],["bool",15]],[[["xstandardcolormap",3]],["bool",15]],[[["xtextitem",3]],["bool",15]],[[["xtextitem16",3]],["bool",15]],[[["xtextproperty",3]],["bool",15]],[[["xtimecoord",3]],["bool",15]],[[["xvisualinfo",3]],["bool",15]],[[["xwctextitem",3]],["bool",15]],[[["xwindowattributes",3]],["bool",15]],[[["xwindowchanges",3]],["bool",15]],[[["xwmhints",3]],["bool",15]],[[["ximcaretdirection",4]],["bool",15]],[[["ximcaretstyle",4]],["bool",15]],[[["ximpreeditdrawcallbackstruct",3]],["bool",15]],[[["ximpreeditcaretcallbackstruct",3]],["bool",15]],[[["aspectratio",3]],["bool",15]],[[["clientmessagedata",3]],["bool",15]],[[["imagefns",3]],["bool",15]],[[["xdevice",3]],["bool",15]],[[["xdevicecontrol",3]],["bool",15]],[[["xdeviceinfo",3]],["bool",15]],[[["xdevicestate",3]],["bool",15]],[[["xdevicetimecoord",3]],["bool",15]],[[["xextensionversion",3]],["bool",15]],[[["xfeedbackcontrol",3]],["bool",15]],[[["xfeedbackstate",3]],["bool",15]],[[["xinputclass",3]],["bool",15]],[[["xinputclassinfo",3]],["bool",15]],[[["_xanimcursor",3]],["bool",15]],[[["_xcircle",3]],["bool",15]],[[["_xconicalgradient",3]],["bool",15]],[[["_xfilters",3]],["bool",15]],[[["_xglyphelt8",3]],["bool",15]],[[["_xglyphelt16",3]],["bool",15]],[[["_xglyphelt32",3]],["bool",15]],[[["_xglyphinfo",3]],["bool",15]],[[["_xindexvalue",3]],["bool",15]],[[["_xlineargradient",3]],["bool",15]],[[["_xlinefixed",3]],["bool",15]],[[["_xpointdouble",3]],["bool",15]],[[["_xpointfixed",3]],["bool",15]],[[["_xradialgradient",3]],["bool",15]],[[["xrendercolor",3]],["bool",15]],[[["xrenderdirectformat",3]],["bool",15]],[[["xrenderpictformat",3]],["bool",15]],[[["_xrenderpictureattributes",3]],["bool",15]],[[["_xspanfix",3]],["bool",15]],[[["_xtrap",3]],["bool",15]],[[["_xtrapezoid",3]],["bool",15]],[[["_xtriangle",3]],["bool",15]],[[["_xtransform",3]],["bool",15]],[[["xrrscreensize",3]],["bool",15]],[[["xrrmodeinfo",3]],["bool",15]],[[["xrrscreenresources",3]],["bool",15]],[[["xrroutputinfo",3]],["bool",15]],[[["xrrpropertyinfo",3]],["bool",15]],[[["xrrcrtcinfo",3]],["bool",15]],[[["xrrcrtcgamma",3]],["bool",15]],[[["xrrcrtctransformattributes",3]],["bool",15]],[[["xrrpanning",3]],["bool",15]],[[["xrrproviderresources",3]],["bool",15]],[[["xrrproviderinfo",3]],["bool",15]],[[["xrrmonitorinfo",3]],["bool",15]],[[["xrrscreenchangenotifyevent",3]],["bool",15]],[[["xrrnotifyevent",3]],["bool",15]],[[["xrroutputchangenotifyevent",3]],["bool",15]],[[["xrrcrtcchangenotifyevent",3]],["bool",15]],[[["xrroutputpropertynotifyevent",3]],["bool",15]],[[["xrrproviderchangenotifyevent",3]],["bool",15]],[[["xrrproviderpropertynotifyevent",3]],["bool",15]],[[["xrrresourcechangenotifyevent",3]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["xselectionevent",3]],["xevent",19]],[[["xf86vidmodenotifyevent",3]],["xevent",19]],[[["xrrcrtcchangenotifyevent",3]],["xevent",19]],[[["xunmapevent",3]],["xevent",19]],[[["xexposeevent",3]],["xevent",19]],[[["xrroutputpropertynotifyevent",3]],["xevent",19]],[[["xexposeevent",3]],["xevent",19]],[[["xrrnotifyevent",3]],["xevent",19]],[[["xconfigurerequestevent",3]],["xevent",19]],[[["xf86vidmodenotifyevent",3]],["xevent",19]],[[["xdestroywindowevent",3]],["xevent",19]],[[["xreparentevent",3]],["xevent",19]],[[["xgravityevent",3]],["xevent",19]],[[["xcrossingevent",3]],["xevent",19]],[[["xkeymapevent",3]],["xevent",19]],[[["xrrscreenchangenotifyevent",3]],["xevent",19]],[[["xfocuschangeevent",3]],["xevent",19]],[[["xgraphicsexposeevent",3]],["xevent",19]],[[["xunmapevent",3]],["xevent",19]],[[["xrrresourcechangenotifyevent",3]],["xevent",19]],[[["xmaprequestevent",3]],["xevent",19]],[[["xrrproviderpropertynotifyevent",3]],["xevent",19]],[[["xrroutputchangenotifyevent",3]],["xevent",19]],[[["xgenericeventcookie",3]],["xevent",19]],[[["xkeymapevent",3]],["xevent",19]],[[["xconfigureevent",3]],["xevent",19]],[[["xmotionevent",3]],["xevent",19]],[[["xmaprequestevent",3]],["xevent",19]],[[["xselectionrequestevent",3]],["xevent",19]],[[["xrroutputpropertynotifyevent",3]],["xevent",19]],[[["xnoexposeevent",3]],["xevent",19]],[[["xrrnotifyevent",3]],["xevent",19]],[[["xrrproviderchangenotifyevent",3]],["xevent",19]],[[["xgenericeventcookie",3]],["xevent",19]],[[["xcreatewindowevent",3]],["xevent",19]],[[["xbuttonevent",3]],["xevent",19]],[[["xreparentevent",3]],["xevent",19]],[[["xcirculaterequestevent",3]],["xevent",19]],[[["xresizerequestevent",3]],["xevent",19]],[[["xcirculaterequestevent",3]],["xevent",19]],[[["xkeyevent",3]],["xevent",19]],[[["xselectionrequestevent",3]],["xevent",19]],[[["xcolormapevent",3]],["xevent",19]],[[["xpropertyevent",3]],["xevent",19]],[[["xerrorevent",3]],["xevent",19]],[[["xresizerequestevent",3]],["xevent",19]],[[["xconfigureevent",3]],["xevent",19]],[[["xrrproviderpropertynotifyevent",3]],["xevent",19]],[[["xkeyevent",3]],["xevent",19]],[[["xgravityevent",3]],["xevent",19]],[[["xcirculateevent",3]],["xevent",19]],[[["xscreensavernotifyevent",3]],["xevent",19]],[[["xcirculateevent",3]],["xevent",19]],[[["xconfigurerequestevent",3]],["xevent",19]],[[["xerrorevent",3]],["xevent",19]],[[["xanyevent",3]],["xevent",19]],[[["xselectionclearevent",3]],["xevent",19]],[[["xanyevent",3]],["xevent",19]],[[["xcrossingevent",3]],["xevent",19]],[[["xclientmessageevent",3]],["xevent",19]],[[["xmappingevent",3]],["xevent",19]],[[["xcreatewindowevent",3]],["xevent",19]],[[["xbuttonevent",3]],["xevent",19]],[[["xcolormapevent",3]],["xevent",19]],[[["xrrscreenchangenotifyevent",3]],["xevent",19]],[[["xrrcrtcchangenotifyevent",3]],["xevent",19]],[[["xrrproviderchangenotifyevent",3]],["xevent",19]],[[["xmappingevent",3]],["xevent",19]],[[["xdestroywindowevent",3]],["xevent",19]],[[["xselectionevent",3]],["xevent",19]],[[["xrrresourcechangenotifyevent",3]],["xevent",19]],[[["xnoexposeevent",3]],["xevent",19]],[[["xscreensavernotifyevent",3]],["xevent",19]],[[["xvisibilityevent",3]],["xevent",19]],[[["xfocuschangeevent",3]],["xevent",19]],[[["xrroutputchangenotifyevent",3]],["xevent",19]],[[["xselectionclearevent",3]],["xevent",19]],[[["xmotionevent",3]],["xevent",19]],[[["xmapevent",3]],["xevent",19]],[[["xpropertyevent",3]],["xevent",19]],[[["xmapevent",3]],["xevent",19]],[[["xvisibilityevent",3]],["xevent",19]],[[["xclientmessageevent",3]],["xevent",19]],[[]],[[["xgraphicsexposeevent",3]],["xevent",19]],[[["xevent",19]],["xanyevent",3]],[[]],[[["xevent",19]],["xanyevent",3]],[[["xevent",19]],["xbuttonevent",3]],[[["xevent",19]],["xbuttonevent",3]],[[]],[[["xevent",19]],["xcirculateevent",3]],[[]],[[["xevent",19]],["xcirculateevent",3]],[[["xevent",19]],["xcirculaterequestevent",3]],[[]],[[["xevent",19]],["xcirculaterequestevent",3]],[[["xevent",19]],["xclientmessageevent",3]],[[]],[[["xevent",19]],["xclientmessageevent",3]],[[]],[[["xevent",19]],["xcolormapevent",3]],[[["xevent",19]],["xcolormapevent",3]],[[]],[[["xevent",19]],["xconfigureevent",3]],[[["xevent",19]],["xconfigureevent",3]],[[]],[[["xevent",19]],["xconfigurerequestevent",3]],[[["xevent",19]],["xconfigurerequestevent",3]],[[["xevent",19]],["xcreatewindowevent",3]],[[]],[[["xevent",19]],["xcreatewindowevent",3]],[[["xevent",19]],["xcrossingevent",3]],[[]],[[["xevent",19]],["xcrossingevent",3]],[[]],[[["xevent",19]],["xdestroywindowevent",3]],[[["xevent",19]],["xdestroywindowevent",3]],[[]],[[["xevent",19]],["xerrorevent",3]],[[["xevent",19]],["xerrorevent",3]],[[]],[[["xevent",19]],["xexposeevent",3]],[[["xevent",19]],["xexposeevent",3]],[[["xevent",19]],["xfocuschangeevent",3]],[[["xevent",19]],["xfocuschangeevent",3]],[[]],[[["xevent",19]],["xgraphicsexposeevent",3]],[[]],[[["xevent",19]],["xgraphicsexposeevent",3]],[[]],[[["xevent",19]],["xgravityevent",3]],[[["xevent",19]],["xgravityevent",3]],[[]],[[["xevent",19]],["xkeyevent",3]],[[["xevent",19]],["xkeyevent",3]],[[["xevent",19]],["xkeymapevent",3]],[[]],[[["xevent",19]],["xkeymapevent",3]],[[]],[[["xevent",19]],["xmapevent",3]],[[["xevent",19]],["xmapevent",3]],[[]],[[["xevent",19]],["xmappingevent",3]],[[["xevent",19]],["xmappingevent",3]],[[]],[[["xevent",19]],["xmaprequestevent",3]],[[["xevent",19]],["xmaprequestevent",3]],[[]],[[["xevent",19]],["xmotionevent",3]],[[["xevent",19]],["xmotionevent",3]],[[["xevent",19]],["xnoexposeevent",3]],[[]],[[["xevent",19]],["xnoexposeevent",3]],[[["xevent",19]],["xpropertyevent",3]],[[["xevent",19]],["xpropertyevent",3]],[[]],[[["xevent",19]],["xreparentevent",3]],[[["xevent",19]],["xreparentevent",3]],[[]],[[["xevent",19]],["xresizerequestevent",3]],[[]],[[["xevent",19]],["xresizerequestevent",3]],[[["xevent",19]],["xselectionclearevent",3]],[[]],[[["xevent",19]],["xselectionclearevent",3]],[[]],[[["xevent",19]],["xselectionevent",3]],[[["xevent",19]],["xselectionevent",3]],[[["xevent",19]],["xselectionrequestevent",3]],[[]],[[["xevent",19]],["xselectionrequestevent",3]],[[]],[[["xevent",19]],["xunmapevent",3]],[[["xevent",19]],["xunmapevent",3]],[[]],[[["xevent",19]],["xvisibilityevent",3]],[[["xevent",19]],["xvisibilityevent",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["xevent",19]],["xgenericeventcookie",3]],[[["xevent",19]],["xgenericeventcookie",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["clientmessagedata",3]],[[],["clientmessagedata",3]],[[],["clientmessagedata",3]],[[],["clientmessagedata",3]],[[],["clientmessagedata",3]],[[],["clientmessagedata",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["xevent",19]],["xrrscreenchangenotifyevent",3]],[[["xevent",19]],["xrrscreenchangenotifyevent",3]],[[]],[[]],[[["xevent",19]],["xrrnotifyevent",3]],[[["xevent",19]],["xrrnotifyevent",3]],[[["xevent",19]],["xrroutputchangenotifyevent",3]],[[]],[[["xevent",19]],["xrroutputchangenotifyevent",3]],[[["xevent",19]],["xrrcrtcchangenotifyevent",3]],[[["xevent",19]],["xrrcrtcchangenotifyevent",3]],[[]],[[["xevent",19]],["xrroutputpropertynotifyevent",3]],[[["xevent",19]],["xrroutputpropertynotifyevent",3]],[[]],[[["xevent",19]],["xrrproviderchangenotifyevent",3]],[[]],[[["xevent",19]],["xrrproviderchangenotifyevent",3]],[[["xevent",19]],["xrrproviderpropertynotifyevent",3]],[[["xevent",19]],["xrrproviderpropertynotifyevent",3]],[[]],[[["xevent",19]],["xrrresourcechangenotifyevent",3]],[[["xevent",19]],["xrrresourcechangenotifyevent",3]],[[]],[[]],null,null,null,null,null,null,[[["usize",15]],["i8",15]],[[["usize",15]],["i64",15]],null,[[["usize",15]],["i16",15]],[[],["i32",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullnull,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["openerrorkind",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["xanyevent",3]],["bool",15]],[[["xbuttonevent",3]],["bool",15]],[[["xcirculateevent",3]],["bool",15]],[[["xcirculaterequestevent",3]],["bool",15]],[[["xclientmessageevent",3]],["bool",15]],[[["xcolormapevent",3]],["bool",15]],[[["xconfigureevent",3]],["bool",15]],[[["xconfigurerequestevent",3]],["bool",15]],[[["xcreatewindowevent",3]],["bool",15]],[[["xcrossingevent",3]],["bool",15]],[[["xdestroywindowevent",3]],["bool",15]],[[["xerrorevent",3]],["bool",15]],[[["xexposeevent",3]],["bool",15]],[[["xfocuschangeevent",3]],["bool",15]],[[["xgraphicsexposeevent",3]],["bool",15]],[[["xgravityevent",3]],["bool",15]],[[["xkeyevent",3]],["bool",15]],[[["xkeymapevent",3]],["bool",15]],[[["xmapevent",3]],["bool",15]],[[["xmappingevent",3]],["bool",15]],[[["xmaprequestevent",3]],["bool",15]],[[["xmotionevent",3]],["bool",15]],[[["xnoexposeevent",3]],["bool",15]],[[["xpropertyevent",3]],["bool",15]],[[["xreparentevent",3]],["bool",15]],[[["xresizerequestevent",3]],["bool",15]],[[["xselectionclearevent",3]],["bool",15]],[[["xselectionevent",3]],["bool",15]],[[["xselectionrequestevent",3]],["bool",15]],[[["xunmapevent",3]],["bool",15]],[[["xvisibilityevent",3]],["bool",15]],[[["_xkbdesc",3]],["bool",15]],[[["_xkbkeyaliasrec",3]],["bool",15]],[[["_xkbkeynamerec",3]],["bool",15]],[[["_xkbnamesrec",3]],["bool",15]],[[["_xkbstaterec",3]],["bool",15]],[[["xkbanyevent",3]],["bool",15]],[[["xkbnewkeyboardnotifyevent",3]],["bool",15]],[[["_xkbmapnotifyevent",3]],["bool",15]],[[["xkbstatenotifyevent",3]],["bool",15]],[[["_xkbcontrolsnotifyevent",3]],["bool",15]],[[["xkbindicatornotifyevent",3]],["bool",15]],[[["_xkbnamesnotifyevent",3]],["bool",15]],[[["xkbcompatmapnotifyevent",3]],["bool",15]],[[["xkbbellnotifyevent",3]],["bool",15]],[[["xkbactionmessageevent",3]],["bool",15]],[[["xkbaccessxnotifyevent",3]],["bool",15]],[[["_xkbextensiondevicenotifyevent",3]],["bool",15]],[[["xkbevent",3]],["bool",15]],[[["depth",3]],["bool",15]],[[["screen",3]],["bool",15]],[[["screenformat",3]],["bool",15]],[[["visual",3]],["bool",15]],[[["xarc",3]],["bool",15]],[[["xchar2b",3]],["bool",15]],[[["xcharstruct",3]],["bool",15]],[[["xclasshint",3]],["bool",15]],[[["xcolor",3]],["bool",15]],[[["xcomposestatus",3]],["bool",15]],[[["xextcodes",3]],["bool",15]],[[["xfontprop",3]],["bool",15]],[[["xfontsetextents",3]],["bool",15]],[[["xfontstruct",3]],["bool",15]],[[["xgcvalues",3]],["bool",15]],[[["xgenericeventcookie",3]],["bool",15]],[[["xhostaddress",3]],["bool",15]],[[["xiconsize",3]],["bool",15]],[[["ximage",3]],["bool",15]],[[["xkeyboardcontrol",3]],["bool",15]],[[["xkeyboardstate",3]],["bool",15]],[[["xmbtextitem",3]],["bool",15]],[[["xmodifierkeymap",3]],["bool",15]],[[["xomcharsetlist",3]],["bool",15]],[[["xpixmapformatvalues",3]],["bool",15]],[[["xpoint",3]],["bool",15]],[[["xrectangle",3]],["bool",15]],[[["xrmoptiondescrec",3]],["bool",15]],[[["xrmvalue",3]],["bool",15]],[[["xsegment",3]],["bool",15]],[[["xsetwindowattributes",3]],["bool",15]],[[["xsizehints",3]],["bool",15]],[[["xstandardcolormap",3]],["bool",15]],[[["xtextitem",3]],["bool",15]],[[["xtextitem16",3]],["bool",15]],[[["xtextproperty",3]],["bool",15]],[[["xtimecoord",3]],["bool",15]],[[["xvisualinfo",3]],["bool",15]],[[["xwctextitem",3]],["bool",15]],[[["xwindowattributes",3]],["bool",15]],[[["xwindowchanges",3]],["bool",15]],[[["xwmhints",3]],["bool",15]],[[["ximpreeditdrawcallbackstruct",3]],["bool",15]],[[["ximpreeditcaretcallbackstruct",3]],["bool",15]],[[["aspectratio",3]],["bool",15]],[[["clientmessagedata",3]],["bool",15]],[[["xdevice",3]],["bool",15]],[[["xdevicecontrol",3]],["bool",15]],[[["xdeviceinfo",3]],["bool",15]],[[["xdevicestate",3]],["bool",15]],[[["xdevicetimecoord",3]],["bool",15]],[[["xextensionversion",3]],["bool",15]],[[["xfeedbackcontrol",3]],["bool",15]],[[["xfeedbackstate",3]],["bool",15]],[[["xinputclass",3]],["bool",15]],[[["xinputclassinfo",3]],["bool",15]],[[["_xanimcursor",3]],["bool",15]],[[["_xcircle",3]],["bool",15]],[[["_xconicalgradient",3]],["bool",15]],[[["_xfilters",3]],["bool",15]],[[["_xglyphelt8",3]],["bool",15]],[[["_xglyphelt16",3]],["bool",15]],[[["_xglyphelt32",3]],["bool",15]],[[["_xglyphinfo",3]],["bool",15]],[[["_xindexvalue",3]],["bool",15]],[[["_xlineargradient",3]],["bool",15]],[[["_xlinefixed",3]],["bool",15]],[[["_xpointdouble",3]],["bool",15]],[[["_xpointfixed",3]],["bool",15]],[[["_xradialgradient",3]],["bool",15]],[[["xrendercolor",3]],["bool",15]],[[["xrenderdirectformat",3]],["bool",15]],[[["xrenderpictformat",3]],["bool",15]],[[["_xrenderpictureattributes",3]],["bool",15]],[[["_xspanfix",3]],["bool",15]],[[["_xtrap",3]],["bool",15]],[[["_xtrapezoid",3]],["bool",15]],[[["_xtriangle",3]],["bool",15]],[[["_xtransform",3]],["bool",15]],[[["xrrscreensize",3]],["bool",15]],[[["xrrmodeinfo",3]],["bool",15]],[[["xrrscreenresources",3]],["bool",15]],[[["xrroutputinfo",3]],["bool",15]],[[["xrrpropertyinfo",3]],["bool",15]],[[["xrrcrtcinfo",3]],["bool",15]],[[["xrrcrtcgamma",3]],["bool",15]],[[["xrrcrtctransformattributes",3]],["bool",15]],[[["xrrpanning",3]],["bool",15]],[[["xrrproviderresources",3]],["bool",15]],[[["xrrproviderinfo",3]],["bool",15]],[[["xrrmonitorinfo",3]],["bool",15]],[[["xrrscreenchangenotifyevent",3]],["bool",15]],[[["xrrnotifyevent",3]],["bool",15]],[[["xrroutputchangenotifyevent",3]],["bool",15]],[[["xrrcrtcchangenotifyevent",3]],["bool",15]],[[["xrroutputpropertynotifyevent",3]],["bool",15]],[[["xrrproviderchangenotifyevent",3]],["bool",15]],[[["xrrproviderpropertynotifyevent",3]],["bool",15]],[[["xrrresourcechangenotifyevent",3]],["bool",15]],[[["openerrorkind",4],["string",3]],["openerror",3]],[[],["clientmessagedata",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["result",4,["xlib","openerror"]],["xlib",3],["openerror",3]]],[[],[["xcursor",3],["result",4,["xcursor","openerror"]],["openerror",3]]],[[],[["result",4,["xinput","openerror"]],["xinput",3],["openerror",3]]],[[],[["result",4,["xinput2","openerror"]],["openerror",3],["xinput2",3]]],[[],[["result",4,["xlib_xcb","openerror"]],["xlib_xcb",3],["openerror",3]]],[[],[["openerror",3],["xrender",3],["result",4,["xrender","openerror"]]]],[[],[["result",4,["xrandr","openerror"]],["openerror",3],["xrandr",3]]],[[],[["openerror",3],["xrandr_2_2_0",3],["result",4,["xrandr_2_2_0","openerror"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15],["i8",15]]],[[["usize",15],["i64",15]]],[[["usize",15],["i16",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullstring",3]],null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["f64",15]],null,null,[[],["format",4]],[[],["aarect",3]],[[],["frameextents",3]],[[],["logicalframeextents",3]],[[],["frameextentsheuristicpath",4]],[[],["frameextentsheuristic",3]],[[],["getpropertyerror",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["format",4]],["ordering",4]],[[["i64",15]],["bool",15]],[[],["translatedcoords",3]],[[],["geometry",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["format",4]],["bool",15]],[[["aarect",3]],["bool",15]],[[["frameextentsheuristicpath",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["result",4,["xerror"]],["xerror",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["bool",15]],["stateoperation",4]],[[]],[[]],[[["u64",15]],["frameextents",3]],[[["usize",15]],[["format",4],["option",4,["format"]]]],[[],["usize",15]],[[],["modifiersstate",3]],[[["aarect",3]],["i64",15]],[[],["option",4]],null,[[],["bool",15]],null,null,[[["u64",15]],["bool",15]],[[["i32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]],["bool",15]],null,null,null,[[["option",4]],["bool",15]],null,[[["aarect",3]],["bool",15]],[[],["motifhints",3]],[[["xconnection",3]],["normalhints",3]],[[["xconnection",3]],[["option",4,["xsmartpointer"]],["xsmartpointer",3]]],[[["xconnection",3]],["flusher",3]],[[],["aarect",3]],[[["u64",15]],["frameextents",3]],[[["format",4]],[["option",4,["ordering"]],["ordering",4]]],null,[[]],null,null,null,null,null,null,null,[[["option",4]]],[[["bool",15]]],[[["option",4]]],[[["bool",15]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[["option",4]]],[[],[["result",4,["xerror"]],["xerror",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["keymapiter",3]],[[],[["option",4,["u8"]],["u8",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["modifier",4]],[[],["modifierkeystate",3]],[[]],[[]],[[],["modifierkeymap",3]],[[],["modifierkeystate",3]],[[]],[[]],[[]],[[["modifier",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[["u8",15]],[["option",4,["modifier"]],["modifier",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u8",15],["elementstate",4],["modifier",4]]],[[["u8",15],["modifier",4]]],[[["u8",15]]],[[],["modifiersstate",3]],[[],["modifierkeymap",3]],[[["xconnection",3]]],[[["xmodifierkeymap",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["modifierkeymap",3]]],[[["option",4,["modifier"]],["modifier",4],["modifiersstate",3]],[["option",4,["modifiersstate"]],["modifiersstate",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["eventloopwindowtarget",3]],[["window",3],["oserror",3],["result",4,["window","oserror"]]]],[[],["icon",3]],[[],["windowid",3]],[[],["windowbuilder",3]],[[],["windowattributes",3]],[[],["cursoricon",4]],[[],["fullscreen",4]],[[],["theme",4]],[[],["userattentiontype",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["windowid",3]],["ordering",4]],[[],[["monitorhandle",3],["option",4,["monitorhandle"]]]],null,[[],["windowbuilder",3]],[[],["windowattributes",3]],[[],["cursoricon",4]],[[],["userattentiontype",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["externalerror",4],["result",4,["externalerror"]]]],[[]],[[],["windowid",3]],[[["windowid",3]],["bool",15]],[[["cursoricon",4]],["bool",15]],[[["fullscreen",4]],["bool",15]],[[["theme",4]],["bool",15]],[[["userattentiontype",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[["windowbuilder",3]],["windowbuilder",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3,["u8","global"]],["u8",15],["u32",15],["global",3]],[["result",4,["icon","badicon"]],["icon",3],["badicon",4]]],[[],[["option",4,["fullscreen"]],["fullscreen",4]]],null,[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[],["windowid",3]],[[],[["result",4,["physicalposition","notsupportederror"]],["physicalposition",3,["i32"]],["notsupportederror",3]]],[[],[["physicalsize",3,["u32"]],["u32",15]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],null,null,null,[[["windowid",3]],["bool",15]],[[["fullscreen",4]],["bool",15]],[[["eventloopwindowtarget",3]],[["window",3],["oserror",3],["result",4,["window","oserror"]]]],[[],["windowbuilder",3]],[[],[["result",4,["physicalposition","notsupportederror"]],["physicalposition",3,["i32"]],["notsupportederror",3]]],[[],[["physicalsize",3,["u32"]],["u32",15]]],[[["windowid",3]],[["option",4,["ordering"]],["ordering",4]]],null,[[],[["monitorhandle",3],["option",4,["monitorhandle"]]]],[[],["rawwindowhandle",4]],[[],["rawwindowhandle",4]],[[]],[[["option",4,["userattentiontype"]],["userattentiontype",4]]],null,[[],["f64",15]],[[["bool",15]]],[[["bool",15]],[["externalerror",4],["result",4,["externalerror"]]]],[[["cursoricon",4]]],[[],[["externalerror",4],["result",4,["externalerror"]]]],[[["bool",15]]],[[["bool",15]]],[[["option",4,["fullscreen"]],["fullscreen",4]]],[[]],[[]],[[["option",4]]],[[["bool",15]]],[[["option",4]]],[[["bool",15]]],[[]],[[["bool",15]]],[[["str",15]]],[[["bool",15]]],[[["option",4,["icon"]],["icon",3]]],[[],[["option",4,["error"]],["error",8]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,[[],["option",4]],[[],["option",4]],null,null,[[["bool",15]],["windowbuilder",3]],[[["string",3]],["windowbuilder",3]],[[],["windowbuilder",3]],[[["string",3]],["windowbuilder",3]],[[["bool",15]],["windowbuilder",3]],[[["option",4,["fullscreen"]],["fullscreen",4]],["windowbuilder",3]],[[["string",3]],["windowbuilder",3]],[[],["windowbuilder",3]],[[],["windowbuilder",3]],[[["bool",15]],["windowbuilder",3]],[[],["windowbuilder",3]],[[["bool",15]],["windowbuilder",3]],[[],["windowbuilder",3]],[[["bool",15]],["windowbuilder",3]],[[],["windowbuilder",3]],[[],["windowbuilder",3]],[[["bool",15]],["windowbuilder",3]],[[["bool",15]],["windowbuilder",3]],[[["option",4,["icon"]],["icon",3]],["windowbuilder",3]],[[["i32",15]],["windowbuilder",3]],[[],["windowbuilder",3]],[[["windowtype",4],["vec",3,["windowtype","global"]],["global",3]],["windowbuilder",3]],[[],["option",4]],[[],["option",4]],[[],[["i32",15],["option",4,["i32"]]]],[[],[["option",4,["u64"]],["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["f32",15],["points",3],["scale",3,["f32","scaled","points"]],["scaled",3]]],[[],["bool",15]],null,null,[[],["bool",15]],[[],["bool",15]],[[],["figure",3]],[[],["extentsrect",3]],[[],["rect",4]],[[],["sizedrect",3]],null,[[]],[[],["point",3]],null,[[["windowhandle",3]],[["result",4,["closeresponse","error"]],["closeresponse",4],["error",4]]],null,null,[[["point",3]],["bool",15]],[[],["bool",15]],null,null,null,null,[[]],null,[[],["windowbuilder",3]],[[],["figure",3]],null,null,null,null,[[]],[[],[["option",4,["point"]],["point",3,["i32","pixels"]]]],[[],[["size",3,["u32","points"]],["u32",15],["points",3]]],[[],["theme",4]],[[]],[[["redrawrequester",3],["windowhandle",3],["target",3]],[["result",4,["error"]],["error",4]]],[[],[["extentsrect",3],["option",4,["extentsrect"]]]],[[],["bool",15]],null,null,null,null,[[],["bool",15]],null,null,[[]],[[],["usize",15]],null,null,[[],["point",3]],[[["inputevent",3],["windowhandle",3],["redrawstatus",3],["target",3]],[["result",4,["error"]],["error",4]]],[[["windowhandle",3],["redrawstatus",3],["target",3],["char",15]],[["result",4,["error"]],["error",4]]],[[["windowhandle",3],["redrawstatus",3],["target",3]],[["result",4,["error"]],["error",4]]],[[],["bool",15]],[[]],null,[[],["bool",15]],[[]],[[],["size",3]],null,null,[[],[["option",4,["spritesource"]],["spritesource",3]]],[[],[["global",3],["spritesource",3],["vec",3,["spritesource","global"]]]],[[],[["option",4,["u16"]],["u16",15]]],null,null,[[],["option",4]],[[["displayscale",3]]],[[],["point",3]],[[["displayscale",3]]],[[["displayscale",3]]],[[],["size",3]],[[],["vector",3]],[[]],[[],["bool",15]],[[],[["extentsrect",3],["option",4,["extentsrect"]]]],[[["windowhandle",3],["redrawstatus",3],["target",3]],[["result",4,["error"]],["error",4]]],[[],["bool",15]],[[],["figure",3]],[[],["string",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[["size",6,["u32"]],["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["spritesource",3]]],[[["sprite",3]]],[[]],[[]],[[]],[[["spritesource",3]]],[[["sprite",3]]],[[["option",4,["duration"]],["duration",3]],[["result",6,["spritesource"]],["spritesource",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["size",6,["u32","scaled"]],["u32",15],["scaled",6]]],[[["option",4],["u32",15],["vec",3,["option"]],["size",6,["u32"]]]],[[["size",6,["u32","scaled"]],["u32",15],["size",6,["u32"]],["scaled",6]]],[[["point",6,["f32","scaled"]],["f32",15],["target",3],["scaled",6]],["result",6]],[[["point",6,["f32","scaled"]],["f32",15],["unknown",3],["scale",3,["f32","unknown","scaled"]],["target",3],["scaled",6]],["result",6]],[[["into",8,["persistenttilesource"]],["u32",15],["option",4],["point",6,["u32"]],["persistenttilesource",4]]],[[["into",8,["persistenttilesource"]],["u32",15],["option",4],["point",6,["u32"]],["persistenttilesource",4]],[["persistenttilesource",4],["option",4,["persistenttilesource"]]]],[[["size",6,["u32","scaled"]],["u32",15],["scaled",6]]],null,[[["point",6,["i32"]],["i32",15]],[["tile",3],["option",4,["tile"]]]],[[["point",6,["i32"]],["i32",15]],[["tile",3],["option",4,["tile"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],[["outofbounds",3],["result",4,["outofbounds"]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,null],"p":[[6,"PersistentTileMap"],[3,"WindowHandle"],[4,"Error"],[3,"SingleWindowApplication"],[3,"Runtime"],[3,"RedrawRequester"],[3,"RedrawStatus"],[3,"WindowBuilder"],[8,"Window"],[8,"WindowCreator"],[8,"Application"],[8,"OpenableWindow"],[13,"InternalWindowMessageSend"],[13,"Core"],[13,"Other"],[4,"VirtualKeyCode"],[4,"TouchPhase"],[4,"EventStatus"],[4,"Event"],[4,"MouseButton"],[4,"MouseScrollDelta"],[4,"ElementState"],[3,"InputEvent"],[13,"MouseButton"],[13,"MouseWheel"],[13,"Keyboard"],[13,"MouseMoved"],[13,"Other"],[13,"LineDelta"],[13,"PixelDelta"],[3,"Color"],[4,"Error"],[3,"FrameRenderer"],[8,"ShutdownCallback"],[13,"Image"],[13,"Json"],[13,"Tessellation"],[13,"SpriteParse"],[4,"BindingType"],[8,"Bind"],[3,"Binding"],[3,"BindingGroup"],[3,"BindingGroupLayout"],[13,"SampledTexture"],[3,"UniformBuffer"],[3,"Framebuffer"],[3,"IndexBuffer"],[3,"VertexBuffer"],[3,"DepthBuffer"],[8,"Canvas"],[3,"Rgba8"],[3,"Bgra8"],[3,"Rgba"],[3,"Device"],[4,"Error"],[13,"RequestDeviceError"],[4,"Angle"],[4,"Rect"],[8,"Displayable"],[3,"Size"],[3,"Point"],[3,"Vector"],[3,"Figure"],[3,"SizedRect"],[3,"ExtentsRect"],[3,"Points"],[3,"Pixels"],[3,"Scaled"],[3,"DisplayScale"],[3,"Scale"],[8,"Approx"],[8,"Rectlike"],[8,"Ceil"],[8,"Floor"],[8,"One"],[8,"Round"],[8,"Vectorlike"],[8,"Zero"],[13,"Radians"],[13,"Degrees"],[13,"Sized"],[13,"Extents"],[8,"AbsDiffEq"],[3,"AbsDiff"],[3,"Relative"],[3,"Ulps"],[8,"RelativeEq"],[8,"UlpsEq"],[8,"FloatConst"],[4,"FloatErrorKind"],[8,"Num"],[8,"Inv"],[8,"MulAdd"],[8,"Pow"],[8,"Float"],[8,"Signed"],[3,"ParseFloatError"],[8,"AsPrimitive"],[8,"CheckedAdd"],[8,"CheckedDiv"],[8,"CheckedMul"],[8,"CheckedNeg"],[8,"CheckedRem"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"CheckedSub"],[8,"PrimInt"],[8,"NumCast"],[8,"FromPrimitive"],[8,"One"],[8,"Zero"],[8,"Bounded"],[8,"MulAddAssign"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingMul"],[8,"SaturatingSub"],[8,"ToPrimitive"],[8,"WrappingAdd"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"WrappingSub"],[8,"FloatCore"],[8,"OverflowingAdd"],[8,"OverflowingMul"],[8,"OverflowingSub"],[8,"Real"],[3,"Frame"],[3,"Set"],[4,"BlendOp"],[4,"BlendFactor"],[8,"AbstractPipeline"],[3,"PipelineCore"],[3,"PipelineDescription"],[3,"Pipeline"],[3,"PipelineLayout"],[4,"Op"],[3,"ShaderStages"],[4,"PassOp"],[4,"VertexFormat"],[3,"RenderFrame"],[3,"Blending"],[3,"Renderer"],[3,"Sampler"],[3,"Shader"],[3,"Texture"],[3,"ScreenTransformation"],[3,"VertexLayout"],[8,"RenderPassExt"],[8,"Renderable"],[8,"RenderTarget"],[8,"Draw"],[13,"Clear"],[13,"Fill"],[13,"Blit"],[13,"Transfer"],[13,"Clear"],[3,"Features"],[3,"ColorWrites"],[3,"BlendState"],[3,"DownlevelFlags"],[4,"BlendOperation"],[4,"TextureAspect"],[4,"CompareFunction"],[4,"TextureFormat"],[3,"Color"],[3,"Backends"],[4,"Face"],[4,"Backend"],[4,"BindingResource"],[4,"BindingType"],[3,"PipelineStatisticsTypes"],[3,"BufferUsages"],[3,"TextureUsages"],[4,"FrontFace"],[4,"AddressMode"],[4,"LoadOp"],[4,"BlendFactor"],[4,"DeviceType"],[4,"TextureViewDimension"],[4,"TextureDimension"],[4,"StencilOperation"],[4,"TextureSampleType"],[4,"PresentMode"],[4,"PolygonMode"],[4,"VertexFormat"],[4,"SurfaceStatus"],[4,"PowerPreference"],[3,"StencilFaceState"],[4,"VertexStepMode"],[4,"PrimitiveTopology"],[4,"FilterMode"],[4,"SurfaceError"],[3,"BlendComponent"],[4,"QueryType"],[4,"SamplerBorderColor"],[4,"Error"],[4,"Maintain"],[4,"MapMode"],[4,"StorageTextureAccess"],[3,"TextureFormatFeatureFlags"],[4,"ShaderModel"],[4,"ShaderSource"],[4,"BufferBindingType"],[4,"IndexFormat"],[3,"Origin3d"],[3,"ShaderModuleDescriptor"],[3,"ShaderModuleDescriptorSpirV"],[3,"QuerySet"],[3,"Instance"],[3,"Adapter"],[3,"Device"],[3,"Buffer"],[3,"BufferSlice"],[3,"Texture"],[3,"TextureView"],[3,"Sampler"],[3,"Surface"],[3,"BindGroupLayout"],[3,"BindGroup"],[3,"ShaderModule"],[3,"PipelineLayout"],[3,"RenderPipeline"],[3,"ComputePipeline"],[3,"CommandBuffer"],[3,"CommandEncoder"],[3,"RenderPass"],[3,"ComputePass"],[3,"RenderBundleEncoder"],[3,"RenderBundle"],[3,"Queue"],[3,"BufferBinding"],[3,"Operations"],[3,"RenderPassColorAttachment"],[3,"RenderPassDepthStencilAttachment"],[3,"TextureViewDescriptor"],[3,"PipelineLayoutDescriptor"],[3,"SamplerDescriptor"],[3,"BindGroupEntry"],[3,"BindGroupDescriptor"],[3,"RenderPassDescriptor"],[3,"VertexBufferLayout"],[3,"VertexState"],[3,"FragmentState"],[3,"RenderPipelineDescriptor"],[3,"ComputePassDescriptor"],[3,"ComputePipelineDescriptor"],[3,"BindGroupLayoutDescriptor"],[3,"RenderBundleEncoderDescriptor"],[3,"SurfaceTexture"],[3,"RequestDeviceError"],[3,"BufferAsyncError"],[3,"BufferView"],[3,"BufferViewMut"],[3,"RequestAdapterOptionsBase"],[3,"Limits"],[3,"DownlevelCapabilities"],[3,"AdapterInfo"],[3,"ColorTargetState"],[3,"PrimitiveState"],[3,"MultisampleState"],[3,"TextureFormatFeatures"],[3,"StencilState"],[3,"DepthBiasState"],[3,"DepthStencilState"],[3,"VertexAttribute"],[3,"SurfaceConfiguration"],[3,"Extent3d"],[3,"PushConstantRange"],[3,"CommandBufferDescriptor"],[3,"RenderBundleDepthStencil"],[3,"ImageDataLayout"],[3,"BindGroupLayoutEntry"],[3,"ImageCopyBufferBase"],[3,"ImageCopyTextureBase"],[3,"ImageSubresourceRange"],[13,"Buffer"],[13,"BufferArray"],[13,"Sampler"],[13,"TextureView"],[13,"TextureViewArray"],[13,"StorageTexture"],[13,"Sampler"],[13,"Buffer"],[13,"Texture"],[13,"Storage"],[13,"ValidationError"],[13,"OutOfMemoryError"],[13,"Clear"],[13,"PipelineStatistics"],[13,"SpirV"],[13,"Wgsl"],[13,"Float"],[3,"StagingBelt"],[3,"DownloadBuffer"],[3,"BufferInitDescriptor"],[8,"DeviceExt"],[8,"RenderEncoder"],[3,"SendError"],[4,"TrySendError"],[4,"SendTimeoutError"],[4,"RecvError"],[4,"TryRecvError"],[4,"RecvTimeoutError"],[3,"Selector"],[3,"Sender"],[3,"Receiver"],[3,"Iter"],[3,"TryIter"],[3,"IntoIter"],[3,"Drain"],[13,"Timeout"],[13,"Disconnected"],[13,"Full"],[13,"Disconnected"],[3,"SendSink"],[3,"RecvFut"],[3,"RecvStream"],[3,"SendFut"],[4,"SelectError"],[3,"Rgb"],[3,"Bgr"],[3,"Luma"],[3,"Rgba"],[3,"Bgra"],[3,"LumaA"],[4,"ExtendedColorType"],[4,"ImageFormat"],[4,"ColorType"],[8,"Pixel"],[4,"ImageError"],[4,"DynamicImage"],[8,"GenericImage"],[8,"GenericImageView"],[8,"ImageDecoder"],[4,"ImageOutputFormat"],[3,"Frames"],[3,"SubImage"],[3,"FlatSamples"],[3,"Frame"],[3,"Delay"],[3,"ImageBuffer"],[3,"Progress"],[3,"Pixels"],[8,"EncodableLayout"],[8,"AnimationDecoder"],[8,"ImageDecoderExt"],[8,"ImageEncoder"],[13,"ImageLuma8"],[13,"ImageLumaA8"],[13,"ImageRgb8"],[13,"ImageRgba8"],[13,"ImageBgr8"],[13,"ImageBgra8"],[13,"ImageLuma16"],[13,"ImageLumaA16"],[13,"ImageRgb16"],[13,"ImageRgba16"],[13,"Unknown"],[13,"Decoding"],[13,"Encoding"],[13,"Parameter"],[13,"Limits"],[13,"Unsupported"],[13,"IoError"],[13,"Unsupported"],[3,"Pixels"],[3,"PixelsMut"],[3,"Rows"],[3,"RowsMut"],[3,"EnumeratePixels"],[3,"EnumerateRows"],[3,"EnumeratePixelsMut"],[3,"EnumerateRowsMut"],[8,"ConvertBuffer"],[4,"UnsupportedErrorKind"],[4,"LimitErrorKind"],[4,"ParameterErrorKind"],[4,"ImageFormatHint"],[3,"UnsupportedError"],[3,"EncodingError"],[3,"ParameterError"],[3,"DecodingError"],[3,"LimitError"],[13,"Exact"],[13,"Name"],[13,"PathExtension"],[13,"Generic"],[13,"Color"],[13,"Format"],[13,"GenericFeature"],[4,"NormalForm"],[4,"Error"],[3,"SampleLayout"],[3,"View"],[3,"ViewMut"],[13,"NormalFormRequired"],[13,"WrongColor"],[4,"FilterType"],[8,"ColorMap"],[3,"BiLevel"],[3,"Reader"],[3,"Rect"],[3,"NeuQuant"],[8,"__Deref"],[4,"PathEvent"],[4,"AnimationMode"],[3,"PathBuilder"],[4,"Text"],[3,"Unknown"],[3,"Scene"],[3,"Target"],[3,"Batch"],[3,"Fill"],[3,"Path"],[3,"Stroke"],[3,"Shape"],[3,"SpriteMap"],[3,"SpriteSheet"],[3,"SpriteSource"],[3,"SpriteSourceSublocation"],[3,"Sprite"],[3,"SpriteAnimations"],[3,"SpriteAnimation"],[3,"SpriteFrame"],[3,"SpriteRotation"],[3,"Font"],[3,"PreparedSpan"],[3,"Texture"],[8,"SpriteCollection"],[13,"Begin"],[13,"End"],[13,"Quadratic"],[13,"Cubic"],[13,"Line"],[4,"SceneEvent"],[4,"Element"],[3,"Modifiers"],[13,"Shape"],[13,"Sprite"],[13,"Text"],[13,"Render"],[13,"BeginFrame"],[4,"SpriteSourceLocation"],[8,"VertexShaderSource"],[3,"Srgb"],[3,"Normal"],[3,"RenderedSprite"],[13,"Rect"],[13,"Joined"],[3,"ROBOTO"],[3,"ROBOTO_ITALIC"],[3,"ROBOTO_BLACK"],[3,"ROBOTO_BLACK_ITALIC"],[3,"ROBOTO_BOLD"],[3,"ROBOTO_BOLD_ITALIC"],[3,"ROBOTO_LIGHT"],[3,"ROBOTO_LIGHT_ITALIC"],[3,"ROBOTO_MEDIUM"],[3,"ROBOTO_MEDIUM_ITALIC"],[3,"ROBOTO_THIN"],[3,"ROBOTO_THIN_ITALIC"],[3,"VMetrics"],[3,"PreparedSpanData"],[3,"GlyphInfo"],[4,"Size"],[4,"Position"],[3,"LogicalPosition"],[3,"PhysicalPosition"],[3,"LogicalSize"],[3,"PhysicalSize"],[8,"Pixel"],[13,"Physical"],[13,"Logical"],[13,"Physical"],[13,"Logical"],[4,"ExternalError"],[3,"NotSupportedError"],[3,"OsError"],[13,"NotSupported"],[13,"Os"],[3,"ModifiersState"],[4,"DeviceEvent"],[4,"WindowEvent"],[4,"Force"],[4,"Event"],[4,"StartCause"],[3,"DeviceId"],[3,"KeyboardInput"],[3,"Touch"],[13,"Key"],[13,"Motion"],[13,"Button"],[13,"Text"],[13,"MouseMotion"],[13,"MouseWheel"],[13,"NewEvents"],[13,"UserEvent"],[13,"RedrawRequested"],[13,"DeviceEvent"],[13,"WindowEvent"],[13,"Normalized"],[13,"Calibrated"],[13,"ResumeTimeReached"],[13,"WaitCancelled"],[13,"Resized"],[13,"Moved"],[13,"DroppedFile"],[13,"HoveredFile"],[13,"ReceivedCharacter"],[13,"Focused"],[13,"ModifiersChanged"],[13,"Touch"],[13,"ThemeChanged"],[13,"AxisMotion"],[13,"MouseInput"],[13,"MouseWheel"],[13,"KeyboardInput"],[13,"CursorMoved"],[13,"CursorEntered"],[13,"CursorLeft"],[13,"TouchpadPressure"],[13,"ScaleFactorChanged"],[3,"EventLoopClosed"],[4,"ControlFlow"],[3,"EventLoop"],[3,"EventLoopWindowTarget"],[3,"EventLoopProxy"],[13,"WaitUntil"],[3,"VideoMode"],[3,"MonitorHandle"],[8,"EventLoopExtRunReturn"],[4,"XWindowType"],[4,"XNotSupported"],[8,"WindowExtUnix"],[8,"EventLoopWindowTargetExtUnix"],[8,"MonitorHandleExtUnix"],[8,"EventLoopExtUnix"],[8,"WindowBuilderExtUnix"],[13,"LibraryOpenError"],[3,"UnownedWindow"],[3,"XConnection"],[3,"EventLoopWindowTarget"],[3,"EventLoop"],[3,"EventLoopProxy"],[3,"Window"],[3,"VideoMode"],[3,"MonitorHandle"],[3,"XError"],[3,"WindowId"],[3,"DeviceId"],[3,"Xlib"],[3,"XInput"],[4,"XEventQueueOwner"],[3,"Xlib_xcb"],[3,"XInput2"],[4,"XIMCaretDirection"],[4,"XIMCaretStyle"],[3,"Xrandr"],[3,"Xrandr_2_2_0"],[3,"Xrender"],[3,"Xcursor"],[3,"XIAnyHierarchyChangeInfo"],[3,"XIAddMasterInfo"],[3,"XIRemoveMasterInfo"],[3,"XIAttachSlaveInfo"],[3,"XIDetachSlaveInfo"],[3,"XIAnyClassInfo"],[3,"XIButtonClassInfo"],[3,"XIKeyClassInfo"],[3,"XIValuatorClassInfo"],[3,"XIScrollClassInfo"],[3,"XITouchClassInfo"],[3,"XIEvent"],[3,"XIHierarchyEvent"],[3,"XIDeviceChangedEvent"],[3,"XIDeviceEvent"],[3,"XIRawEvent"],[3,"XIEnterEvent"],[3,"XIPropertyEvent"],[3,"XITouchOwnershipEvent"],[3,"XIBarrierEvent"],[3,"XIDeviceInfo"],[3,"XIHierarchyInfo"],[3,"XConfigureEvent"],[3,"XConfigureRequestEvent"],[4,"_XDisplay"],[4,"xError"],[4,"xEvent"],[4,"_XGC"],[4,"_XIC"],[4,"_XIM"],[4,"_XRegion"],[4,"_XOC"],[4,"_XOM"],[4,"_XrmHashBucketRec"],[3,"_XcmsCCC"],[3,"XcmsColor"],[3,"_XcmsColorSpace"],[3,"_XcmsFunctionSet"],[3,"_XkbAction"],[3,"_XkbBounds"],[3,"_XkbChanges"],[3,"_XkbClientMapRec"],[3,"_XkbColor"],[3,"_XkbComponentList"],[3,"_XkbComponentNames"],[3,"_XkbControls"],[3,"_XkbControlsChanges"],[3,"_XkbControlsNotify"],[3,"_XkbDeviceChanges"],[3,"_XkbDeviceInfo"],[3,"_XkbDeviceLedInfo"],[3,"_XkbDoodad"],[3,"_XkbExtensionDeviceNotify"],[3,"_XkbGeometry"],[3,"_XkbGeometrySizes"],[3,"_XkbIndicatorMapRec"],[3,"_XkbKey"],[3,"_XkbKeyType"],[3,"_XkbMapChanges"],[3,"_XkbMods"],[3,"_XkbNameChanges"],[3,"_XkbNamesNotify"],[3,"_XkbOutline"],[3,"_XkbOverlay"],[3,"_XkbOverlayKey"],[3,"_XkbOverlayRow"],[3,"_XkbProperty"],[3,"_XkbRow"],[3,"_XkbSection"],[3,"_XkbServerMapRec"],[3,"_XkbShape"],[3,"_XkbSymInterpretRec"],[3,"_XkbCompatMapRec"],[3,"_XkbIndicatorRec"],[4,"XkbKbdDpyStateRec"],[3,"XExtData"],[3,"XIMCallback"],[3,"XICCallback"],[4,"_XAnyClassinfo"],[3,"OpenError"],[19,"XEvent"],[3,"XAnyEvent"],[3,"XButtonEvent"],[3,"XCirculateEvent"],[3,"XCirculateRequestEvent"],[3,"XClientMessageEvent"],[3,"XColormapEvent"],[3,"XCreateWindowEvent"],[3,"XCrossingEvent"],[3,"XDestroyWindowEvent"],[3,"XErrorEvent"],[3,"XExposeEvent"],[3,"XFocusChangeEvent"],[3,"XGraphicsExposeEvent"],[3,"XGravityEvent"],[3,"XKeyEvent"],[3,"XKeymapEvent"],[3,"XMapEvent"],[3,"XMappingEvent"],[3,"XMapRequestEvent"],[3,"XMotionEvent"],[3,"XNoExposeEvent"],[3,"XPropertyEvent"],[3,"XReparentEvent"],[3,"XResizeRequestEvent"],[3,"XSelectionClearEvent"],[3,"XSelectionEvent"],[3,"XSelectionRequestEvent"],[3,"XUnmapEvent"],[3,"XVisibilityEvent"],[3,"_XkbDesc"],[3,"_XkbKeyAliasRec"],[3,"_XkbKeyNameRec"],[3,"_XkbNamesRec"],[3,"_XkbStateRec"],[3,"XkbAnyEvent"],[3,"XkbNewKeyboardNotifyEvent"],[3,"_XkbMapNotifyEvent"],[3,"XkbStateNotifyEvent"],[3,"_XkbControlsNotifyEvent"],[3,"XkbIndicatorNotifyEvent"],[3,"_XkbNamesNotifyEvent"],[3,"XkbCompatMapNotifyEvent"],[3,"XkbBellNotifyEvent"],[3,"XkbActionMessageEvent"],[3,"XkbAccessXNotifyEvent"],[3,"_XkbExtensionDeviceNotifyEvent"],[3,"XkbEvent"],[3,"Depth"],[3,"Screen"],[3,"ScreenFormat"],[3,"Visual"],[3,"XArc"],[3,"XChar2b"],[3,"XCharStruct"],[3,"XClassHint"],[3,"XColor"],[3,"XComposeStatus"],[3,"XExtCodes"],[3,"XFontProp"],[3,"XFontSetExtents"],[3,"XFontStruct"],[3,"XGCValues"],[3,"XGenericEventCookie"],[3,"XHostAddress"],[3,"XIconSize"],[3,"XImage"],[3,"XKeyboardControl"],[3,"XKeyboardState"],[3,"XmbTextItem"],[3,"XModifierKeymap"],[3,"XOMCharSetList"],[3,"XPixmapFormatValues"],[3,"XPoint"],[3,"XRectangle"],[3,"XrmOptionDescRec"],[3,"XrmValue"],[3,"XSegment"],[3,"XSetWindowAttributes"],[3,"XSizeHints"],[3,"XStandardColormap"],[3,"XTextItem"],[3,"XTextItem16"],[3,"XTextProperty"],[3,"XTimeCoord"],[3,"XVisualInfo"],[3,"XwcTextItem"],[3,"XWindowAttributes"],[3,"XWindowChanges"],[3,"XWMHints"],[3,"XIMPreeditDrawCallbackStruct"],[3,"XIMPreeditCaretCallbackStruct"],[19,"XIMTextString"],[3,"XIMText"],[3,"AspectRatio"],[3,"ClientMessageData"],[3,"ImageFns"],[3,"_XcursorAnimate"],[3,"_XcursorChunkHeader"],[3,"_XcursorComment"],[3,"_XcursorComments"],[3,"_XcursorCursors"],[3,"_XcursorFile"],[3,"_XcursorFileHeader"],[3,"_XcursorFileToc"],[3,"_XcursorImage"],[3,"_XcursorImages"],[3,"XDevice"],[3,"XDeviceControl"],[3,"XDeviceInfo"],[3,"XDeviceState"],[3,"XDeviceTimeCoord"],[3,"XExtensionVersion"],[3,"XFeedbackControl"],[3,"XFeedbackState"],[3,"XInputClass"],[3,"XInputClassInfo"],[3,"XIModifierState"],[3,"XIButtonState"],[3,"XIValuatorState"],[3,"XIEventMask"],[3,"XIGrabModifiers"],[3,"XIBarrierReleasePointerInfo"],[3,"_XAnimCursor"],[3,"_XCircle"],[3,"_XConicalGradient"],[3,"_XFilters"],[3,"_XGlyphElt8"],[3,"_XGlyphElt16"],[3,"_XGlyphElt32"],[3,"_XGlyphInfo"],[3,"_XIndexValue"],[3,"_XLinearGradient"],[3,"_XLineFixed"],[3,"_XPointDouble"],[3,"_XPointFixed"],[3,"_XRadialGradient"],[3,"XRenderColor"],[3,"XRenderDirectFormat"],[3,"XRenderPictFormat"],[3,"_XRenderPictureAttributes"],[3,"_XSpanFix"],[3,"_XTrap"],[3,"_XTrapezoid"],[3,"_XTriangle"],[3,"_XTransform"],[3,"XRRScreenConfiguration"],[3,"XRRScreenSize"],[3,"XRRModeInfo"],[3,"XRRScreenResources"],[3,"XRROutputInfo"],[3,"XRRPropertyInfo"],[3,"XRRCrtcInfo"],[3,"XRRCrtcGamma"],[3,"XRRCrtcTransformAttributes"],[3,"XRRPanning"],[3,"XRRProviderResources"],[3,"XRRProviderInfo"],[3,"XRRMonitorInfo"],[3,"XRRScreenChangeNotifyEvent"],[3,"XRRNotifyEvent"],[3,"XRROutputChangeNotifyEvent"],[3,"XRRCrtcChangeNotifyEvent"],[3,"XRROutputPropertyNotifyEvent"],[3,"XRRProviderChangeNotifyEvent"],[3,"XRRProviderPropertyNotifyEvent"],[3,"XRRResourceChangeNotifyEvent"],[4,"StateOperation"],[4,"PropMode"],[4,"Format"],[8,"Formattable"],[4,"GetPropertyError"],[4,"EnvVarDPI"],[4,"FrameExtentsHeuristicPath"],[3,"MotifHints"],[3,"NormalHints"],[3,"PointerState"],[3,"XSmartPointer"],[3,"Flusher"],[3,"AaRect"],[3,"TranslatedCoords"],[3,"Geometry"],[3,"FrameExtents"],[3,"LogicalFrameExtents"],[3,"FrameExtentsHeuristic"],[13,"Scale"],[13,"XError"],[13,"TypeMismatch"],[13,"FormatMismatch"],[3,"Keymap"],[3,"KeymapIter"],[4,"Modifier"],[3,"ModifierKeymap"],[3,"ModifierKeyState"],[4,"CursorIcon"],[4,"Fullscreen"],[4,"BadIcon"],[4,"UserAttentionType"],[4,"Theme"],[3,"Window"],[3,"Icon"],[3,"WindowId"],[3,"WindowBuilder"],[3,"WindowAttributes"],[13,"OsError"],[13,"ByteCountNotDivisibleBy4"],[13,"DimensionsVsPixelCount"],[13,"Exclusive"],[13,"Borderless"],[4,"TileSprite"],[4,"PersistentTileSource"],[3,"TileMap"],[3,"Tile"],[3,"PersistentTileProvider"],[8,"PersistentMap"],[8,"TileProvider"],[13,"Sprite"],[13,"SpriteSource"],[13,"Sprite"],[13,"SpriteSource"]],"a":{"&*":[9023],"*":[9023]}},\
"kludgine_app":{"doc":"Application and window handling.","t":[12,8,13,4,13,8,13,3,3,6,3,3,8,3,8,3,0,10,0,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,4,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,4,13,13,13,4,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,13,13,13,13,3,13,6,13,13,3,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,8,3,8,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["0","Application","Core","Error","InternalWindowMessageSend","OpenableWindow","Other","RedrawRequester","RedrawStatus","Result","Runtime","SingleWindowApplication","Window","WindowBuilder","WindowCreator","WindowHandle","event","open","prelude","0","0","0","A","AbntC1","AbntC2","Apostrophe","Apps","Asterisk","At","Ax","B","Back","Backslash","C","Calculator","Cancelled","Capital","Caret","Colon","Comma","Compose","Convert","Copy","Cut","D","Delete","DeviceId","Down","E","ElementState","End","Ended","Equals","Escape","Event","EventStatus","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","G","Grave","H","Home","I","Ignored","InputEvent","Insert","J","K","Kana","Kanji","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","Keyboard","L","LAlt","LBracket","LControl","LShift","LWin","Left","Left","LineDelta","M","Mail","MediaSelect","MediaStop","Middle","Minus","MouseButton","MouseButton","MouseMoved","MouseScrollDelta","MouseWheel","Moved","Mute","MyComputer","N","NavigateBackward","NavigateForward","NextTrack","NoConvert","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEquals","NumpadMultiply","NumpadSubtract","O","OEM102","Other","P","PageDown","PageUp","Paste","Pause","Period","PixelDelta","PlayPause","Plus","Power","Pressed","PrevTrack","Processed","Q","R","RAlt","RBracket","RControl","RShift","RWin","Released","Return","Right","Right","S","ScanCode","Scroll","Semicolon","Slash","Sleep","Snapshot","Space","Started","Stop","Sysrq","T","Tab","TouchPhase","U","Underline","Unlabeled","Up","V","VirtualKeyCode","VolumeDown","VolumeUp","W","Wake","WebBack","WebFavorites","WebForward","WebHome","WebRefresh","WebSearch","WebStop","X","Y","Yen","Z","adapt_into_using","adapt_into_using","adapt_into_using","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","device_id","downcast","downcast","downcast","eq","equivalent","event","fmt","fmt","fmt","from","from","from","into","into","into","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","upcast","upcast","upcast","update_with","button","delta","key","position","scancode","state","state","touch_phase","0","0","0","1","0","A","AbntC1","AbntC2","Apostrophe","Application","Apps","Asterisk","At","Ax","B","Back","Backslash","C","Calculator","Cancelled","Capital","Caret","Colon","Comma","Compose","Convert","Copy","Core","Cut","D","Delete","DeviceId","Down","E","ElementState","End","Ended","Equals","Error","Escape","Event","EventStatus","F","F1","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F2","F20","F21","F22","F23","F24","F3","F4","F5","F6","F7","F8","F9","G","Grave","H","Home","I","Ignored","InputEvent","Insert","InternalWindowMessageSend","J","K","Kana","Kanji","Key0","Key1","Key2","Key3","Key4","Key5","Key6","Key7","Key8","Key9","Keyboard","L","LAlt","LBracket","LControl","LShift","LWin","Left","Left","LineDelta","M","Mail","MediaSelect","MediaStop","Middle","Minus","MouseButton","MouseButton","MouseMoved","MouseScrollDelta","MouseWheel","Moved","Mute","MyComputer","N","NavigateBackward","NavigateForward","NextTrack","NoConvert","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEquals","NumpadMultiply","NumpadSubtract","O","OEM102","Other","Other","P","PageDown","PageUp","Paste","Pause","Period","PixelDelta","PlayPause","Plus","Power","Pressed","PrevTrack","Processed","Q","R","RAlt","RBracket","RControl","RShift","RWin","RedrawRequester","RedrawStatus","Released","Return","Right","Right","Runtime","S","ScanCode","Scroll","Semicolon","SingleWindowApplication","Slash","Sleep","Snapshot","Space","Started","Stop","Sysrq","T","Tab","TouchPhase","U","Underline","Unlabeled","Up","V","VirtualKeyCode","VolumeDown","VolumeUp","W","Wake","WebBack","WebFavorites","WebForward","WebHome","WebRefresh","WebSearch","WebStop","Window","WindowBuilder","WindowCreator","WindowHandle","X","Y","Yen","Z","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","additional_scale","additional_scale","additional_scale","always_on_top","always_on_top","always_on_top","awaken","block_on","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close_requested","close_requested","close_requested","cmp","cmp","decorations","decorations","decorations","default","device_id","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","dummy","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","estimate_next_frame","estimate_next_frame_instant","event","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_hash","get_hash","get_hash","get_hash","get_hash","get_window_builder","get_window_builder","get_window_builder","hash","hash","hash","hash","hash","initial_position","initial_position","initial_position","initial_size","initial_size","initial_size","initial_system_theme","initial_system_theme","initial_system_theme","initialize","initialize","initialize","initialize","initialize","initialize","initialize","inner_position","inner_size","into","into","into","into","into","into","into","into","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","maximized","maximized","maximized","maximized","ne","ne","ne","new","open_window","open_window_count","open_window_count","open_window_count","outer_position","partial_cmp","partial_cmp","process_input","process_input","process_input","receive_character","receive_character","receive_character","redraw_requester","render","render","render","request_close","request_redraw","resizable","resizable","resizable","run","run","set_always_on_top","set_inner_size","set_maximized","set_minimized","set_needs_redraw","set_needs_update","set_outer_position","set_title","should_exit","should_exit","should_exit","source","spawn","target_fps","target_fps","target_fps","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transparent","transparent","transparent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","update","update","update","visible","visible","visible","window_title","window_title","window_title","with_always_on_top","with_decorations","with_icon","with_initial_system_theme","with_maximized","with_position","with_resizable","with_size","with_title","with_transparent","with_visible","0","0","0","button","delta","key","position","scancode","state","state","touch_phase","0","0","0","1"],"q":["kludgine_app","","","","","","","","","","","","","","","","","","","kludgine_app::Error","","","kludgine_app::eventkludgine_app::event::Event","","","","","","","","kludgine_app::event::MouseButton","kludgine_app::event::MouseScrollDelta","","","kludgine_app::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine_app::prelude::Error","","","kludgine_app::prelude::Event","","","","","","","","kludgine_app::prelude::MouseButton","kludgine_app::prelude::MouseScrollDelta","",""],"d":["","A trait that describes the application’s behavior.","An error from <code>kludgine-core</code> occurred.","All errors that kludgine-app can return.","An error occurred while communicating internally between …","A window that can be opened.","An error from user code arose.","Allows requesting window refreshes outside of the event …","Tracks when a window should be redrawn. Allows for …","Alias for <code>std::result::Result</code> where the error type is <code>Error</code>…","Runtime is designed to consume the main thread. For …","An <code>Application</code> implementation that begins with a single …","Trait to implement a Window","A builder for a <code>Window</code>.","Defines initial window properties.","A handle to an open window.","Types for event handling.","Opens <code>self</code> as a <code>Window</code>.","A collection of commonly used exports provided by this …","","","","","","","","","","","","","The Backspace key, right over Enter.","","","","","","","","","The “Compose” key on Linux.","","","","","","Identifier of an input device.","","","Describes the input state of a key.","","","","The Escape key, next to F1.","An input Event","Whether an event has been processed or ignored.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The event was not handled.","An Event from a device","<code>Insert</code>, next to Backspace.","","","","","The ‘0’ key over the ‘O’ and ‘P’ keys.","The ‘1’ key over the letters.","The ‘2’ key over the letters.","The ‘3’ key over the letters.","The ‘4’ key over the letters.","The ‘5’ key over the letters.","The ‘6’ key over the letters.","The ‘7’ key over the letters.","The ‘8’ key over the letters.","The ‘9’ key over the letters.","A keyboard event","","","","","","","","","Amount in lines or rows to scroll in the horizontal and …","","","","","","","Describes a button of a mouse controller.","A mouse button event","Mouse cursor event","Describes a difference in the mouse scroll wheel state.","Mouse wheel event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pause/Break key, next to Scroll lock.","","Amount in pixels to scroll in the horizontal and vertical …","","","","","","The event was handled and should not be processed any …","","","","","","","","","The Enter key.","","","","Hardware-dependent keyboard scan code.","Scroll Lock.","","","","Print Screen/SysRq.","The space bar.","","","","","","Describes touch-screen input state.","","","","","","Symbolic name for a keyboard key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The device that triggered this event","","","","","","The event that was triggered","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates <code>self</code> such that if either <code>self</code> or <code>other</code> are …","The button tha triggered this event.","The scroll amount.","Contains a <code>VirtualKeyCode</code> if <code>scancode</code> was interpetted as a …","The location within the window of the cursor. Will be …","The hardware-dependent scan code.","Indicates pressed or released/","Indicates pressed or released/","If this event was caused by touch events, the phase of the …","","","","","","","","","","A trait that describes the application’s behavior.","","","","","","The Backspace key, right over Enter.","","","","","","","","","The “Compose” key on Linux.","","","An error from <code>kludgine-core</code> occurred.","","","","Identifier of an input device.","","","Describes the input state of a key.","","","","All errors that kludgine-app can return.","The Escape key, next to F1.","An input Event","Whether an event has been processed or ignored.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The event was not handled.","An Event from a device","<code>Insert</code>, next to Backspace.","An error occurred while communicating internally between …","","","","","The ‘0’ key over the ‘O’ and ‘P’ keys.","The ‘1’ key over the letters.","The ‘2’ key over the letters.","The ‘3’ key over the letters.","The ‘4’ key over the letters.","The ‘5’ key over the letters.","The ‘6’ key over the letters.","The ‘7’ key over the letters.","The ‘8’ key over the letters.","The ‘9’ key over the letters.","A keyboard event","","","","","","","","","Amount in lines or rows to scroll in the horizontal and …","","","","","","","Describes a button of a mouse controller.","A mouse button event","Mouse cursor event","Describes a difference in the mouse scroll wheel state.","Mouse wheel event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An error from user code arose.","","","","","","Pause/Break key, next to Scroll lock.","","Amount in pixels to scroll in the horizontal and vertical …","","","","","","The event was handled and should not be processed any …","","","","","","","","Allows requesting window refreshes outside of the event …","Tracks when a window should be redrawn. Allows for …","","The Enter key.","","","Runtime is designed to consume the main thread. For …","","Hardware-dependent keyboard scan code.","Scroll Lock.","","An <code>Application</code> implementation that begins with a single …","","","Print Screen/SysRq.","The space bar.","","","","","","Describes touch-screen input state.","","","","","","Symbolic name for a keyboard key.","","","","","","","","","","","","Trait to implement a Window","A builder for a <code>Window</code>.","Defines initial window properties.","A handle to an open window.","","","","","","","","","","","","","","","","","","Called prior to rendering to allow setting a scaling …","Called prior to rendering to allow setting a scaling …","Called prior to rendering to allow setting a scaling …","Whether the window should always be on top or not.","Whether the window should always be on top or not.","Whether the window should always be on top or not.","Wakes the event loop, without necessarily redrawing.","Executes a future in a blocking-safe manner.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The window was requested to be closed, most likely from …","The window was requested to be closed, most likely from …","The window was requested to be closed, most likely from …","","","Whether the window should be drawn with decorations or not.","Whether the window should be drawn with decorations or not.","Whether the window should be drawn with decorations or not.","","The device that triggered this event","","","","","","","","","","","","","","Returns a dummy <code>DeviceId</code>, useful for unit testing.","","","","","","","","","","","","Estimates the next redraw instant by adding <code>duration</code> to …","Estimates the next redraw instant. If <code>instant</code> is later …","The event that was triggered","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a <code>WindowBuilder</code> for this window.","Returns a <code>WindowBuilder</code> for this window.","Returns a <code>WindowBuilder</code> for this window.","","","","","","The initial position of the window. If None is returned, …","The initial position of the window. If None is returned, …","The initial position of the window. If None is returned, …","The initial size of the window.","The initial size of the window.","The initial size of the window.","The default <code>Theme</code> for the <code>Window</code> if <code>winit</code> is unable to …","The default <code>Theme</code> for the <code>Window</code> if <code>winit</code> is unable to …","The default <code>Theme</code> for the <code>Window</code> if <code>winit</code> is unable to …","Executed upon application launch.","Executed upon application launch.","Executed upon application launch.","Initializes the managed async runtime.","Called when the window is being initilaized.","Called when the window is being initilaized.","Called when the window is being initilaized.","Returns the position of the top-left of the content area …","Returns the size of the content area of the window.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Whether the window should be maximized or not.","Whether the window should be maximized or not.","Whether the window should be maximized or not.","Returns true if the window is maximized.","","","","Returns a new runtime for <code>app</code>.","Opens a <code>Window</code>. Requires feature <code>multiwindow</code>.","Returns the number of open windows.","Returns the number of open windows.","Returns the number of open windows.","Returns the position on the screen of the window’s …","","","The window has received an input event.","The window has received an input event.","The window has received an input event.","A text input was received.","A text input was received.","A text input was received.","Returns a redraw requester that can be used outside of the …","Renders the contents of the window. Called whenever the …","Renders the contents of the window. Called whenever the …","Renders the contents of the window. Called whenever the …","Requests that the window close.","Requests the window refresh itself. This will trigger …","Whether the window should be resizable or not.","Whether the window should be resizable or not.","Whether the window should be resizable or not.","Runs the app. Does not return.","Executes the runtime’s event loop.","Sets whether the window should always be on top of other …","Attempts to resize the window to <code>new_size</code>. This may not …","Sets whether the window should be maximized.","Sets whether the window should be minimized.","Triggers a redraw as soon as possible. Any estimated frame …","Triggers an update as soon as possible. Does not affect …","Sets the outer position of the window. This may not work …","Sets the window title.","Return true if the app should exit. Default implementation …","Return true if the app should exit. Default implementation …","Return true if the app should exit. Default implementation …","","Spawns an async task.","Specify a target frames per second, which will force your …","Specify a target frames per second, which will force your …","Specify a target frames per second, which will force your …","Executes <code>future</code> for up to <code>duration</code>. If a timeout occurs, …","","","","","","","","","","Whether the window should be transparent or not.","Whether the window should be transparent or not.","Whether the window should be transparent or not.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Called on a regular basis as events come in. Use <code>status</code> to …","Called on a regular basis as events come in. Use <code>status</code> to …","Called on a regular basis as events come in. Use <code>status</code> to …","Whether the window should be visible or not.","Whether the window should be visible or not.","Whether the window should be visible or not.","The initial title of the window.","The initial title of the window.","The initial title of the window.","Builder-style function. Sets <code>alawys_on_top</code> and returns …","Builder-style function. Sets <code>decorations</code> and returns self.","Builder-style function. Sets <code>icon</code> and returns self.","Builder-style function. Sets <code>initial_system_theme</code> and …","Builder-style function. Sets <code>maximized</code> and returns self.","Builder-style function. Sets <code>size</code> and returns self.","Builder-style function. Sets <code>resizable</code> and returns self.","Builder-style function. Sets <code>size</code> and returns self.","Builder-style function. Sets <code>title</code> and returns self.","Builder-style function. Sets <code>transparent</code> and returns self.","Builder-style function. Sets <code>visible</code> and returns self.","","","","The button tha triggered this event.","The scroll amount.","Contains a <code>VirtualKeyCode</code> if <code>scancode</code> was interpetted as a …","The location within the window of the cursor. Will be …","The hardware-dependent scan code.","Indicates pressed or released/","Indicates pressed or released/","If this event was caused by touch events, the phase of the …","","","",""],"i":[1,0,2,0,2,0,2,0,0,0,0,0,0,0,0,0,0,3,0,4,5,6,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,7,7,7,7,0,7,7,0,7,8,7,7,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,10,7,7,7,7,7,7,11,7,12,7,7,7,7,11,7,0,10,10,0,10,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,11,7,7,7,7,7,7,12,7,7,7,13,7,9,7,7,7,7,7,7,7,13,7,11,7,7,0,7,7,7,7,7,7,8,7,7,7,7,0,7,7,7,7,7,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,14,10,9,14,10,9,14,10,9,14,10,9,14,10,9,14,9,14,10,9,9,14,9,14,10,9,14,10,9,14,10,9,14,10,9,14,10,9,14,10,9,14,10,9,14,10,9,14,10,9,14,10,9,14,10,9,15,16,17,18,17,17,15,16,19,20,21,20,1,7,7,7,7,0,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,7,2,7,7,7,0,7,7,0,7,8,7,0,7,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,0,7,2,7,7,7,7,7,7,7,7,7,7,7,7,7,7,10,7,7,7,7,7,7,11,7,12,7,7,7,7,11,7,0,10,10,0,10,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,2,11,7,7,7,7,7,7,12,7,7,7,13,7,9,7,7,7,7,7,7,7,0,0,13,7,11,7,0,7,0,7,7,0,7,7,7,7,8,7,7,7,7,0,7,7,7,7,7,0,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,7,7,7,7,22,23,2,24,25,1,26,27,8,13,11,12,7,28,28,28,29,29,29,24,23,22,23,2,24,25,1,26,27,8,13,11,12,7,22,23,2,24,25,1,26,27,8,13,11,12,7,24,1,27,8,13,11,12,7,24,1,27,8,13,11,12,7,28,28,28,27,7,29,29,29,26,14,22,23,2,24,25,1,26,27,8,13,11,12,7,27,27,8,13,11,12,7,27,8,13,11,7,25,25,14,2,2,24,25,1,27,8,13,11,12,7,22,23,2,2,2,24,25,1,26,27,8,13,11,12,7,27,8,13,11,7,29,29,29,27,8,13,11,7,29,29,29,29,29,29,29,29,29,30,30,30,23,28,28,28,1,1,22,23,2,24,25,1,26,27,8,13,11,12,7,22,23,2,24,25,1,26,27,8,13,11,12,7,22,23,2,24,25,1,26,27,8,13,11,12,7,29,29,29,1,27,11,12,23,23,30,30,30,1,27,7,28,28,28,28,28,28,25,28,28,28,1,24,29,29,29,22,23,1,1,1,1,25,25,1,1,30,30,30,2,23,28,28,28,23,24,1,27,8,13,11,12,7,2,29,29,29,22,23,2,24,25,1,26,27,8,13,11,12,7,22,23,2,24,25,1,26,27,8,13,11,12,7,22,23,2,24,25,1,26,27,8,13,11,12,7,22,23,2,24,25,1,26,27,8,13,11,12,7,22,23,2,24,25,1,26,27,8,13,11,12,7,28,28,28,29,29,29,29,29,29,26,26,26,26,26,26,26,26,26,26,26,4,5,6,15,16,17,18,17,17,15,16,19,20,21,20],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["eventstatus",4]],[[],["inputevent",3]],[[],["event",4]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[["eventstatus",4]],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["scaled",6],["scale",3,["f32","scaled","points"]],["f32",15],["points",3]]],[[],[["scaled",6],["scale",3,["f32","scaled","points"]],["f32",15],["points",3]]],[[],[["scaled",6],["scale",3,["f32","scaled","points"]],["f32",15],["points",3]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[["send",8],["future",8]],[["send",8],["sync",8]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["redrawrequester",3]],[[],["windowhandle",3]],[[],["deviceid",3]],[[],["touchphase",4]],[[],["elementstate",4]],[[],["mousebutton",4]],[[],["mousescrolldelta",4]],[[],["virtualkeycode",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["windowhandle",3]],[["closeresponse",4],["result",6,["closeresponse"]]]],[[["windowhandle",3]],[["closeresponse",4],["result",6,["closeresponse"]]]],[[["windowhandle",3]],[["closeresponse",4],["result",6,["closeresponse"]]]],[[["deviceid",3]],["ordering",4]],[[["virtualkeycode",4]],["ordering",4]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["windowbuilder",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["deviceid",3]],[[["deviceid",3]],["bool",15]],[[["touchphase",4]],["bool",15]],[[["elementstate",4]],["bool",15]],[[["mousebutton",4]],["bool",15]],[[["mousescrolldelta",4]],["bool",15]],[[["virtualkeycode",4]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["duration",3]]],[[["instant",3]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[["error",4]]],[[["error",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["windowbuilder",3]],[[],["windowbuilder",3]],[[],["windowbuilder",3]],[[]],[[]],[[]],[[]],[[]],[[],[["point",3,["i32","pixels"]],["option",4,["point"]]]],[[],[["point",3,["i32","pixels"]],["option",4,["point"]]]],[[],[["point",3,["i32","pixels"]],["option",4,["point"]]]],[[],[["points",3],["size",6,["u32","points"]],["u32",15]]],[[],[["points",3],["size",6,["u32","points"]],["u32",15]]],[[],[["points",3],["size",6,["u32","points"]],["u32",15]]],[[],["theme",4]],[[],["theme",4]],[[],["theme",4]],[[]],[[]],[[]],[[]],[[["redrawrequester",3],["windowhandle",3],["target",3]],["result",6]],[[["redrawrequester",3],["windowhandle",3],["target",3]],["result",6]],[[["redrawrequester",3],["windowhandle",3],["target",3]],["result",6]],[[],[["pixels",3],["i32",15],["point",6,["i32","pixels"]]]],[[],[["pixels",3],["size",6,["u32","pixels"]],["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["deviceid",3]],["bool",15]],[[["mousebutton",4]],["bool",15]],[[["mousescrolldelta",4]],["bool",15]],[[]],[[["windowbuilder",3]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],[["pixels",3],["i32",15],["point",6,["i32","pixels"]]]],[[["deviceid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["virtualkeycode",4]],[["option",4,["ordering"]],["ordering",4]]],[[["redrawstatus",3],["windowhandle",3],["inputevent",3],["target",3]],["result",6]],[[["redrawstatus",3],["windowhandle",3],["inputevent",3],["target",3]],["result",6]],[[["redrawstatus",3],["windowhandle",3],["inputevent",3],["target",3]],["result",6]],[[["redrawstatus",3],["windowhandle",3],["char",15],["target",3]],["result",6]],[[["redrawstatus",3],["windowhandle",3],["char",15],["target",3]],["result",6]],[[["redrawstatus",3],["windowhandle",3],["char",15],["target",3]],["result",6]],[[],["redrawrequester",3]],[[["redrawstatus",3],["target",3],["windowhandle",3]],["result",6]],[[["redrawstatus",3],["target",3],["windowhandle",3]],["result",6]],[[["redrawstatus",3],["target",3],["windowhandle",3]],["result",6]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[["windowbuilder",3]]],[[["bool",15]]],[[["pixels",3],["size",6,["u32","pixels"]],["u32",15]]],[[["bool",15]]],[[["bool",15]]],[[]],[[]],[[["pixels",3],["i32",15],["point",6,["i32","pixels"]]]],[[["str",15]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],[["option",4,["error"]],["error",8]]],[[["send",8],["future",8]]],[[],[["u16",15],["option",4,["u16"]]]],[[],[["u16",15],["option",4,["u16"]]]],[[],[["u16",15],["option",4,["u16"]]]],[[["send",8],["future",8],["duration",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["redrawstatus",3],["target",3],["windowhandle",3]],["result",6]],[[["redrawstatus",3],["target",3],["windowhandle",3]],["result",6]],[[["redrawstatus",3],["target",3],["windowhandle",3]],["result",6]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["bool",15]]],[[["bool",15]]],[[["icon",3]]],[[["theme",4]]],[[["bool",15]]],[[["point",3,["i32","pixels"]],["i32",15],["pixels",3]]],[[["bool",15]]],[[["u32",15],["size",6,["u32","points"]],["points",3]]],[[["into",8,["string"]],["string",3]]],[[["bool",15]]],[[["bool",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"WindowHandle"],[4,"Error"],[8,"OpenableWindow"],[13,"InternalWindowMessageSend"],[13,"Core"],[13,"Other"],[4,"VirtualKeyCode"],[4,"TouchPhase"],[4,"EventStatus"],[4,"Event"],[4,"MouseButton"],[4,"MouseScrollDelta"],[4,"ElementState"],[3,"InputEvent"],[13,"MouseButton"],[13,"MouseWheel"],[13,"Keyboard"],[13,"MouseMoved"],[13,"Other"],[13,"LineDelta"],[13,"PixelDelta"],[3,"SingleWindowApplication"],[3,"Runtime"],[3,"RedrawRequester"],[3,"RedrawStatus"],[3,"WindowBuilder"],[3,"DeviceId"],[8,"Window"],[8,"WindowCreator"],[8,"Application"]]},\
"kludgine_core":{"doc":"Rendering and math related types.","t":[3,4,13,13,13,6,13,13,11,11,11,11,11,11,0,11,11,11,14,14,14,11,11,11,0,0,0,0,11,0,0,0,11,11,11,11,11,11,12,12,12,12,3,8,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,6,3,3,6,6,6,3,6,6,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,8,3,3,3,3,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,3,13,3,4,13,13,3,13,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,12,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,3,13,6,13,13,6,3,13,3,3,4,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,4,13,13,16,3,13,13,3,13,3,3,3,8,3,3,3,3,3,4,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,12,12,10,11,11,11,11,11,11,11,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,4,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Color","Error","Image","InvalidSpriteTag","Json","Result","SpriteParse","Tessellation","adapt_into_using","borrow","borrow_mut","downcast","fmt","fmt","frame_renderer","from","from","from","include_aseprite_sprite","include_font","include_texture","into","into_color","into_color_unclamped","math","prelude","scene","shape","source","sprite","text","texture","to_string","try_from","try_into","try_into_color","type_id","upcast","0","0","0","0","FrameRenderer","ShutdownCallback","adapt_into_using","borrow","borrow_mut","downcast","from","into","into_color","into_color_unclamped","render_one_frame","run","shutdown","try_from","try_into","try_into_color","type_id","upcast","Angle","ExtentsRect","Figure","Pixels","Point","Rect","Scale","Scaled","Size","Unknown","Vector","abs_diff_eq","abs_diff_ne","adapt_into_using","adapt_into_using","approx_eq","as_extents","as_rect","as_sized","borrow","borrow","borrow_mut","borrow_mut","cast","cast_unit","ceil","clone","clone","clone_into","clone_into","default","default","default_epsilon","default_max_relative","default_max_ulps","deserialize","deserialize","div","downcast","downcast","eq","equivalent","extent","floor","fmt","fmt","from","from","height","inflate","into","into","into_color","into_color","into_color_unclamped","into_color_unclamped","mul","new","origin","origin","relative_eq","relative_ne","round","round_in","round_out","serialize","serialize","to_owned","to_owned","to_pixels","to_pixels","to_pixels","to_points","to_points","to_points","to_scaled","to_scaled","to_scaled","translate","try_cast","try_from","try_from","try_into","try_into","try_into_color","try_into_color","type_id","type_id","ulps_eq","ulps_ne","upcast","upcast","width","ALICEBLUE","ANTIQUEWHITE","AQUA","AQUAMARINE","AZURE","BEIGE","BISQUE","BLACK","BLANCHEDALMOND","BLUE","BLUEVIOLET","BROWN","BURLYWOOD","CADETBLUE","CHARTREUSE","CHOCOLATE","CLEAR_BLACK","CLEAR_WHITE","CORAL","CORNFLOWERBLUE","CORNSILK","CRIMSON","CYAN","Color","DARKBLUE","DARKCYAN","DARKGOLDENROD","DARKGRAY","DARKGREEN","DARKGREY","DARKKHAKI","DARKMAGENTA","DARKOLIVEGREEN","DARKORANGE","DARKORCHID","DARKRED","DARKSALMON","DARKSEAGREEN","DARKSLATEBLUE","DARKSLATEGRAY","DARKSLATEGREY","DARKTURQUOISE","DARKVIOLET","DEEPPINK","DEEPSKYBLUE","DIMGRAY","DIMGREY","DODGERBLUE","FIREBRICK","FLORALWHITE","FORESTGREEN","FUCHSIA","Figure","Font","GAINSBORO","GHOSTWHITE","GOLD","GOLDENROD","GRAY","GREEN","GREENYELLOW","GREY","HONEYDEW","HOTPINK","INDIANRED","INDIGO","IVORY","KHAKI","LAVENDER","LAVENDERBLUSH","LAWNGREEN","LEMONCHIFFON","LIGHTBLUE","LIGHTCORAL","LIGHTCYAN","LIGHTGOLDENRODYELLOW","LIGHTGRAY","LIGHTGREEN","LIGHTGREY","LIGHTPINK","LIGHTSALMON","LIGHTSEAGREEN","LIGHTSKYBLUE","LIGHTSLATEGRAY","LIGHTSLATEGREY","LIGHTSTEELBLUE","LIGHTYELLOW","LIME","LIMEGREEN","LINEN","MAGENTA","MAROON","MEDIUMAQUAMARINE","MEDIUMBLUE","MEDIUMORCHID","MEDIUMPURPLE","MEDIUMSEAGREEN","MEDIUMSLATEBLUE","MEDIUMSPRINGGREEN","MEDIUMTURQUOISE","MEDIUMVIOLETRED","MIDNIGHTBLUE","MINTCREAM","MISTYROSE","MOCCASIN","NAVAJOWHITE","NAVY","OLDLACE","OLIVE","OLIVEDRAB","ORANGE","ORANGERED","ORCHID","PALEGOLDENROD","PALEGREEN","PALETURQUOISE","PALEVIOLETRED","PAPAYAWHIP","PEACHPUFF","PERU","PINK","PLUM","POWDERBLUE","PURPLE","REBECCAPURPLE","RED","ROSYBROWN","ROYALBLUE","SADDLEBROWN","SALMON","SANDYBROWN","SEAGREEN","SEASHELL","SIENNA","SILVER","SKYBLUE","SLATEBLUE","SLATEGRAY","SLATEGREY","SNOW","SPRINGGREEN","STEELBLUE","Scale","SpriteCollection","SpriteMap","SpriteSheet","SpriteSource","SpriteSourceSublocation","TAN","TEAL","THISTLE","TOMATO","TURQUOISE","VIOLET","WHEAT","WHITE","WHITESMOKE","YELLOW","YELLOWGREEN","abs_diff_eq","abs_diff_ne","adapt_into_using","adapt_into_using","adapt_into_using","add","add","add_assign","add_assign","alpha","approx_eq","blue","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_unit","ceil","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","darken","default","default","default_epsilon","default_max_relative","default_max_ulps","deserialize","deserialize","destination","div","div","div","div_assign","div_assign","downcast","downcast","downcast","eq","eq","eq","equivalent","equivalent","floor","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get","get","green","into","into","into","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","inverse","is_zero","lighten","location","max","min","mul","mul","mul","mul","mul_assign","mul_assign","ne","ne","neg","new","new","new","one","one","one","one","one","one","partial_cmp","partial_cmp","red","relative_eq","relative_ne","rem","rem","rem_assign","rem_assign","rgba","round","serialize","serialize","source","sprite","sub","sub","sub_assign","sub_assign","texture","texture","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_owned","to_owned","to_owned","to_pixels","to_pixels","to_pixels","to_points","to_points","to_points","to_scaled","to_scaled","to_scaled","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","try_from","try_from","try_from","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","ulps_eq","ulps_ne","upcast","upcast","upcast","visible","with_alpha","zero","zero","zero","BeginFrame","Element","EndFrame","Modifiers","Render","Scene","SceneEvent","Shape","Sprite","Target","Text","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","alt","any_key_pressed","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clip","clipped_to","clone","clone_into","command_key","control","deref","downcast","downcast","downcast","downcast","downcast","elapsed","end_frame","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","is_initial_frame","keys_pressed","modifiers_pressed","new","now","offset","offset_by","offset_point","offset_point_raw","operating_system","primary_modifier","scale","scene","scene_mut","set_dpi_scale","set_size","set_system_theme","shift","size","size_in_pixels","start_frame","system_theme","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","0","clip","clip","span","sprite","0","size","Batch","Begin","ControlPoint","Cubic","End","Endpoint","Fill","Line","Path","PathBuilder","PathEvent","Quadratic","Shape","Stroke","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cast_unit","cast_unit","cast_unit","circle","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","color","color","cubic_curve_to","default","default","default","default","default","downcast","downcast","downcast","downcast","downcast","downcast","downcast","fill","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","line_to","line_width","mul","mul","mul","new","new","new","options","options","polygon","quadratic_curve_to","rect","render","render_at","stroke","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","with_options","at","close","ctrl","ctrl1","ctrl2","first","from","from","from","last","to","to","to","AnimationMode","Forward","Joined","Lyon","Normal","PingPong","Rect","RenderedSprite","Reverse","Sprite","SpriteAnimation","SpriteAnimations","SpriteCollection","SpriteFrame","SpriteMap","SpriteRotation","SpriteSheet","SpriteSource","SpriteSourceLocation","SpriteSourceSublocation","Srgb","VertexShaderSource","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","add_foreign_sheet","add_sheet","angle","animation_for","animations","around","around_center","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","current_frame","current_tag","default","default","deref","destination","destination_rect","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","duration","entire_texture","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frames","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_foreign_sheet","get_frame","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_iter","joined","joined_square","load_aseprite_json","location","location","merged","mode","new","new","new","new","new","new","new","none","remaining_frame_duration","render_at","render_at_with_alpha","render_raw_with_alpha_in_box","render_with_alpha","render_with_alpha_in_box","render_within","sampler_format","sampler_format","set_current_tag","shader","shader","shader","single_frame","size","source","source","sprite","sprite","sprite","sprite_map","sprites","sprites","sprites","sprites","texture","texture","texture_format","texture_format","texture_format","tile_size","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pixels","to_pixels","to_pixels","to_points","to_points","to_points","to_scaled","to_scaled","to_scaled","to_sprite_map","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","with_duration","with_mode","0","0","Font","Text","adapt_into_using","adapt_into_using","borrow","borrow","borrow_mut","borrow_mut","bundled_fonts","clone","clone_into","downcast","downcast","family","fmt","from","from","id","into","into","into_color","into_color","into_color_unclamped","into_color_unclamped","metrics","prepare","prepared","to_owned","try_from","try_from","try_from_bytes","try_into","try_into","try_into_color","try_into_color","type_id","type_id","upcast","upcast","ROBOTO","ROBOTO_BLACK","ROBOTO_BLACK_ITALIC","ROBOTO_BOLD","ROBOTO_BOLD_ITALIC","ROBOTO_ITALIC","ROBOTO_LIGHT","ROBOTO_LIGHT_ITALIC","ROBOTO_MEDIUM","ROBOTO_MEDIUM_ITALIC","ROBOTO_THIN","ROBOTO_THIN_ITALIC","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","downcast","from","from","from","from","from","from","from","from","from","from","from","from","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","initialize","into","into","into","into","into","into","into","into","into","into","into","into","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","GlyphInfo","PreparedSpan","PreparedSpanData","VMetrics","adapt_into_using","adapt_into_using","adapt_into_using","adapt_into_using","ascent","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","characters","clone","clone","clone_into","clone_into","color","deref","descent","downcast","downcast","downcast","downcast","fmt","fmt","fmt","fmt","font","from","from","from","from","from","glyph","glyphs","height","into","into","into","into","into_color","into_color","into_color","into_color","into_color_unclamped","into_color_unclamped","into_color_unclamped","into_color_unclamped","line_gap","line_height","location","location","metrics","render_baseline_at","size","source","source_offset","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_color","try_into_color","try_into_color","try_into_color","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","width","width","Texture","adapt_into_using","borrow","borrow_mut","clone","clone_into","downcast","fmt","from","from","id","image","into","into_color","into_color_unclamped","load","new","rgba_pixels","size","to_owned","try_from","try_from","try_into","try_into_color","type_id","upcast","window_icon"],"q":["kludgine_core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine_core::Error","","","","kludgine_core::frame_renderer","","","","","","","","","","","","","","","","","","kludgine_core::math","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine_core::preludekludgine_core::scene","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine_core::scene::Element","","","","","kludgine_core::scene::SceneEvent","","kludgine_core::shapekludgine_core::shape::PathEvent","","","","","","","","","","","","","kludgine_core::spritekludgine_core::sprite::SpriteSourceLocation","","kludgine_core::text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine_core::text::bundled_fontskludgine_core::text::prepared","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kludgine_core::texture","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A RGBA color with f32 components.","All errors that <code>kludgine-core</code> can return.","An error opening an image.","The sprite’s current tag has no frames.","An error parsing Json.","Alias for <code>std::result::Result</code> where the error type is <code>Error</code>…","An error while parsing sprite data.","An error while rendering shapes.","","","","","","","Renders individual frames. Can be used for offscreen …","","","","Includes an Aseprite sprite sheet and Json export. For …","Embeds a font into your executable.","Embeds a texture in the binary.","","","","Math types for 2d geometry.","A collection of commonly used exports provided by this …","<code>Scene</code> and <code>Target</code> types that are used to draw.","Types for rendering shapes.","","Types for rendering sprites.","Types for rendering text.","Types for managing textures.","","","","","","","","","","","Renders frames created by a <code>Scene</code>.","A callback that can be invoked when a <code>FrameRenderer</code> is …","","","","","","","","","Launches a thread that renders the results of the …","Launches a thread that renders the results of the …","Invoked when the <code>FrameRenderer</code> is fully shut down.","","","","","","A type representing an angle of measurement.","A rectangle that uses two <code>Point</code>s for representation.","A value in a specific unit.","A unit representing physical pixels on a display.","A type representing an x and y coordinate.","A type representing a <code>Point</code> and <code>Size</code>.","Allows converting between <code>UnitA</code> and <code>UnitB</code> by multiplying …","A unit representing Desktop publishing points/PostScript …","A type representing a width and height.","A unit representing","A type representing a vector with magnitudes x and y.","","","","","","","","","","","","","Casts <code>T</code> to <code>NewT</code>.","Returns this value with the new unit. Does not affect the …","","","","","","","","","","","","","","","","","","The non-origin point of the rectangle.","","","","","","","","","","","","","","","Returns a new rectangle using <code>origin</code> and <code>extent</code>.","","The origin of the rectangle.","","","","Returns a new rectangle that rounds the origin up using …","Returns a new rectangle that rounds the origin down using …","","","","","","","","","","","","","","","Attempts to cast <code>T</code> to <code>NewT</code>. If unsuccessful, None is …","","","","","","","","","","","","","","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","A RGBA color with f32 components.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","A value in a specific unit.","Font provides TrueType Font rendering","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Allows converting between <code>UnitA</code> and <code>UnitB</code> by multiplying …","A collection of sprites.","A collection of <code>SpriteSource</code>s.","A collection of sprites from a single <code>Texture</code>.","A sprite’s source location and texture. Cheap to clone.","A sub-location of a joined sprite.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","Equivalent to the CSS color keywords of the same name.","","","","","","","","","","Returns the alpha component.","","Returns the blue component.","","","","","","","Returns this value with the new unit. Does not affect the …","","","","","","","","","","Darkens the color by <code>amount</code>.","","","","","","","","The relative destination when rendering.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the inner value","Returns the scaling ratio.","Returns the green component.","","","","","","","","","","Returns the inverse of this scale.","","Lightens the color by <code>amount</code>.","The location of the sprite","Returns the larger value of <code>self</code> and <code>rhs</code>.","Returns the smaller value of <code>self</code> and <code>rhs</code>.","","","","","","","","","","Equivalent to the CSS color keywords of the same name.","Returns a new figure with <code>value</code>.","Returns a new scale with the given <code>ratio</code>.","","","","","","","","","Returns the red component.","","","","","","","Returns the color as an f32 array.","","","","The source rectangle.","Returns the sprite referred to by <code>tile</code>.","","","","","The source texture.","The texture.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns if the color has a non-zero alpha value.","Returns a new color using red, green, and blue from <code>self</code> …","","","","Begin a new frame with the given size.","An individual render instruction.","Finish the current frame.","The state of keyboard modifier keys.","Render an element.","The main rendering destination, usually interacted with …","An event instructing how to render frames.","A rendered shape.","A rendered sprite.","A render target","A rendered span of text.","","","","","","If true, an alt key is currently depressed.","Returns true if any of <code>keys</code> are currently pressed.","","","","","","","","","","","The curent clipping rect. All drawing calls will be …","Returns a new <code>Target</code> with the intersection of <code>new_clip</code> an …","","","Returns true if the command key/Apple key is pressed. This …","If true, a control key is currently depressed.","","","","","","","Returns the elapsed <code>Duration</code> since the scene was created.","Ends the current frame, allowing it to be rendered.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if this is the first frame being rendered.","The virtual key codes curently depressed.","Returns the currently depressed modifier keys.","Returns a new Scene that emits <code>SceneEvent</code>s to <code>event_sender</code>.","Returns the <code>Instant</code> when the frame began.","The current offset (translation) of drawing calls.","Returns a new <code>Target</code> offset by <code>delta</code> from the current …","Translates <code>point</code> by the current <code>offset</code>, if any.","Translates <code>point</code> by the current <code>offset</code>, if any.","If true, an “Operating System key” is currently …","Returns true if the primary modifier of the current OS is …","Returns the current <code>DisplayScale</code>.","The scene to draw into.","Returns the scene as a mutable reference. Will only …","Sets the DPI scale.","Sets the size of the scene.","Sets the <code>Theme</code>.","If true, a shift key is currently depressed.","Returns the current size of the scene in <code>Scaled</code> units.","Returns the current size of the scene in <code>Pixels</code> units.","Begins a new frame with the current size.","Returns the currently set <code>Theme</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","The current clipping rect.","The current clipping rect.","The span being rendered.","The sprite being rendered.","","The frame size to render.","A batch of shapes that can be rendered together.","Begins a path. Must be at the start.","A control point used to create curves.","A cubic curve (two control points).","Ends the path. Must be the last entry.","A point on a <code>Path</code>.","Shape fill options.","A straight line segment.","A geometric shape defined by a path.","Builds a <code>Path</code>.","An entry in a <code>Path</code>.","A quadratic curve (one control point).","A 2d shape.","A shape stroke (outline) options.","","","","","","","","","","","","","","","","","","","","","","Returns the built path.","Returns the path event with the new unit. Does not alter …","Returns the path with the new unit. Does not alter the …","Returns the shape with the geometry casted to the unit …","Returns a circle with <code>center</code> and <code>radius</code>.","","","","","","","","","","","","","Closes the path, connecting the current location to the …","The color to fill.","The color to stroke the shape’s with.","Create a cubic curve from the current location to <code>end_at</code> …","","","","","","","","","","","","","Builder-style function. Set <code>fill</code> and returns self.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a straight line from the current location to <code>end_at</code>.","Builder-style function. Sets <code>options.line_width</code> and return …","","","","Creates a new path with the initial position <code>start_at</code>.","Returns a solid fill of <code>color</code> with default options.","Creates a new instance using <code>color</code> with default options.","The options to use while filling.","The options for drawing the stroke.","Returns a closed polygon created with <code>points</code>.","Create a quadratic curve from the current location to …","Returns a rectangle.","Renders the shape within <code>scene</code>. Uses the coordinates in …","Renders the shape at <code>location</code> within <code>scene</code>.","Builder-style function. Set <code>stroke</code> and returns self.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builder-style function. Sets <code>options</code> and return self.","The location to begin at.","Whether the path should be closed.","The control point for the curve.","The first control point for the curve.","The second control point for the curve.","The start location of the path.","The origin of the line.","The origin of the curve.","The origin of the curve.","The end location of the path.","The end location of the line.","The end location of the curve.","The end location of the curve.","The animation mode of the sprite.","Iterate frames in order. When at the end, reset to the …","A joined series of images. Useful for constructing a 32x32 …","The corresponding shader source type in <code>easygpu_lyon</code> for …","The uncorrected Rgb colorspace. Used as a …","Iterate frames starting at the beginning and continuously …","A single rectangle.","A rendered sprite.","Iterate frames in reverse order. When at the start, reset …","A sprite is a renderable graphic with optional animations.","An animation of one or more <code>SpriteFrame</code>s.","A collection of <code>SpriteAnimation</code>s. This is an immutable …","A collection of sprites.","A single frame for a <code>SpriteAnimation</code>.","A collection of <code>SpriteSource</code>s.","A rotation of a sprite.","A collection of sprites from a single <code>Texture</code>.","A sprite’s source location and texture. Cheap to clone.","A sprite location.","A sub-location of a joined sprite.","The Srgb colorspace. Used as a <code>VertexShaderSource</code> in …","Defines a shader source for sprites.","","","","","","","","","","","","","","","Adds a collection from <code>sheet</code> using <code>converter</code> to convert …","Adds all sprites from <code>sheet</code>.","The angle to rotate around <code>screen_location</code>.","Returns the animation for <code>tag</code>.","The animations that form this sprite.","Returns a rotation around <code>location</code>.","Returns a rotation around the center of the shape.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the bounding box of the source rect.","","","","","","","","","","","","","","","","","","","","","","","","","Retrieve the current animation frame, if set and valid.","Returns the current tag.","","","","The relative destination when rendering.","Returns the destination with the source’s size.","","","","","","","","","","","","","","","The length the frame should be displayed. <code>None</code> will act as …","Creates a sprite source for an entire texture.","","","","","","","","","","","","","The frames of the animation.","","","","","","","","","","","","","","","","Creates a collection from <code>sheet</code> using <code>converter</code> to convert …","Gets the current frame after advancing the animation for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a sprite by joining multiple rectangular areas …","Creates a sprite by joining an iterator of <code>SpriteSource</code>s …","Loads Aseprite JSON export format, when using the correct …","The location of the sprite","The location to rotate the sprite around. If not …","For merging multiple Sprites that have no tags within them","The mode of the animation.","Creates a new collection with <code>sprites</code>.","Creates a new sprite sheet, diving <code>texture</code> into a grid of …","Creates a new sprite source with the location and textuer …","Returns a new sprite with <code>animations</code>.","Creates a new collection from <code>animations</code>.","Creates a new animation with <code>frames</code> and …","Creates a new frame with <code>source</code> and no duration.","Returns a value that performs no rotation.","Returns the amount of time remaining until the next frame …","Renders the sprite at <code>location</code> with <code>rotation</code> into <code>scene</code>.","Renders the sprite with <code>alpha</code> at <code>location</code> with <code>rotation</code> …","Renders the sprite with <code>alpha</code> within <code>bounds</code> with <code>rotation</code> …","Renders the sprite with <code>alpha</code> within <code>bounds</code> with <code>rotation</code> …","Renders the sprite with <code>alpha</code> within <code>bounds</code> with <code>rotation</code> …","Renders the sprite within <code>bounds</code> (stretching if needed) …","The sampler format expected.","The sampler format expected.","Sets the current tag for the animation. If the tag …","The shader executable.","","","Creates an instance from a texture. This creates a …","Returns the size of the bounds.","The source rectangle.","The source to render.","Returns the sprite referred to by <code>tile</code>.","","","Returns the sprites identified by each element in <code>iterator</code> …","Returns all of the requested <code>tiles</code>.","Returns all of the requested <code>tiles</code>.","Returns all of the requested <code>tiles</code>.","Returns the sprites identified by each element in <code>iterator</code>.","The source texture.","The texture.","The texture format expected.","","","Returns the size of the tiles within this sheet.","","","","","","","","","","","","","","","","","","","","","","Returns a collection of all tiles in the sheet  as","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builder-style function. Sets <code>duration</code> and returns self.","Builder-style function. Sets <code>mode</code> and returns self.","","","Font provides TrueType Font rendering","Text rendering functionality","","","","","","","Feature-flag enabled fonts that are licensed under APL 2.0","","","","","Returns the name of the font’s family, if available.","","","","Returns the unique ID of the font. This ID depends on load …","","","","","","","Measures the vertical metrics for a given size.","Prepares <code>text</code> to be rendered with the provided settings.","Types for handling perpared text.","","","","Try to load a font from <code>bytes</code>.","","","","","","","","","Roboto Regular font, licensed under APL 2.0, feature flag …","Roboto Black font, licensed under APL 2.0, feature flag …","Roboto Black-Italic font, licensed under APL 2.0, feature …","Roboto Bold font, licensed under APL 2.0, feature flag …","Roboto Bold-Italic font, licensed under APL 2.0, feature …","Roboto Italic font, licensed under APL 2.0, feature flag …","Roboto Light font, licensed under APL 2.0, feature flag …","Roboto Light-Italic font, licensed under APL 2.0, feature …","Roboto Medium font, licensed under APL 2.0, feature flag …","Roboto Medium-Italic font, licensed under APL 2.0, feature …","Roboto  font, licensed under APL 2.0, feature flag …","Roboto Thin-Italic font, licensed under APL 2.0, feature …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Information about a font glyph","A formatted span of text that is ready to render. Cheap to …","The shared data of a <code>PreparedSpan</code>.","A vertical metrics measurement.","","","","","The amount of pixels above the baseline.","","","","","","","","","THe characters that compose this span.","","","","","The color to render.","","The amount of pixels below the baseline. Typically a …","","","","","","","","","The font being rendered.","","","","","","The positioned glyph.","The glyphs that will be rendered.","The height of the ascent and descent combined.","","","","","","","","","","","","","The amount of pixels to allow between lines.","The total height of the line.","The location of the glyph, relative to the span start.","The location of the span.","The vertical metrics of the span.","Renders the text in <code>scene</code> with the baseline at <code>location</code>","The font size.","The character responsible for this glyph.","The offset of the glyph within the source string.","","","","","","","","","","","","","","","","","","","","","","","The width of the glyph.","The total width of the span.","An image that can be used as a sprite. Cheap to clone.","","","","","","","","","","The unique ID of this texture. This depends on load order …","The image behind the texture.","","","","Loads a texture from an image at <code>path</code>","Creates a new texture from an image.","Returns the raw image data.","Returns the size of the image.","","","","","","","","Converts the underlying image into a format compatible …"],"i":[0,0,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,0,0,0,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,1,1,2,3,4,5,0,0,6,6,6,6,6,6,6,6,6,6,7,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,8,8,9,8,8,8,8,8,9,8,9,8,8,8,8,9,8,9,8,9,8,8,8,8,9,8,8,9,8,8,8,8,8,9,8,9,8,8,8,9,8,9,8,9,8,8,8,8,8,8,8,8,8,8,9,8,9,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,8,9,8,9,8,8,8,9,8,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,11,11,10,11,12,11,11,11,11,10,11,10,10,11,12,10,11,12,11,11,10,11,12,10,11,12,11,12,10,10,11,11,11,11,11,12,13,11,11,11,11,11,10,11,12,10,11,12,11,12,11,10,11,12,10,10,10,10,11,11,11,11,12,12,12,11,12,10,10,11,12,10,11,12,10,11,12,12,11,10,14,11,11,11,11,11,12,11,11,10,12,11,10,11,12,11,11,11,12,12,12,11,12,10,11,11,11,11,11,11,10,11,11,12,13,15,11,11,11,11,16,14,11,11,11,11,11,11,11,11,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,10,11,12,10,11,12,10,11,12,11,11,10,11,12,10,10,11,11,11,17,0,17,0,17,0,0,18,18,0,18,17,19,18,20,21,19,20,17,19,18,20,21,17,19,18,20,21,21,21,21,21,19,19,21,17,19,18,20,21,20,20,18,20,21,17,19,18,20,21,21,21,17,19,18,20,21,17,19,18,20,21,17,19,18,20,21,20,20,20,20,20,21,21,21,21,19,19,20,21,21,20,20,20,19,20,20,20,20,21,17,19,18,20,21,17,19,18,20,21,17,19,18,20,21,17,19,18,20,21,17,19,18,20,21,22,23,24,24,23,25,26,0,27,0,27,27,0,0,27,0,0,0,27,0,0,28,29,30,27,31,32,33,28,29,30,27,31,32,33,28,29,30,27,31,32,33,28,27,31,33,33,29,30,27,31,32,33,29,30,27,31,32,33,28,30,32,28,29,30,31,32,33,28,29,30,27,31,32,33,33,29,30,27,31,32,33,28,29,30,27,31,31,32,33,28,29,30,27,31,32,33,28,29,30,27,31,32,33,28,29,30,27,31,32,33,28,32,27,31,33,28,30,32,30,32,33,28,33,33,33,33,29,30,27,31,32,33,27,27,27,31,31,31,33,33,33,27,27,27,31,31,31,33,33,33,27,27,27,31,31,31,33,33,33,28,29,30,27,31,32,33,28,29,30,27,31,32,33,28,29,30,27,31,32,33,28,29,30,27,31,32,33,28,29,30,27,31,32,33,32,34,35,36,37,37,35,38,36,37,35,38,36,37,0,39,40,41,0,39,40,0,39,0,0,0,0,0,0,0,0,0,0,0,0,0,42,43,44,16,14,40,13,39,45,46,47,48,49,50,44,44,50,46,45,50,50,42,43,44,16,14,40,13,39,45,46,47,48,49,50,42,43,44,16,14,40,13,39,45,46,47,48,49,50,40,44,16,14,40,13,39,45,46,47,48,49,50,44,16,14,40,13,39,45,46,47,48,49,50,45,45,44,50,44,13,13,42,43,44,16,14,40,13,39,45,46,47,48,49,50,48,14,44,16,14,40,13,39,45,46,47,48,49,50,47,42,43,44,16,14,40,13,39,45,45,46,47,48,49,50,44,45,42,43,44,16,14,40,13,39,45,46,47,48,49,50,42,43,44,16,14,40,13,39,45,46,47,48,49,50,42,43,44,16,14,40,13,39,45,46,47,48,49,50,44,14,14,45,14,50,45,47,44,16,14,45,46,47,48,50,45,14,14,14,14,14,14,41,41,45,41,42,43,45,40,13,48,15,44,16,16,15,15,15,16,16,14,41,42,43,16,44,16,14,40,13,39,45,46,47,48,49,50,50,50,50,50,50,50,50,50,50,16,42,43,44,16,14,40,13,39,45,46,47,48,49,50,42,43,44,16,14,40,13,39,45,46,47,48,49,50,42,43,44,16,14,40,13,39,45,46,47,48,49,50,42,43,44,16,14,40,13,39,45,46,47,48,49,50,42,43,44,16,14,40,13,39,45,46,47,48,49,50,48,47,51,52,0,0,53,54,53,54,53,54,0,54,54,53,54,54,54,53,54,54,53,54,53,54,53,54,54,53,0,54,53,54,54,53,54,53,54,53,54,53,54,0,0,0,0,0,0,0,0,0,0,0,0,55,56,57,58,59,60,61,62,63,64,65,66,55,56,57,58,59,60,61,62,63,64,65,66,55,56,57,58,59,60,61,62,63,64,65,66,55,56,57,58,59,60,61,62,63,64,65,66,55,56,57,58,59,60,61,62,63,64,65,66,55,56,57,58,59,60,61,62,63,64,65,66,55,56,57,58,59,60,61,62,63,64,65,66,55,56,57,58,59,60,61,62,63,64,65,66,55,56,57,58,59,60,61,62,63,64,65,66,55,56,57,58,59,60,61,62,63,64,65,66,55,56,57,58,59,60,61,62,63,64,65,66,55,56,57,58,59,60,61,62,63,64,65,66,55,56,57,58,59,60,61,62,63,64,65,66,55,56,57,58,59,60,61,62,63,64,65,66,55,56,57,58,59,60,61,62,63,64,65,66,0,0,0,0,67,68,69,70,67,67,68,69,70,67,68,69,70,69,67,68,67,68,69,68,67,67,68,69,70,67,68,69,70,69,67,67,68,69,70,70,69,67,67,68,69,70,67,68,69,70,67,68,69,70,67,67,70,68,69,68,69,70,70,67,68,67,68,69,70,67,68,69,70,67,68,69,70,67,68,69,70,67,68,69,70,70,69,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71],"f":[null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[["imageerror",4]]],[[["error",4]]],[[]],null,null,null,[[]],[[]],[[]],null,null,null,null,[[],[["option",4,["error"]],["error",8]]],null,null,null,[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],["typeid",3]],[[],["option",4]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["sceneevent",4],["receiver",3,["sceneevent"]],["renderer",3]]],[[["sceneevent",4],["arc",3,["atomicbool"]],["shutdowncallback",8],["renderer",3],["atomicbool",3],["receiver",3,["sceneevent"]]]],[[]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],["typeid",3]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,null,[[["extentsrect",3]],["bool",15]],[[["extentsrect",3]],["bool",15]],[[]],[[]],[[["extentsrect",3]],["bool",15]],[[],["extentsrect",3]],[[],["rect",4]],[[],["sizedrect",3]],[[]],[[]],[[]],[[]],[[],["extentsrect",3]],[[],["extentsrect",3]],[[],["extentsrect",3]],[[],["unknown",3]],[[],["extentsrect",3]],[[]],[[]],[[],["unknown",3]],[[],["extentsrect",3]],[[]],[[]],[[],["u32",15]],[[],["result",4]],[[],[["result",4,["extentsrect"]],["extentsrect",3]]],[[["scale",3]]],[[]],[[]],[[["extentsrect",3]],["bool",15]],[[],["bool",15]],null,[[],["extentsrect",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[]],[[]],[[],["figure",3]],[[],["extentsrect",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["scale",3]]],[[["point",3]],["extentsrect",3]],[[],["point",3]],null,[[["extentsrect",3]],["bool",15]],[[["extentsrect",3]],["bool",15]],[[],["extentsrect",3]],[[],["extentsrect",3]],[[],["extentsrect",3]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[],["extentsrect",3]],[[],[["option",4,["extentsrect"]],["extentsrect",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],["typeid",3]],[[],["typeid",3]],[[["u32",15],["extentsrect",3]],["bool",15]],[[["u32",15],["extentsrect",3]],["bool",15]],[[],["option",4]],[[],["option",4]],[[],["figure",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["figure",3]],["bool",15]],[[["figure",3]],["bool",15]],[[]],[[]],[[]],[[["figure",3]]],[[]],[[]],[[["figure",3]]],[[],["f32",15]],[[["figure",3]],["bool",15]],[[],["f32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["figure",3]],[[],["figure",3]],[[],["color",3]],[[],["figure",3]],[[],["scale",3]],[[]],[[]],[[]],[[["figure",3]],["ordering",4]],[[["scale",3]],["ordering",4]],[[["f32",15]]],[[],["color",3]],[[],["figure",3]],[[]],[[]],[[],["u32",15]],[[],[["figure",3],["result",4,["figure"]]]],[[],[["scale",3],["result",4,["scale"]]]],null,[[["scale",3]]],[[]],[[["figure",3]]],[[["figure",3]]],[[]],[[]],[[]],[[]],[[["color",3]],["bool",15]],[[["figure",3]],["bool",15]],[[["scale",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["figure",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["formatter",3]],[["result",4,["error"]],["error",3]]],[[["srgb",6]]],[[["rgba",3]]],[[]],[[["srgba",6]]],[[],["figure",3]],[[]],[[]],[[],[["option",4,["figure"]],["figure",3]]],[[],["scale",3]],[[]],[[]],[[]],[[]],[[],["f32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["scale",3]],[[],["bool",15]],[[["f32",15]]],null,[[["figure",3]],["figure",3]],[[["figure",3]],["figure",3]],[[["figure",3]]],[[]],[[["scale",3]]],[[["scale",3]]],[[["figure",3]]],[[]],[[["color",3]],["bool",15]],[[["scale",3]],["bool",15]],[[]],[[["f32",15]]],[[],["figure",3]],[[],["scale",3]],[[]],[[]],[[],["figure",3]],[[],["scale",3]],[[]],[[]],[[["figure",3]],[["option",4,["ordering"]],["ordering",4]]],[[["scale",3]],[["option",4,["ordering"]],["ordering",4]]],[[],["f32",15]],[[["figure",3]],["bool",15]],[[["figure",3]],["bool",15]],[[]],[[["figure",3]]],[[]],[[["figure",3]]],[[]],[[],["figure",3]],[[],["result",4]],[[],["result",4]],null,[[],[["option",4,["spritesource"]],["spritesource",3]]],[[]],[[["figure",3]]],[[]],[[["figure",3]]],null,null,[[],[["option",4,["f32"]],["f32",15]]],[[],[["option",4,["f64"]],["f64",15]]],[[],[["i128",15],["option",4,["i128"]]]],[[],[["option",4,["i16"]],["i16",15]]],[[],[["i32",15],["option",4,["i32"]]]],[[],[["i64",15],["option",4,["i64"]]]],[[],[["i8",15],["option",4,["i8"]]]],[[],[["option",4,["isize"]],["isize",15]]],[[]],[[]],[[]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[],[["u128",15],["option",4,["u128"]]]],[[],[["option",4,["u16"]],["u16",15]]],[[],[["option",4,["u32"]],["u32",15]]],[[],[["option",4,["u64"]],["u64",15]]],[[],[["option",4,["u8"]],["u8",15]]],[[],[["usize",15],["option",4,["usize"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["figure",3],["u32",15]],["bool",15]],[[["figure",3],["u32",15]],["bool",15]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["bool",15]],[[["f32",15]]],[[]],[[]],[[],["figure",3]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["pixels",3],["u32",15],["sizedrect",3,["u32","pixels"]]]],[[],["target",3]],[[]],[[],["bool",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],[["option",4,["duration"]],["duration",3]]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["arc",3,["scene"]],["scene",3]]],[[]],[[["scene",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,[[],["modifiers",3]],[[["sceneevent",4],["sender",3,["sceneevent"]],["theme",4]]],[[],["instant",3]],null,[[["pixels",3],["f32",15],["vector",6,["f32","pixels"]]]],[[["point",6,["f32","scaled"]],["f32",15],["scaled",6]],[["point",6,["f32","scaled"]],["f32",15],["scaled",6]]],[[["pixels",3],["point",6,["f32","pixels"]],["f32",15]],[["pixels",3],["point",6,["f32","pixels"]],["f32",15]]],null,[[],["bool",15]],[[],["displayscale",3]],null,[[],[["scene",3],["option",4,["scene"]]]],[[["pixels",3],["f32",15],["points",3],["scale",3,["f32","points","pixels"]]]],[[["pixels",3],["size",6,["u32","pixels"]],["u32",15]]],[[["theme",4]]],null,[[],[["f32",15],["scaled",6],["size",6,["f32","scaled"]]]],[[],[["pixels",3],["size",6,["u32","pixels"]],["u32",15]]],[[]],[[],["theme",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["path",3]],[[],["pathevent",4]],[[],["path",3]],[[],["shape",3]],[[["figure",3,["f32"]],["f32",15],["point",6,["f32"]]]],[[],["batch",3]],[[],["fill",3]],[[],["pathevent",4]],[[],["path",3]],[[],["stroke",3]],[[],["shape",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["endpoint",6],["controlpoint",6]]],[[],["batch",3]],[[],["fill",3]],[[],["path",3]],[[],["stroke",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["fill",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["endpoint",6]]],[[["into",8,["figure"]],["figure",3,["f32","scaled"]]]],[[["f32",15],["scale",3,["f32"]]]],[[["f32",15],["scale",3,["f32"]]]],[[["f32",15],["scale",3,["f32"]]]],[[["endpoint",6]]],[[["color",3]]],[[["color",3]]],null,null,[[]],[[["endpoint",6],["controlpoint",6]]],[[]],[[["target",3]]],[[["target",3]]],[[["stroke",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["strokeoptions",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["fn",8],["spritesheet",3]]],[[["spritesheet",3]]],null,[[["option",4]],[["option",4,["spriteanimation"]],["spriteanimation",3]]],null,[[["angle",6],["f32",15],["point",6,["f32"]]]],[[["angle",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["u32",15],["rect",6,["u32"]]]],[[],["spritemap",3]],[[],["spritesheet",3]],[[],["spritesource",3]],[[],["spritesourcelocation",4]],[[],["spritesourcesublocation",3]],[[],["animationmode",4]],[[],["sprite",3]],[[],["spriteanimations",3]],[[],["spriteanimation",3]],[[],["spriteframe",3]],[[],["renderedsprite",3]],[[],["spriterotation",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["result",6,["spritesource"]],["spritesource",3]]],[[],[["str",15],["option",4,["str"]]]],[[]],[[]],[[],["hashmap",3]],null,[[],[["u32",15],["rect",6,["u32"]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["texture",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["spriteanimations",3]]],[[]],[[]],[[]],[[]],[[]],[[["fn",8],["spritesheet",3]]],[[["option",4,["duration"]],["duration",3]],[["result",6,["spritesource"]],["spritesource",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["texture",3],["intoiterator",8]]],[[["intoiterator",8]]],[[["texture",3],["str",15]],["result",6]],null,null,[[["intoiterator",8]]],null,[[["hashmap",3,["spritesource"]],["spritesource",3]]],[[["size",6,["u32"]],["u32",15],["vec",3],["texture",3]]],[[["texture",3],["u32",15],["rect",6,["u32"]]]],[[["spriteanimations",3]]],[[["option",4,["string"]],["hashmap",3,["option","spriteanimation"]],["spriteanimation",3]]],[[["spriteframe",3],["vec",3,["spriteframe"]]]],[[["spritesource",3]]],[[]],[[],[["option",4,["duration"]],["result",6,["option"]]]],[[["target",3]]],[[["target",3],["f32",15]]],[[["target",3],["f32",15]]],[[["target",3],["f32",15]]],[[["target",3],["f32",15]]],[[["target",3]]],[[],["textureformat",4]],[[],["textureformat",4]],[[["string",3],["into",8,["string"]],["option",4]],["result",6]],[[]],[[]],[[]],[[["texture",3]]],[[],[["size",6,["u32"]],["u32",15]]],null,null,[[],[["option",4,["spritesource"]],["spritesource",3]]],[[],[["option",4,["spritesource"]],["spritesource",3]]],[[],[["option",4,["spritesource"]],["spritesource",3]]],[[["intoiterator",8]],["spritemap",3]],[[],[["vec",3,["spritesource"]],["spritesource",3]]],[[],[["vec",3,["spritesource"]],["spritesource",3]]],[[],[["vec",3,["spritesource"]],["spritesource",3]]],[[["intoiterator",8]],[["vec",3,["spritesource"]],["spritesource",3]]],null,null,[[],["textureformat",4]],[[],["textureformat",4]],[[],["textureformat",4]],[[],[["size",6,["u32"]],["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[],["spritemap",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["duration",3]]],[[["animationmode",4]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["font",3]],[[]],[[]],[[]],[[],[["string",3],["option",4,["string"]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[["f32",15],["figure",3,["f32","pixels"]],["pixels",6]],["vmetrics",3]],[[["f32",15],["font",3],["scaled",6],["color",3],["str",15],["figure",3,["f32","scaled"]],["target",3]],["preparedspan",3]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["font",3]],[[],["font",3]],[[],["font",3]],[[],["font",3]],[[],["font",3]],[[],["font",3]],[[],["font",3]],[[],["font",3]],[[],["font",3]],[[],["font",3]],[[],["font",3]],[[],["font",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,null,[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["vmetrics",3]],[[],["preparedspan",3]],[[]],[[]],null,[[]],null,[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[["vmetrics",3]]],[[]],[[]],[[]],[[]],null,null,[[],[["f32",15],["figure",3,["f32","pixels"]],["pixels",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],[["f32",15],["figure",3,["f32","pixels"]],["pixels",6]]],[[],[["f32",15],["point",6,["f32","pixels"]],["pixels",6]]],null,null,[[["target",3]],["result",6]],null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],[["f32",15],["figure",3,["f32","pixels"]],["pixels",6]]],null,null,[[]],[[]],[[]],[[],["texture",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["dynamicimage",4]]],[[]],[[],["u64",15]],null,[[]],[[]],[[]],[[["asref",8,["path"]],["path",3]],["result",6]],[[["rgbaimage",6],["arc",3,["rgbaimage"]]]],[[],[["vec",3,["u8"]],["u8",15]]],[[],[["size",6,["u32"]],["u32",15]]],[[]],[[],["result",4]],[[],["result",6]],[[],["result",4]],[[],[["result",4,["outofbounds"]],["outofbounds",3]]],[[],["typeid",3]],[[],["option",4]],[[],[["icon",3],["result",4,["icon","badicon"]],["badicon",4]]]],"p":[[4,"Error"],[13,"Image"],[13,"Json"],[13,"Tessellation"],[13,"SpriteParse"],[3,"FrameRenderer"],[8,"ShutdownCallback"],[3,"ExtentsRect"],[3,"Unknown"],[3,"Color"],[3,"Figure"],[3,"Scale"],[3,"SpriteSourceSublocation"],[3,"SpriteSource"],[8,"SpriteCollection"],[3,"SpriteSheet"],[4,"SceneEvent"],[4,"Element"],[3,"Modifiers"],[3,"Scene"],[3,"Target"],[13,"Shape"],[13,"Sprite"],[13,"Text"],[13,"Render"],[13,"BeginFrame"],[4,"PathEvent"],[3,"PathBuilder"],[3,"Batch"],[3,"Fill"],[3,"Path"],[3,"Stroke"],[3,"Shape"],[13,"Begin"],[13,"End"],[13,"Quadratic"],[13,"Cubic"],[13,"Line"],[4,"AnimationMode"],[4,"SpriteSourceLocation"],[8,"VertexShaderSource"],[3,"Srgb"],[3,"Normal"],[3,"SpriteMap"],[3,"Sprite"],[3,"SpriteAnimations"],[3,"SpriteAnimation"],[3,"SpriteFrame"],[3,"RenderedSprite"],[3,"SpriteRotation"],[13,"Rect"],[13,"Joined"],[4,"Text"],[3,"Font"],[3,"ROBOTO"],[3,"ROBOTO_ITALIC"],[3,"ROBOTO_BLACK"],[3,"ROBOTO_BLACK_ITALIC"],[3,"ROBOTO_BOLD"],[3,"ROBOTO_BOLD_ITALIC"],[3,"ROBOTO_LIGHT"],[3,"ROBOTO_LIGHT_ITALIC"],[3,"ROBOTO_MEDIUM"],[3,"ROBOTO_MEDIUM_ITALIC"],[3,"ROBOTO_THIN"],[3,"ROBOTO_THIN_ITALIC"],[3,"VMetrics"],[3,"PreparedSpan"],[3,"PreparedSpanData"],[3,"GlyphInfo"],[3,"Texture"]]},\
"xtask":{"doc":"","t":[4,3,13,13,11,11,11,11,11,5,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12],"n":["Args","CodeCoverageConfig","CompileShaders","GenerateCodeCoverageReport","borrow","borrow","borrow_mut","borrow_mut","clap","compile_shaders","fmt","from","from","from_clap","ignore_paths","into","into","main","try_from","try_from","try_into","try_into","type_id","type_id","install_dependencies"],"q":["xtask","","","","","","","","","","","","","","","","","","","","","","","","xtask::Args"],"d":["","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,2,1,2,1,1,0,1,2,1,1,2,2,1,0,2,1,2,1,2,1,3],"f":[null,null,null,null,[[]],[[]],[[]],[[]],[[],["app",3]],[[],[["result",4,["error"]],["error",3]]],[[["formatter",3]],["result",6]],[[]],[[]],[[["argmatches",3]]],[[],[["string",3],["vec",3,["string"]]]],[[]],[[]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null],"p":[[4,"Args"],[3,"CodeCoverageConfig"],[13,"GenerateCodeCoverageReport"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};
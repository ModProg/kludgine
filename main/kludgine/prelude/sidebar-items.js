initSidebarItems({"enum":[["AnimationMode",""],["Dimension",""],["ElementState","Describes the input state of a key."],["Event","An input Event"],["EventStatus",""],["MouseButton","Describes a button of a mouse controller."],["MouseScrollDelta","Describes a difference in the mouse scroll wheel state."],["PathEvent",""],["TouchPhase","Describes touch-screen input state."],["VirtualKeyCode","Symbolic name for a keyboard key."]],"macro":[["include_aseprite_sprite",""],["include_font",""],["include_texture",""]],"mod":[["bundled_fonts","Feature-flag enabled fonts that are licensed under APL 2.0"]],"struct":[["Batch",""],["Color","A RGBA color with f32 components."],["DeviceId","Identifier of an input device."],["Fill",""],["Font","Font provides TrueType Font rendering"],["FrameRenderer",""],["InputEvent","An Event from a device"],["Length","A one-dimensional distance, with value represented by `T` and unit of measurement `Unit`."],["OpenWindow",""],["Path",""],["PathBuilder",""],["PreparedSpan",""],["Raw","A unit representing physical pixels on a display."],["RedrawStatus",""],["Runtime","Runtime is designed to consume the main thread. For cross-platform compatibility, ensure that you call Runtime::run from thee main thread."],["Scale","A scaling factor between two different units of measurement."],["Scaled","A unit representing Desktop publishing points/PostScript points. Measurements in this scale are equal to 1/72 of an imperial inch."],["Scene",""],["Shape",""],["SingleWindowApplication",""],["Sprite",""],["SpriteAnimation",""],["SpriteAnimations",""],["SpriteFrame",""],["SpriteMap",""],["SpriteRotation",""],["SpriteSheet",""],["SpriteSource",""],["SpriteSourceSublocation",""],["Stroke",""],["Surround",""],["Target",""],["Text",""],["Texture",""],["Unknown",""],["WindowBuilder",""]],"trait":[["Application",""],["OpenableWindow",""],["PointExt",""],["ShutdownCallback",""],["SizeExt",""],["SpriteCollection",""],["Window","Trait to implement a Window"],["WindowCreator",""]],"type":[["Angle",""],["ControlPoint",""],["Endpoint",""],["KludgineResult","Alias for [`std::result::Result`] where the eroor type is [`Error`]."],["Pixels",""],["Point",""],["Points",""],["Rect",""],["ScanCode","Hardware-dependent keyboard scan code."],["ScreenScale",""],["Size",""],["Vector",""]]});